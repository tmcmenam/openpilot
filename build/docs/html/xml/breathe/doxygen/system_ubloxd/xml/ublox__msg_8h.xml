<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ublox__msg_8h" kind="file" language="C++">
    <compoundname>ublox_msg.h</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">ctime</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="yes">cereal/messaging/messaging.h</includes>
    <includes local="yes">common/util.h</includes>
    <includes local="yes">system/ubloxd/generated/gps.h</includes>
    <includes local="yes">system/ubloxd/generated/glonass.h</includes>
    <includes local="yes">system/ubloxd/generated/ubx.h</includes>
    <incdepgraph>
      <node id="13">
        <label>system/ubloxd/generated/ubx.h</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="10">
        <label>common/util.h</label>
      </node>
      <node id="11">
        <label>system/ubloxd/generated/gps.h</label>
      </node>
      <node id="9">
        <label>cereal/messaging/messaging.h</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/system/ubloxd/ublox_msg.h</label>
        <link refid="ublox__msg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ctime</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="7">
        <label>unordered_map</label>
      </node>
      <node id="12">
        <label>system/ubloxd/generated/glonass.h</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="structublox_1_1ubx__mga__ini__time__utc__t" prot="public">ublox::ubx_mga_ini_time_utc_t</innerclass>
    <innerclass refid="class_ublox_msg_parser" prot="public">UbloxMsgParser</innerclass>
    <innernamespace refid="namespaceublox">ublox</innernamespace>
    <innernamespace refid="namespacestd_1_1string__literals">std::string_literals</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ublox__msg_8h_1afec08c3bae8a9d6d060c4713d6d8b9bb" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int SECS_IN_MIN</definition>
        <argsstring></argsstring>
        <name>SECS_IN_MIN</name>
        <initializer>= 60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="19" column="11" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1ace4ceabab999811dcc77be5f3d79046f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int SECS_IN_HR</definition>
        <argsstring></argsstring>
        <name>SECS_IN_HR</name>
        <initializer>= 60 * SECS_IN_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="20" column="11" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a870d8173a51873257f22835b9b86c2b0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int SECS_IN_DAY</definition>
        <argsstring></argsstring>
        <name>SECS_IN_DAY</name>
        <initializer>= 24 * SECS_IN_HR</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="21" column="11" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1aa529e743189965849190c874e1ed3532" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int SECS_IN_WEEK</definition>
        <argsstring></argsstring>
        <name>SECS_IN_WEEK</name>
        <initializer>= 7 * SECS_IN_DAY</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="22" column="11" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a1d127017fb298b889f4ba24752d08b8e" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="32" column="13" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1ab22abc2906422da61885ac6c8e6a1a59" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="33" column="13" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a84f6dce5e86b6c18a064c988a48922cb" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t ref</definition>
        <argsstring></argsstring>
        <name>ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="34" column="13" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a7a18d05083093c86b8b4f8a2b5521171" prot="public" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t leapSecs</definition>
        <argsstring></argsstring>
        <name>leapSecs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="35" column="12" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a57ca98d8f6d4baf0fe41c583c7dcb0d5" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t year</definition>
        <argsstring></argsstring>
        <name>year</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="36" column="14" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a3e00faf7fbf9805e9ec4d2edd6339050" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t month</definition>
        <argsstring></argsstring>
        <name>month</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="37" column="13" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a72369a1087b2aeffe374bb054cb97c12" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t day</definition>
        <argsstring></argsstring>
        <name>day</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="38" column="13" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1ae5af4ff48939d13d480f87e56a9385d6" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t hour</definition>
        <argsstring></argsstring>
        <name>hour</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="39" column="13" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a8ff981ec55c945940f4a0da7d8709b3c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t minute</definition>
        <argsstring></argsstring>
        <name>minute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="40" column="13" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a8459fc4e94de7eefc74991e41779c8fc" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t second</definition>
        <argsstring></argsstring>
        <name>second</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="41" column="13" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a2a2556147677ece60b8aadf4a0d608ed" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t reserved1</definition>
        <argsstring></argsstring>
        <name>reserved1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="42" column="13" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a048317f84621fb38ed0bf8c8255e26f0" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t ns</definition>
        <argsstring></argsstring>
        <name>ns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="43" column="14" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a244ba9eff804c01a46a5e958e5e4fc07" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t tAccS</definition>
        <argsstring></argsstring>
        <name>tAccS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="44" column="14" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a0fc429b055e74830a4583ec37f5c3846" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t reserved2</definition>
        <argsstring></argsstring>
        <name>reserved2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="45" column="14" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ublox__msg_8h_1a4715f087ed13713a407ca032ccc3a170" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t tAccNs</definition>
        <argsstring></argsstring>
        <name>tAccNs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h" line="46" column="14" bodyfile="/tmp/openpilot/system/ubloxd/ublox_msg.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/messaging/messaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/ubloxd/generated/gps.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/ubloxd/generated/glonass.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/ubloxd/generated/ubx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::string_literals;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SECS_IN_MIN<sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SECS_IN_HR<sp/>=<sp/>60<sp/>*<sp/>SECS_IN_MIN;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SECS_IN_DAY<sp/>=<sp/>24<sp/>*<sp/>SECS_IN_HR;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SECS_IN_WEEK<sp/>=<sp/>7<sp/>*<sp/>SECS_IN_DAY;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>protocol<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ublox<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>PREAMBLE1<sp/>=<sp/>0xb5;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>PREAMBLE2<sp/>=<sp/>0x62;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UBLOX_HEADER_SIZE<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UBLOX_CHECKSUM_SIZE<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UBLOX_MAX_MSG_SIZE<sp/>=<sp/>65536;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structublox_1_1ubx__mga__ini__time__utc__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structublox_1_1ubx__mga__ini__time__utc__t" kindref="compound">ubx_mga_ini_time_utc_t</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>type;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>version;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ref;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>leapSecs;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>year;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>month;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>day;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>hour;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>minute;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>second;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reserved1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ns;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>tAccS;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>reserved2;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tAccNs;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}<sp/>__attribute__((packed));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>ubx_add_checksum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(msg.size()<sp/>&gt;<sp/>2);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ck_a<sp/>=<sp/>0,<sp/>ck_b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>msg.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ck_a<sp/>=<sp/>(ck_a<sp/>+<sp/>msg[i])<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ck_b<sp/>=<sp/>(ck_b<sp/>+<sp/>ck_a)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>r<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>r.push_back(ck_a);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>r.push_back(ck_b);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>build_ubx_mga_ini_time_utc(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tm<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structublox_1_1ubx__mga__ini__time__utc__t" kindref="compound">ublox::ubx_mga_ini_time_utc_t</ref><sp/>payload<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.type<sp/>=<sp/>0x10,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.version<sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.ref<sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.leapSecs<sp/>=<sp/>-128,<sp/></highlight><highlight class="comment">//<sp/>Unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.year<sp/>=<sp/>(uint16_t)(1900<sp/>+<sp/>time.tm_year),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.month<sp/>=<sp/>(uint8_t)(1<sp/>+<sp/>time.tm_mon),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.day<sp/>=<sp/>(uint8_t)time.tm_mday,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.hour<sp/>=<sp/>(uint8_t)time.tm_hour,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.minute<sp/>=<sp/>(uint8_t)time.tm_min,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.second<sp/>=<sp/>(uint8_t)time.tm_sec,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.reserved1<sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.ns<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.tAccS<sp/>=<sp/>30,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.reserved2<sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.tAccNs<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(payload)<sp/>==<sp/>24);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\xb5\x62\x13\x40\x18\x00&quot;</highlight><highlight class="normal">s;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>+=<sp/>std::string((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;payload,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(payload));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ubx_add_checksum(msg);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_ublox_msg_parser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ublox_msg_parser" kindref="compound">UbloxMsgParser</ref><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>add_data(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>log_time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*incoming_data,<sp/>uint32_t<sp/>incoming_data_len,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;bytes_consumed);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/>{bytes_in_parse_buf<sp/>=<sp/>0;}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>needed_bytes();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>data()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)msg_parse_buf,<sp/>bytes_in_parse_buf);}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;std::string,<sp/>kj::Array&lt;capnp::word&gt;&gt;<sp/>gen_msg();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>kj::Array&lt;capnp::word&gt;<sp/>gen_nav_pvt(ubx_t::nav_pvt_t<sp/>*msg);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>kj::Array&lt;capnp::word&gt;<sp/>gen_rxm_sfrbx(ubx_t::rxm_sfrbx_t<sp/>*msg);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>kj::Array&lt;capnp::word&gt;<sp/>gen_rxm_rawx(ubx_t::rxm_rawx_t<sp/>*msg);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>kj::Array&lt;capnp::word&gt;<sp/>gen_mon_hw(ubx_t::mon_hw_t<sp/>*msg);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>kj::Array&lt;capnp::word&gt;<sp/>gen_mon_hw2(ubx_t::mon_hw2_t<sp/>*msg);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>kj::Array&lt;capnp::word&gt;<sp/>gen_nav_sat(ubx_t::nav_sat_t<sp/>*msg);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid_cheksum();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid_so_far();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>kj::Array&lt;capnp::word&gt;<sp/>parse_gps_ephemeris(ubx_t::rxm_sfrbx_t<sp/>*msg);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>kj::Array&lt;capnp::word&gt;<sp/>parse_glonass_ephemeris(ubx_t::rxm_sfrbx_t<sp/>*msg);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;int,<sp/>std::unordered_map&lt;int,<sp/>std::string&gt;&gt;<sp/>gps_subframes;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>last_log_time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_in_parse_buf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>msg_parse_buf[ublox::UBLOX_HEADER_SIZE<sp/>+<sp/>ublox::UBLOX_MAX_MSG_SIZE];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>range<sp/>accuracy<sp/>in<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;uint8_t,<sp/>float&gt;<sp/>glonass_URA_lookup<sp/>=</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{<sp/>0,<sp/><sp/>1},<sp/>{<sp/>1,<sp/><sp/><sp/>2},<sp/>{<sp/>2,<sp/>2.5},<sp/>{<sp/>3,<sp/><sp/><sp/>4},<sp/>{<sp/>4,<sp/><sp/>5},<sp/>{5,<sp/>7},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>6,<sp/>10},<sp/>{<sp/>7,<sp/><sp/>12},<sp/>{<sp/>8,<sp/><sp/>14},<sp/>{<sp/>9,<sp/><sp/>16},<sp/>{10,<sp/>32},</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{11,<sp/>64},<sp/>{12,<sp/>128},<sp/>{13,<sp/>256},<sp/>{14,<sp/>512},<sp/>{15,<sp/>1024}};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;int,<sp/>std::unordered_map&lt;int,<sp/>std::string&gt;&gt;<sp/>glonass_strings;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;int,<sp/>std::unordered_map&lt;int,<sp/>long&gt;&gt;<sp/>glonass_string_times;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;int,<sp/>std::unordered_map&lt;int,<sp/>int&gt;&gt;<sp/>glonass_string_superframes;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/system/ubloxd/ublox_msg.h"/>
  </compounddef>
</doxygen>
