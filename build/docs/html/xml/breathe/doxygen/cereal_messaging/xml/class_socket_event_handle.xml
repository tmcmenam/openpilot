<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_socket_event_handle" kind="class" language="C++" prot="public">
    <compoundname>SocketEventHandle</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_socket_event_handle_1a8b9c60a87dc70e558644ed541331a1c0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SocketEventHandle::shm_path</definition>
        <argsstring></argsstring>
        <name>shm_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="44" column="15" bodyfile="/tmp/openpilot/cereal/messaging/event.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_socket_event_handle_1a1e02af52b66a19d5497facdba0946423" prot="private" static="no" mutable="no">
        <type><ref refid="struct_event_state" kindref="compound">EventState</ref> *</type>
        <definition>EventState* SocketEventHandle::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="45" column="14" bodyfile="/tmp/openpilot/cereal/messaging/event.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_socket_event_handle_1a26281e2dc59fff8e019c8bf7467b4267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SocketEventHandle::SocketEventHandle</definition>
        <argsstring>(std::string endpoint, std::string identifier=&quot;&quot;, bool override=true)</argsstring>
        <name>SocketEventHandle</name>
        <param>
          <type>std::string</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>identifier</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>override</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="47" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_socket_event_handle_1a797301e98e95ea15ffc1abb9a742ba8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SocketEventHandle::~SocketEventHandle</definition>
        <argsstring>()</argsstring>
        <name>~SocketEventHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="48" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_socket_event_handle_1acecbfbccb8c97e210652a57197ed7ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SocketEventHandle::is_enabled</definition>
        <argsstring>()</argsstring>
        <name>is_enabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="50" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_socket_event_handle_1a05f4a2cff2bd6afce915a65396ad04e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SocketEventHandle::set_enabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>set_enabled</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="51" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_socket_event_handle_1a6884310f89480eaa3134cfd7923f72b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_event" kindref="compound">Event</ref></type>
        <definition>Event SocketEventHandle::recv_called</definition>
        <argsstring>()</argsstring>
        <name>recv_called</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="52" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_socket_event_handle_1a8543694679ccb4e75c6960793dd82a48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_event" kindref="compound">Event</ref></type>
        <definition>Event SocketEventHandle::recv_ready</definition>
        <argsstring>()</argsstring>
        <name>recv_ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="53" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_socket_event_handle_1adfe68cd4d262daebba52b95ce18bb9db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SocketEventHandle::toggle_fake_events</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>toggle_fake_events</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="55" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_socket_event_handle_1aa4c9fe8be0d964107c7a7d682bd0eda2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SocketEventHandle::set_fake_prefix</definition>
        <argsstring>(std::string prefix)</argsstring>
        <name>set_fake_prefix</name>
        <param>
          <type>std::string</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="56" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_socket_event_handle_1a36954db0e34ca493df205fa6bd84a826" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string SocketEventHandle::fake_prefix</definition>
        <argsstring>()</argsstring>
        <name>fake_prefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="57" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/openpilot/cereal/messaging/event.h" line="42" column="24" bodyfile="/tmp/openpilot/cereal/messaging/event.h" bodystart="42" bodyend="58"/>
    <listofallmembers>
      <member refid="class_socket_event_handle_1a36954db0e34ca493df205fa6bd84a826" prot="public" virt="non-virtual"><scope>SocketEventHandle</scope><name>fake_prefix</name></member>
      <member refid="class_socket_event_handle_1acecbfbccb8c97e210652a57197ed7ccd" prot="public" virt="non-virtual"><scope>SocketEventHandle</scope><name>is_enabled</name></member>
      <member refid="class_socket_event_handle_1a6884310f89480eaa3134cfd7923f72b2" prot="public" virt="non-virtual"><scope>SocketEventHandle</scope><name>recv_called</name></member>
      <member refid="class_socket_event_handle_1a8543694679ccb4e75c6960793dd82a48" prot="public" virt="non-virtual"><scope>SocketEventHandle</scope><name>recv_ready</name></member>
      <member refid="class_socket_event_handle_1a05f4a2cff2bd6afce915a65396ad04e4" prot="public" virt="non-virtual"><scope>SocketEventHandle</scope><name>set_enabled</name></member>
      <member refid="class_socket_event_handle_1aa4c9fe8be0d964107c7a7d682bd0eda2" prot="public" virt="non-virtual"><scope>SocketEventHandle</scope><name>set_fake_prefix</name></member>
      <member refid="class_socket_event_handle_1a8b9c60a87dc70e558644ed541331a1c0" prot="private" virt="non-virtual"><scope>SocketEventHandle</scope><name>shm_path</name></member>
      <member refid="class_socket_event_handle_1a26281e2dc59fff8e019c8bf7467b4267" prot="public" virt="non-virtual"><scope>SocketEventHandle</scope><name>SocketEventHandle</name></member>
      <member refid="class_socket_event_handle_1a1e02af52b66a19d5497facdba0946423" prot="private" virt="non-virtual"><scope>SocketEventHandle</scope><name>state</name></member>
      <member refid="class_socket_event_handle_1adfe68cd4d262daebba52b95ce18bb9db" prot="public" virt="non-virtual"><scope>SocketEventHandle</scope><name>toggle_fake_events</name></member>
      <member refid="class_socket_event_handle_1a797301e98e95ea15ffc1abb9a742ba8a" prot="public" virt="non-virtual"><scope>SocketEventHandle</scope><name>~SocketEventHandle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
