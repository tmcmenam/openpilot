<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="msgq_8h" kind="file" language="C++">
    <compoundname>msgq.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">cstring</includes>
    <includes local="no">string</includes>
    <includes local="no">atomic</includes>
    <includedby refid="impl__msgq_8h" local="yes">/tmp/openpilot/cereal/messaging/impl_msgq.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>atomic</label>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/cereal/messaging/msgq.h</label>
        <link refid="msgq_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/tmp/openpilot/cereal/messaging/impl_msgq.h</label>
        <link refid="impl__msgq_8h_source"/>
      </node>
      <node id="1">
        <label>/tmp/openpilot/cereal/messaging/msgq.h</label>
        <link refid="msgq_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmsgq__header__t" prot="public">msgq_header_t</innerclass>
    <innerclass refid="structmsgq__queue__t" prot="public">msgq_queue_t</innerclass>
    <innerclass refid="structmsgq__msg__t" prot="public">msgq_msg_t</innerclass>
    <innerclass refid="structmsgq__pollitem__t" prot="public">msgq_pollitem_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="msgq_8h_1a747d1e68120dd453c2fc37737a9b4897" prot="public" static="no">
        <name>DEFAULT_SEGMENT_SIZE</name>
        <initializer>(10 * 1024 * 1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="8" column="9" bodyfile="/tmp/openpilot/cereal/messaging/msgq.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msgq_8h_1a816cfaeef4c1fd8e61f84eff59948369" prot="public" static="no">
        <name>NUM_READERS</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="9" column="9" bodyfile="/tmp/openpilot/cereal/messaging/msgq.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msgq_8h_1ada9d7622865275ae4289dff050f1589e" prot="public" static="no">
        <name>ALIGN</name>
        <param><defname>n</defname></param>
        <initializer>((n + (8 - 1)) &amp; -8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="10" column="9" bodyfile="/tmp/openpilot/cereal/messaging/msgq.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msgq_8h_1a86d500a34c624c2cae56bc25a31b12f3" prot="public" static="no">
        <name>UNUSED</name>
        <param><defname>x</defname></param>
        <initializer>(void)x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="12" column="9" bodyfile="/tmp/openpilot/cereal/messaging/msgq.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msgq_8h_1aed1a455ff9f43c449596e8c30647b7c0" prot="public" static="no">
        <name>UNPACK64</name>
        <param><defname>higher</defname></param>
        <param><defname>lower</defname></param>
        <param><defname>input</defname></param>
        <initializer>do {uint64_t tmp = input; higher = tmp &gt;&gt; 32; lower = tmp &amp; 0xFFFFFFFF;} while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="13" column="9" bodyfile="/tmp/openpilot/cereal/messaging/msgq.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="msgq_8h_1a23395d0c2bd3336205b4eb7a161a4812" prot="public" static="no">
        <name>PACK64</name>
        <param><defname>output</defname></param>
        <param><defname>higher</defname></param>
        <param><defname>lower</defname></param>
        <initializer>output = ((uint64_t)higher &lt;&lt; 32) | ((uint64_t)lower &amp; 0xFFFFFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="14" column="9" bodyfile="/tmp/openpilot/cereal/messaging/msgq.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="msgq_8h_1a3dbe6e1973732c422bfa782228e43cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msgq_wait_for_subscriber</definition>
        <argsstring>(msgq_queue_t *q)</argsstring>
        <name>msgq_wait_for_subscriber</name>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="53" column="6" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1a03e1c806478b911c737e19046bc55bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msgq_reset_reader</definition>
        <argsstring>(msgq_queue_t *q)</argsstring>
        <name>msgq_reset_reader</name>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="54" column="6" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1a2f2c13680ce3ff24e5a3c9505ca0a868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int msgq_msg_init_size</definition>
        <argsstring>(msgq_msg_t *msg, size_t size)</argsstring>
        <name>msgq_msg_init_size</name>
        <param>
          <type><ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="56" column="5" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="56" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1a1678cbd0fa0eb2526b0762e250778473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int msgq_msg_init_data</definition>
        <argsstring>(msgq_msg_t *msg, char *data, size_t size)</argsstring>
        <name>msgq_msg_init_data</name>
        <param>
          <type><ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="57" column="5" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="57" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1a9caae5730de0b497eef1ac4a9a5f7b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int msgq_msg_close</definition>
        <argsstring>(msgq_msg_t *msg)</argsstring>
        <name>msgq_msg_close</name>
        <param>
          <type><ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="58" column="5" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="58" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1a937abba2865f00f6b77a44a1eb7f999a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int msgq_new_queue</definition>
        <argsstring>(msgq_queue_t *q, const char *path, size_t size)</argsstring>
        <name>msgq_new_queue</name>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="60" column="5" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="60" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1ab15be5ce1b9fe67edde2b83183ad1c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msgq_close_queue</definition>
        <argsstring>(msgq_queue_t *q)</argsstring>
        <name>msgq_close_queue</name>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="61" column="6" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1ac5405fc067e58f169b72e5e14d5e888e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msgq_init_publisher</definition>
        <argsstring>(msgq_queue_t *q)</argsstring>
        <name>msgq_init_publisher</name>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="62" column="6" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="62" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1af52cc49fb2380469628215fb03ec19ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msgq_init_subscriber</definition>
        <argsstring>(msgq_queue_t *q)</argsstring>
        <name>msgq_init_subscriber</name>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="63" column="6" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1ac3c08d7240f44aa61c2d48dce8571c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int msgq_msg_send</definition>
        <argsstring>(msgq_msg_t *msg, msgq_queue_t *q)</argsstring>
        <name>msgq_msg_send</name>
        <param>
          <type><ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="65" column="5" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="65" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1a8457ff63cad973c226bddbcc3f23dfea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int msgq_msg_recv</definition>
        <argsstring>(msgq_msg_t *msg, msgq_queue_t *q)</argsstring>
        <name>msgq_msg_recv</name>
        <param>
          <type><ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="66" column="5" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="66" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1a00a48485283dfa2c32d3f058df1153c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int msgq_msg_ready</definition>
        <argsstring>(msgq_queue_t *q)</argsstring>
        <name>msgq_msg_ready</name>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="67" column="5" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="67" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1a22bf49e6e96d0be52a877e50d184923e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int msgq_poll</definition>
        <argsstring>(msgq_pollitem_t *items, size_t nitems, int timeout)</argsstring>
        <name>msgq_poll</name>
        <param>
          <type><ref refid="structmsgq__pollitem__t" kindref="compound">msgq_pollitem_t</ref> *</type>
          <declname>items</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nitems</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="68" column="5" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="68" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="msgq_8h_1a8d90a1b5b4b329e5a8a55eb7aa1fcb22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool msgq_all_readers_updated</definition>
        <argsstring>(msgq_queue_t *q)</argsstring>
        <name>msgq_all_readers_updated</name>
        <param>
          <type><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/msgq.h" line="70" column="6" declfile="/tmp/openpilot/cereal/messaging/msgq.h" declline="70" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_SEGMENT_SIZE<sp/>(10<sp/>*<sp/>1024<sp/>*<sp/>1024)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_READERS<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALIGN(n)<sp/>((n<sp/>+<sp/>(8<sp/>-<sp/>1))<sp/>&amp;<sp/>-8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNUSED(x)<sp/>(void)x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNPACK64(higher,<sp/>lower,<sp/>input)<sp/>do<sp/>{uint64_t<sp/>tmp<sp/>=<sp/>input;<sp/>higher<sp/>=<sp/>tmp<sp/>&gt;&gt;<sp/>32;<sp/>lower<sp/>=<sp/>tmp<sp/>&amp;<sp/>0xFFFFFFFF;}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PACK64(output,<sp/>higher,<sp/>lower)<sp/>output<sp/>=<sp/>((uint64_t)higher<sp/>&lt;&lt;<sp/>32)<sp/>|<sp/>((uint64_t)lower<sp/>&amp;<sp/>0xFFFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="structmsgq__header__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal"><ref refid="structmsgq__header__t" kindref="compound">msgq_header_t</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>uint64_t<sp/>num_readers;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>uint64_t<sp/>write_pointer;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>uint64_t<sp/>write_uid;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>uint64_t<sp/>read_pointers[NUM_READERS];</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>uint64_t<sp/>read_valids[NUM_READERS];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>uint64_t<sp/>read_uids[NUM_READERS];</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structmsgq__queue__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>std::atomic&lt;uint64_t&gt;<sp/>*num_readers;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>std::atomic&lt;uint64_t&gt;<sp/>*write_pointer;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>std::atomic&lt;uint64_t&gt;<sp/>*write_uid;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::atomic&lt;uint64_t&gt;<sp/>*read_pointers[NUM_READERS];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>std::atomic&lt;uint64_t&gt;<sp/>*read_valids[NUM_READERS];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>std::atomic&lt;uint64_t&gt;<sp/>*read_uids[NUM_READERS];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>mmap_p;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reader_id;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>uint64_t<sp/>read_uid_local;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>uint64_t<sp/>write_uid_local;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>read_conflate;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>std::string<sp/>endpoint;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structmsgq__msg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structmsgq__pollitem__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmsgq__pollitem__t" kindref="compound">msgq_pollitem_t</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*q;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>revents;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msgq_wait_for_subscriber(<ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*q);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msgq_reset_reader(<ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*q);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgq_msg_init_size(<ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref><sp/>*msg,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgq_msg_init_data(<ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref><sp/>*msg,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgq_msg_close(<ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref><sp/>*msg);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgq_new_queue(<ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*<sp/>q,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msgq_close_queue(<ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*q);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msgq_init_publisher(<ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*<sp/>q);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msgq_init_subscriber(<ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*<sp/>q);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgq_msg_send(<ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref><sp/>*msg,<sp/><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*q);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgq_msg_recv(<ref refid="structmsgq__msg__t" kindref="compound">msgq_msg_t</ref><sp/>*msg,<sp/><ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*q);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgq_msg_ready(<ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*<sp/>q);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgq_poll(<ref refid="structmsgq__pollitem__t" kindref="compound">msgq_pollitem_t</ref><sp/>*<sp/>items,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nitems,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>msgq_all_readers_updated(<ref refid="structmsgq__queue__t" kindref="compound">msgq_queue_t</ref><sp/>*q);</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/cereal/messaging/msgq.h"/>
  </compounddef>
</doxygen>
