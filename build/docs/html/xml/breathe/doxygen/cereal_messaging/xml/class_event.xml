<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_event" kind="class" language="C++" prot="public">
    <compoundname>Event</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_event_1ad2ec3c1a8221b96413d4a58bc4b03ed4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Event::event_fd</definition>
        <argsstring></argsstring>
        <name>event_fd</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="22" column="7" bodyfile="/tmp/openpilot/cereal/messaging/event.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_event_1a3c7fb7c8b6e5c1970d2235d95e9d656a" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::throw_if_invalid</definition>
        <argsstring>() const</argsstring>
        <name>throw_if_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="24" column="15" bodyfile="/tmp/openpilot/cereal/messaging/event.h" bodystart="24" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_event_1a34f47744db7d82374de09b8182e8535b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Event::Event</definition>
        <argsstring>(int fd=-1)</argsstring>
        <name>Event</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="30" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1aeada7aecb4d4d2fbb5f2c349a4ee4155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Event::set</definition>
        <argsstring>() const</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="32" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1a6773d2e570f76b18752cb6d1ee8d68e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Event::clear</definition>
        <argsstring>() const</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="33" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1a7bf35c1dde5ac969fe97bec1ab2ebaf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Event::wait</definition>
        <argsstring>(int timeout_sec=-1) const</argsstring>
        <name>wait</name>
        <param>
          <type>int</type>
          <declname>timeout_sec</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="34" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1adb2681bc1cfc9b6ab3f4e5f41afceb93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Event::peek</definition>
        <argsstring>() const</argsstring>
        <name>peek</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="35" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1a1cb85eb4f5d79cd31a412f443ebed47e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Event::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="36" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1a66d538597bf14c088dae437cacedb8f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Event::fd</definition>
        <argsstring>() const</argsstring>
        <name>fd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="37" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_event_1aa7f666ee380a1a6140fb6696e62ddaaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Event::wait_for_one</definition>
        <argsstring>(const std::vector&lt; Event &gt; &amp;events, int timeout_sec=-1)</argsstring>
        <name>wait_for_one</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_event" kindref="compound">Event</ref> &gt; &amp;</type>
          <declname>events</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_sec</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/messaging/event.h" line="39" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/openpilot/cereal/messaging/event.h" line="20" column="12" bodyfile="/tmp/openpilot/cereal/messaging/event.h" bodystart="20" bodyend="40"/>
    <listofallmembers>
      <member refid="class_event_1a6773d2e570f76b18752cb6d1ee8d68e0" prot="public" virt="non-virtual"><scope>Event</scope><name>clear</name></member>
      <member refid="class_event_1a34f47744db7d82374de09b8182e8535b" prot="public" virt="non-virtual"><scope>Event</scope><name>Event</name></member>
      <member refid="class_event_1ad2ec3c1a8221b96413d4a58bc4b03ed4" prot="private" virt="non-virtual"><scope>Event</scope><name>event_fd</name></member>
      <member refid="class_event_1a66d538597bf14c088dae437cacedb8f9" prot="public" virt="non-virtual"><scope>Event</scope><name>fd</name></member>
      <member refid="class_event_1a1cb85eb4f5d79cd31a412f443ebed47e" prot="public" virt="non-virtual"><scope>Event</scope><name>is_valid</name></member>
      <member refid="class_event_1adb2681bc1cfc9b6ab3f4e5f41afceb93" prot="public" virt="non-virtual"><scope>Event</scope><name>peek</name></member>
      <member refid="class_event_1aeada7aecb4d4d2fbb5f2c349a4ee4155" prot="public" virt="non-virtual"><scope>Event</scope><name>set</name></member>
      <member refid="class_event_1a3c7fb7c8b6e5c1970d2235d95e9d656a" prot="private" virt="non-virtual"><scope>Event</scope><name>throw_if_invalid</name></member>
      <member refid="class_event_1a7bf35c1dde5ac969fe97bec1ab2ebaf1" prot="public" virt="non-virtual"><scope>Event</scope><name>wait</name></member>
      <member refid="class_event_1aa7f666ee380a1a6140fb6696e62ddaaa" prot="public" virt="non-virtual"><scope>Event</scope><name>wait_for_one</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
