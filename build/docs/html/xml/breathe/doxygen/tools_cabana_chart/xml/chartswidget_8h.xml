<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="chartswidget_8h" kind="file" language="C++">
    <compoundname>chartswidget.h</compoundname>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">QGridLayout</includes>
    <includes local="no">QLabel</includes>
    <includes local="no">QScrollArea</includes>
    <includes local="no">QTimer</includes>
    <includes local="no">QUndoCommand</includes>
    <includes local="no">QUndoStack</includes>
    <includes refid="signalselector_8h" local="yes">tools/cabana/chart/signalselector.h</includes>
    <includes local="yes">tools/cabana/dbc/dbcmanager.h</includes>
    <includes local="yes">tools/cabana/streams/abstractstream.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/tmp/openpilot/tools/cabana/chart/chartswidget.h</label>
        <link refid="chartswidget_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>QUndoStack</label>
      </node>
      <node id="8">
        <label>QUndoCommand</label>
      </node>
      <node id="13">
        <label>QListWidget</label>
      </node>
      <node id="14">
        <label>tools/cabana/dbc/dbcmanager.h</label>
      </node>
      <node id="15">
        <label>tools/cabana/streams/abstractstream.h</label>
      </node>
      <node id="6">
        <label>QScrollArea</label>
      </node>
      <node id="12">
        <label>QDialog</label>
      </node>
      <node id="7">
        <label>QTimer</label>
      </node>
      <node id="10">
        <label>tools/cabana/chart/signalselector.h</label>
        <link refid="signalselector_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="5">
        <label>QLabel</label>
      </node>
      <node id="11">
        <label>QComboBox</label>
      </node>
      <node id="4">
        <label>QGridLayout</label>
      </node>
      <node id="2">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_charts_container" prot="public">ChartsContainer</innerclass>
    <innerclass refid="class_charts_widget" prot="public">ChartsWidget</innerclass>
    <innerclass refid="class_zoom_command" prot="public">ZoomCommand</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="chartswidget_8h_1acb0a69f118a31fd9fbbcac145006ca8c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int CHART_MIN_WIDTH</definition>
        <argsstring></argsstring>
        <name>CHART_MIN_WIDTH</name>
        <initializer>= 300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/chart/chartswidget.h" line="17" column="11" bodyfile="/tmp/openpilot/tools/cabana/chart/chartswidget.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="chartswidget_8h_1a953d389d1353e12013f78040f061c06d" prot="public" static="no" mutable="no">
        <type>const QString</type>
        <definition>const QString CHART_MIME_TYPE</definition>
        <argsstring></argsstring>
        <name>CHART_MIME_TYPE</name>
        <initializer>= &quot;application/x-cabanachartview&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/chart/chartswidget.h" line="18" column="15" bodyfile="/tmp/openpilot/tools/cabana/chart/chartswidget.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QGridLayout&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QLabel&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QScrollArea&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QUndoCommand&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QUndoStack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/chart/signalselector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/dbc/dbcmanager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/streams/abstractstream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CHART_MIN_WIDTH<sp/>=<sp/>300;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>CHART_MIME_TYPE<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;application/x-cabanachartview&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_chart_view" kindref="compound">ChartView</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_charts_widget" kindref="compound">ChartsWidget</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_charts_container" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_charts_container" kindref="compound">ChartsContainer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QWidget<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="class_charts_container" kindref="compound">ChartsContainer</ref>(<ref refid="class_charts_widget" kindref="compound">ChartsWidget</ref><sp/>*parent);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dragEnterEvent(QDragEnterEvent<sp/>*event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dropEvent(QDropEvent<sp/>*event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dragLeaveEvent(QDragLeaveEvent<sp/>*event)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/>drawDropIndicator({});<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawDropIndicator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;pt)<sp/>{<sp/>drop_indictor_pos<sp/>=<sp/>pt;<sp/>update();<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paintEvent(QPaintEvent<sp/>*ev)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="class_chart_view" kindref="compound">ChartView</ref><sp/>*getDropAfter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>QGridLayout<sp/>*charts_layout;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_charts_widget" kindref="compound">ChartsWidget</ref><sp/>*charts_widget;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>QPoint<sp/>drop_indictor_pos;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_charts_widget" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_charts_widget" kindref="compound">ChartsWidget</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QFrame<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="class_charts_widget" kindref="compound">ChartsWidget</ref>(QWidget<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>showChart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageId<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cabana::Signal<sp/>*sig,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>merge);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSignal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageId<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cabana::Signal<sp/>*sig)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>findChart(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>sig)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColumnCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeAll();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setZoom(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dock(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>floating);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rangeChanged(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_zommed);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>seriesChanged();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>QSize<sp/>minimumSizeHint()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resizeEvent(QResizeEvent<sp/>*event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>event(QEvent<sp/>*event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>alignCharts();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>newChart();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="class_chart_view" kindref="compound">ChartView</ref><sp/>*createChart();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeChart(<ref refid="class_chart_view" kindref="compound">ChartView</ref><sp/>*chart);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>splitChart(<ref refid="class_chart_view" kindref="compound">ChartView</ref><sp/>*chart);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>QRect<sp/>chartVisibleRect(<ref refid="class_chart_view" kindref="compound">ChartView</ref><sp/>*chart);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eventsMerged();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateState();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>zoomReset();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startAutoScroll();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stopAutoScroll();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAutoScroll();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateToolBar();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateTabBar();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaxChartRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateLayout(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>settingChanged();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>showValueTip(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sec);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>eventFilter(QObject<sp/>*obj,<sp/>QEvent<sp/>*event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>newTab();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeTab(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QList&lt;ChartView<sp/>*&gt;<sp/>&amp;currentCharts()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab_charts[tabbar-&gt;tabData(tabbar-&gt;currentIndex()).toInt()];<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="class_chart_view" kindref="compound">ChartView</ref><sp/>*findChart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageId<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cabana::Signal<sp/>*sig);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>QLabel<sp/>*title_label;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>QLabel<sp/>*range_lb;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>LogSlider<sp/>*range_slider;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>QAction<sp/>*range_lb_action;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>QAction<sp/>*range_slider_action;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>docking<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>ToolButton<sp/>*dock_btn;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>QAction<sp/>*undo_zoom_action;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>QAction<sp/>*redo_zoom_action;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>QAction<sp/>*reset_zoom_action;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>ToolButton<sp/>*reset_zoom_btn;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>QUndoStack<sp/>*zoom_undo_stack;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>ToolButton<sp/>*remove_all_btn;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>QList&lt;ChartView<sp/>*&gt;<sp/>charts;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;int,<sp/>QList&lt;ChartView<sp/>*&gt;&gt;<sp/>tab_charts;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>TabBar<sp/>*tabbar;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="class_charts_container" kindref="compound">ChartsContainer</ref><sp/>*charts_container;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>QScrollArea<sp/>*charts_scroll;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>uint32_t<sp/>max_chart_range<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_zoomed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>display_range;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>zoomed_range;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>QAction<sp/>*columns_action;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_column_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>auto_scroll_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>QTimer<sp/>auto_scroll_timer;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>QTimer<sp/>align_timer;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_theme<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_zoom_command" kindref="compound">ZoomCommand</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_chart_view" kindref="compound">ChartView</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_charts_container" kindref="compound">ChartsContainer</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_zoom_command" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_zoom_command" kindref="compound">ZoomCommand</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QUndoCommand<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="class_zoom_command" kindref="compound">ZoomCommand</ref>(<ref refid="class_charts_widget" kindref="compound">ChartsWidget</ref><sp/>*charts,<sp/>std::pair&lt;double,<sp/>double&gt;<sp/>range)<sp/>:<sp/>charts(charts),<sp/>range(range),<sp/>QUndoCommand()<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_range<sp/>=<sp/>charts-&gt;is_zoomed<sp/>?<sp/>charts-&gt;zoomed_range<sp/>:<sp/>charts-&gt;display_range;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>setText(QObject::tr(</highlight><highlight class="stringliteral">&quot;Zoom<sp/>to<sp/>%1-%2&quot;</highlight><highlight class="normal">).arg(range.first,<sp/>0,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>2).arg(range.second,<sp/>0,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">,<sp/>2));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>undo()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/>charts-&gt;setZoom(prev_range.first,<sp/>prev_range.second);<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>redo()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/>charts-&gt;setZoom(range.first,<sp/>range.second);<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="class_charts_widget" kindref="compound">ChartsWidget</ref><sp/>*charts;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>prev_range,<sp/>range;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/tools/cabana/chart/chartswidget.h"/>
  </compounddef>
</doxygen>
