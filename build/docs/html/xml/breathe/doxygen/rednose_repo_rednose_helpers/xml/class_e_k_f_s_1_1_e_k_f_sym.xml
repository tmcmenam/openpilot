<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_e_k_f_s_1_1_e_k_f_sym" kind="class" language="C++" prot="public">
    <compoundname>EKFS::EKFSym</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a5dd705668d3d7fb8cd6c1e83f88adfb2" prot="private" static="no" mutable="no">
        <type>const <ref refid="struct_e_k_f" kindref="compound">EKF</ref> *</type>
        <definition>const EKF* EKFS::EKFSym::ekf</definition>
        <argsstring></argsstring>
        <name>ekf</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="75" column="13" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1aa84b2c046fc1e796cc2f720e4d2f7c7b" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd EKFS::EKFSym::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="77" column="19" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a2e5ee1afc8047d0cbd0600413228c211" prot="private" static="no" mutable="no">
        <type>MatrixXdr</type>
        <definition>MatrixXdr EKFS::EKFSym::P</definition>
        <argsstring></argsstring>
        <name>P</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="78" column="13" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a265c11d63db679c787f0b9f8f689ca53" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EKFS::EKFSym::msckf</definition>
        <argsstring></argsstring>
        <name>msckf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="80" column="8" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a5dd46f039c008ff399bd8b9750473a53" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EKFS::EKFSym::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="81" column="7" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a01db817647ed4519ad03d38ffe406dab" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EKFS::EKFSym::dim_augment</definition>
        <argsstring></argsstring>
        <name>dim_augment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="82" column="7" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1afe13e19b91e9f0480d4f314e1351593b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EKFS::EKFSym::dim_augment_err</definition>
        <argsstring></argsstring>
        <name>dim_augment_err</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="83" column="7" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a472f4b5a1e83a99e69990d01e66c5cc7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EKFS::EKFSym::dim_main</definition>
        <argsstring></argsstring>
        <name>dim_main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="84" column="7" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1aff29f61d865c7b59e7774d381274cb8a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EKFS::EKFSym::dim_main_err</definition>
        <argsstring></argsstring>
        <name>dim_main_err</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="85" column="7" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1abc5e412a038005bdac2425047b10c409" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EKFS::EKFSym::dim_x</definition>
        <argsstring></argsstring>
        <name>dim_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="88" column="7" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a35ae4afcd50b8f9611759904f5dec2e1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EKFS::EKFSym::dim_err</definition>
        <argsstring></argsstring>
        <name>dim_err</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="89" column="7" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a0f2588509a6eeb26ef662c0117049f5c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EKFS::EKFSym::filter_time</definition>
        <argsstring></argsstring>
        <name>filter_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="91" column="10" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a7ae313487f08bddb2844629bf32b6115" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; EKFS::EKFSym::maha_test_kinds</definition>
        <argsstring></argsstring>
        <name>maha_test_kinds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="93" column="15" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1abf2d35289809450dbea1011fd2fed78a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; EKFS::EKFSym::quaternion_idxs</definition>
        <argsstring></argsstring>
        <name>quaternion_idxs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="94" column="15" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1ab22c2bf95267f44e95ef9b372c827005" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; EKFS::EKFSym::global_vars</definition>
        <argsstring></argsstring>
        <name>global_vars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="96" column="15" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1acfc889cb0c9fa6bd36c70d1823c5e085" prot="private" static="no" mutable="no">
        <type>MatrixXdr</type>
        <definition>MatrixXdr EKFS::EKFSym::Q</definition>
        <argsstring></argsstring>
        <name>Q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="99" column="13" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1ad0619c5b6447f8b163b17b9fc04ea448" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EKFS::EKFSym::max_rewind_age</definition>
        <argsstring></argsstring>
        <name>max_rewind_age</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="102" column="10" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1ae21f3f707c65a137fa80096fa135cef5" prot="private" static="no" mutable="no">
        <type>std::deque&lt; double &gt;</type>
        <definition>std::deque&lt;double&gt; EKFS::EKFSym::rewind_t</definition>
        <argsstring></argsstring>
        <name>rewind_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="103" column="14" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a4b61706ab15adc80d4fc0e7498dc7eba" prot="private" static="no" mutable="no">
        <type>std::deque&lt; std::pair&lt; Eigen::VectorXd, MatrixXdr &gt; &gt;</type>
        <definition>std::deque&lt;std::pair&lt;Eigen::VectorXd, MatrixXdr&gt; &gt; EKFS::EKFSym::rewind_states</definition>
        <argsstring></argsstring>
        <name>rewind_states</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="104" column="14" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a95194bab274f347cff682cd8d3c88faf" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="struct_e_k_f_s_1_1_observation" kindref="compound">Observation</ref> &gt;</type>
        <definition>std::deque&lt;Observation&gt; EKFS::EKFSym::rewind_obscache</definition>
        <argsstring></argsstring>
        <name>rewind_obscache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="105" column="14" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a05c8fe6fcda0f08986a74e5acd815d36" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd EKFS::EKFSym::augment_times</definition>
        <argsstring></argsstring>
        <name>augment_times</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="107" column="19" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_e_k_f_s_1_1_e_k_f_sym_1a8a06b59b39c5548bc7cf8856804eb163" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; EKFS::EKFSym::feature_track_kinds</definition>
        <argsstring></argsstring>
        <name>feature_track_kinds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="109" column="15" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a8c963f7e1857403bc9f42cc3afab36cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EKFS::EKFSym::EKFSym</definition>
        <argsstring>(std::string name, Eigen::Map&lt; MatrixXdr &gt; Q, Eigen::Map&lt; Eigen::VectorXd &gt; x_initial, Eigen::Map&lt; MatrixXdr &gt; P_initial, int dim_main, int dim_main_err, int N=0, int dim_augment=0, int dim_augment_err=0, std::vector&lt; int &gt; maha_test_kinds=std::vector&lt; int &gt;(), std::vector&lt; int &gt; quaternion_idxs=std::vector&lt; int &gt;(), std::vector&lt; std::string &gt; global_vars=std::vector&lt; std::string &gt;(), double max_rewind_age=1.0)</argsstring>
        <name>EKFSym</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Eigen::Map&lt; MatrixXdr &gt;</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>Eigen::Map&lt; Eigen::VectorXd &gt;</type>
          <declname>x_initial</declname>
        </param>
        <param>
          <type>Eigen::Map&lt; MatrixXdr &gt;</type>
          <declname>P_initial</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_main</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim_main_err</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>dim_augment</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>dim_augment_err</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>maha_test_kinds</declname>
          <defval>std::vector&lt; int &gt;()</defval>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>quaternion_idxs</declname>
          <defval>std::vector&lt; int &gt;()</defval>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>global_vars</declname>
          <defval>std::vector&lt; std::string &gt;()</defval>
        </param>
        <param>
          <type>double</type>
          <declname>max_rewind_age</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="45" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a25e8a377b981f461e4863472a9c2bb21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EKFS::EKFSym::init_state</definition>
        <argsstring>(Eigen::Map&lt; Eigen::VectorXd &gt; state, Eigen::Map&lt; MatrixXdr &gt; covs, double filter_time)</argsstring>
        <name>init_state</name>
        <param>
          <type>Eigen::Map&lt; Eigen::VectorXd &gt;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>Eigen::Map&lt; MatrixXdr &gt;</type>
          <declname>covs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>filter_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="50" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1af0d38d1187e472db568b4c2c103c1cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd EKFS::EKFSym::state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="52" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1abc411eb5f829f479114d6eeacfff64fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MatrixXdr</type>
        <definition>MatrixXdr EKFS::EKFSym::covs</definition>
        <argsstring>()</argsstring>
        <name>covs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="53" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1ad0c99dc5c3240bd4354839f547a93b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EKFS::EKFSym::set_filter_time</definition>
        <argsstring>(double t)</argsstring>
        <name>set_filter_time</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="54" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a87d7ce544a417b6f2b321095857fcc4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EKFS::EKFSym::get_filter_time</definition>
        <argsstring>()</argsstring>
        <name>get_filter_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="55" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a4ea93ad3fb2f7413faf5e0fb236bae95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EKFS::EKFSym::normalize_quaternions</definition>
        <argsstring>()</argsstring>
        <name>normalize_quaternions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="56" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a5acdefbb5007244390575fc836378353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EKFS::EKFSym::normalize_slice</definition>
        <argsstring>(int slice_start, int slice_end_ex)</argsstring>
        <name>normalize_slice</name>
        <param>
          <type>int</type>
          <declname>slice_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slice_end_ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="57" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a095a5eaebc5d67cc0a6591c90327c746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EKFS::EKFSym::set_global</definition>
        <argsstring>(std::string global_var, double val)</argsstring>
        <name>set_global</name>
        <param>
          <type>std::string</type>
          <declname>global_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="58" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a91e3448662bb282ab724b69457b7aa5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EKFS::EKFSym::reset_rewind</definition>
        <argsstring>()</argsstring>
        <name>reset_rewind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="59" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a3a9ab26bf93cdd0a299aa464aa848c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EKFS::EKFSym::predict</definition>
        <argsstring>(double t)</argsstring>
        <name>predict</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="61" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a3e539b45c2acd10f19cf23ce0957be29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="struct_e_k_f_s_1_1_estimate" kindref="compound">Estimate</ref> &gt;</type>
        <definition>std::optional&lt;Estimate&gt; EKFS::EKFSym::predict_and_update_batch</definition>
        <argsstring>(double t, int kind, std::vector&lt; Eigen::Map&lt; Eigen::VectorXd &gt;&gt; z, std::vector&lt; Eigen::Map&lt; MatrixXdr &gt;&gt; R, std::vector&lt; std::vector&lt; double &gt;&gt; extra_args={{}}, bool augment=false)</argsstring>
        <name>predict_and_update_batch</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kind</declname>
        </param>
        <param>
          <type>std::vector&lt; Eigen::Map&lt; Eigen::VectorXd &gt;&gt;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>std::vector&lt; Eigen::Map&lt; MatrixXdr &gt;&gt;</type>
          <declname>R</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt;</type>
          <declname>extra_args</declname>
          <defval>{{}}</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>augment</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="62" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a59f31ed26199625af93bfce0242539d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>extra_routine_t</type>
        <definition>extra_routine_t EKFS::EKFSym::get_extra_routine</definition>
        <argsstring>(const std::string &amp;routine)</argsstring>
        <name>get_extra_routine</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>routine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="65" column="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a9039fe2775cd4444a4981c2518d23278" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::deque&lt; <ref refid="struct_e_k_f_s_1_1_observation" kindref="compound">Observation</ref> &gt;</type>
        <definition>std::deque&lt;Observation&gt; EKFS::EKFSym::rewind</definition>
        <argsstring>(double t)</argsstring>
        <name>rewind</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="68" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a44befdd5bddb55db0448820c7bd42fb6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EKFS::EKFSym::checkpoint</definition>
        <argsstring>(Observation &amp;obs)</argsstring>
        <name>checkpoint</name>
        <param>
          <type><ref refid="struct_e_k_f_s_1_1_observation" kindref="compound">Observation</ref> &amp;</type>
          <declname>obs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="69" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1a5df115df364e36f727765a0fe9ccdce2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_e_k_f_s_1_1_estimate" kindref="compound">Estimate</ref></type>
        <definition>Estimate EKFS::EKFSym::predict_and_update_batch</definition>
        <argsstring>(Observation &amp;obs, bool augment)</argsstring>
        <name>predict_and_update_batch</name>
        <param>
          <type><ref refid="struct_e_k_f_s_1_1_observation" kindref="compound">Observation</ref> &amp;</type>
          <declname>obs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>augment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="71" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_e_k_f_s_1_1_e_k_f_sym_1ae6a5bc4e2cff51e3da3a31ad6fb689c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd EKFS::EKFSym::update</definition>
        <argsstring>(int kind, Eigen::VectorXd z, MatrixXdr R, std::vector&lt; double &gt; extra_args)</argsstring>
        <name>update</name>
        <param>
          <type>int</type>
          <declname>kind</declname>
        </param>
        <param>
          <type>Eigen::VectorXd</type>
          <declname>z</declname>
        </param>
        <param>
          <type>MatrixXdr</type>
          <declname>R</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>extra_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="72" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" line="43" column="13" bodyfile="/tmp/openpilot/rednose_repo/rednose/helpers/ekf_sym.h" bodystart="43" bodyend="110"/>
    <listofallmembers>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a05c8fe6fcda0f08986a74e5acd815d36" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>augment_times</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a44befdd5bddb55db0448820c7bd42fb6" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>checkpoint</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1abc411eb5f829f479114d6eeacfff64fd" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>covs</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a01db817647ed4519ad03d38ffe406dab" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>dim_augment</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1afe13e19b91e9f0480d4f314e1351593b" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>dim_augment_err</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a35ae4afcd50b8f9611759904f5dec2e1" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>dim_err</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a472f4b5a1e83a99e69990d01e66c5cc7" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>dim_main</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1aff29f61d865c7b59e7774d381274cb8a" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>dim_main_err</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1abc5e412a038005bdac2425047b10c409" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>dim_x</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a5dd705668d3d7fb8cd6c1e83f88adfb2" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>ekf</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a8c963f7e1857403bc9f42cc3afab36cb" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>EKFSym</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a8a06b59b39c5548bc7cf8856804eb163" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>feature_track_kinds</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a0f2588509a6eeb26ef662c0117049f5c" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>filter_time</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a59f31ed26199625af93bfce0242539d5" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>get_extra_routine</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a87d7ce544a417b6f2b321095857fcc4e" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>get_filter_time</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1ab22c2bf95267f44e95ef9b372c827005" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>global_vars</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a25e8a377b981f461e4863472a9c2bb21" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>init_state</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a7ae313487f08bddb2844629bf32b6115" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>maha_test_kinds</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1ad0619c5b6447f8b163b17b9fc04ea448" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>max_rewind_age</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a265c11d63db679c787f0b9f8f689ca53" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>msckf</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a5dd46f039c008ff399bd8b9750473a53" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>N</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a4ea93ad3fb2f7413faf5e0fb236bae95" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>normalize_quaternions</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a5acdefbb5007244390575fc836378353" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>normalize_slice</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a2e5ee1afc8047d0cbd0600413228c211" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>P</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a3a9ab26bf93cdd0a299aa464aa848c11" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>predict</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a3e539b45c2acd10f19cf23ce0957be29" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>predict_and_update_batch</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a5df115df364e36f727765a0fe9ccdce2" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>predict_and_update_batch</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1acfc889cb0c9fa6bd36c70d1823c5e085" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>Q</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1abf2d35289809450dbea1011fd2fed78a" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>quaternion_idxs</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a91e3448662bb282ab724b69457b7aa5f" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>reset_rewind</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a9039fe2775cd4444a4981c2518d23278" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>rewind</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a95194bab274f347cff682cd8d3c88faf" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>rewind_obscache</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a4b61706ab15adc80d4fc0e7498dc7eba" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>rewind_states</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1ae21f3f707c65a137fa80096fa135cef5" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>rewind_t</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1ad0c99dc5c3240bd4354839f547a93b11" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>set_filter_time</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1a095a5eaebc5d67cc0a6591c90327c746" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>set_global</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1af0d38d1187e472db568b4c2c103c1cd6" prot="public" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>state</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1ae6a5bc4e2cff51e3da3a31ad6fb689c7" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>update</name></member>
      <member refid="class_e_k_f_s_1_1_e_k_f_sym_1aa84b2c046fc1e796cc2f720e4d2f7c7b" prot="private" virt="non-virtual"><scope>EKFS::EKFSym</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
