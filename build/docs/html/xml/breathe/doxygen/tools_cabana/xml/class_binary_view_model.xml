<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_binary_view_model" kind="class" language="C++" prot="public">
    <compoundname>BinaryViewModel</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QAbstractTableModel</basecompoundref>
    <innerclass refid="struct_binary_view_model_1_1_item" prot="public">BinaryViewModel::Item</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_binary_view_model_1aabc81b1772bd9ea2750d67c716a87e17" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_binary_view_model_1_1_item" kindref="compound">Item</ref> &gt;</type>
        <definition>std::vector&lt;Item&gt; BinaryViewModel::items</definition>
        <argsstring></argsstring>
        <name>items</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="51" column="15" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_binary_view_model_1abd5a43f0aa0407494ca3003975e2574b" prot="public" static="no" mutable="no">
        <type>MessageId</type>
        <definition>MessageId BinaryViewModel::msg_id</definition>
        <argsstring></argsstring>
        <name>msg_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="53" column="13" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_binary_view_model_1a9af367df3edf698829cb8da12cedee24" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int BinaryViewModel::row_count</definition>
        <argsstring></argsstring>
        <name>row_count</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="54" column="7" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_binary_view_model_1a79e17254deaee0fd7ded3ef52b3108a2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int BinaryViewModel::column_count</definition>
        <argsstring></argsstring>
        <name>column_count</name>
        <initializer>= 9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="55" column="13" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_binary_view_model_1a482f37ebd5500562c52e76e1525e3284" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BinaryViewModel::BinaryViewModel</definition>
        <argsstring>(QObject *parent)</argsstring>
        <name>BinaryViewModel</name>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="28" column="3" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_model_1ab5a6855fe6a786af6ce6b2d26cbf5d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryViewModel::refresh</definition>
        <argsstring>()</argsstring>
        <name>refresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="29" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_model_1aa358dd5b59a7aaa7bec0b0e6fb8b7be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryViewModel::updateState</definition>
        <argsstring>()</argsstring>
        <name>updateState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="30" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_model_1a170758c10db6761b2dd83d74210cbe02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryViewModel::updateItem</definition>
        <argsstring>(int row, int col, uint8_t val, const QColor &amp;color)</argsstring>
        <name>updateItem</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const QColor &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="31" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_model_1aeaefb19f92b1851d0ee2b8245010aeef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant BinaryViewModel::headerData</definition>
        <argsstring>(int section, Qt::Orientation orientation, int role=Qt::DisplayRole) const override</argsstring>
        <name>headerData</name>
        <param>
          <type>int</type>
          <declname>section</declname>
        </param>
        <param>
          <type>Qt::Orientation</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>role</declname>
          <defval>Qt::DisplayRole</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="32" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_model_1a2df529997a17dd9fc36644c834262134" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant BinaryViewModel::data</definition>
        <argsstring>(const QModelIndex &amp;index, int role=Qt::DisplayRole) const override</argsstring>
        <name>data</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>role</declname>
          <defval>Qt::DisplayRole</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="33" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_model_1aee2e6d76e4bab2318171d68298ee3407" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BinaryViewModel::rowCount</definition>
        <argsstring>(const QModelIndex &amp;parent=QModelIndex()) const override</argsstring>
        <name>rowCount</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
          <defval>QModelIndex()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="34" column="7" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_model_1a69811e2434d9d4163da45d1d952069e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BinaryViewModel::columnCount</definition>
        <argsstring>(const QModelIndex &amp;parent=QModelIndex()) const override</argsstring>
        <name>columnCount</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
          <defval>QModelIndex()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="35" column="7" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_model_1a415e9e8dd5a3af377a88a3679490301a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QModelIndex</type>
        <definition>QModelIndex BinaryViewModel::index</definition>
        <argsstring>(int row, int column, const QModelIndex &amp;parent=QModelIndex()) const override</argsstring>
        <name>index</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
          <defval>QModelIndex()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="36" column="15" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_model_1a547aba4166feae4920cf482a9b5dc9c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Qt::ItemFlags</type>
        <definition>Qt::ItemFlags BinaryViewModel::flags</definition>
        <argsstring>(const QModelIndex &amp;index) const override</argsstring>
        <name>flags</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="39" column="17" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="39" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BinaryViewModel</label>
        <link refid="class_binary_view_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QAbstractTableModel</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BinaryViewModel</label>
        <link refid="class_binary_view_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QAbstractTableModel</label>
      </node>
    </collaborationgraph>
    <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="26" column="49" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="26" bodyend="56"/>
    <listofallmembers>
      <member refid="class_binary_view_model_1a482f37ebd5500562c52e76e1525e3284" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>BinaryViewModel</name></member>
      <member refid="class_binary_view_model_1a79e17254deaee0fd7ded3ef52b3108a2" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>column_count</name></member>
      <member refid="class_binary_view_model_1a69811e2434d9d4163da45d1d952069e2" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>columnCount</name></member>
      <member refid="class_binary_view_model_1a2df529997a17dd9fc36644c834262134" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>data</name></member>
      <member refid="class_binary_view_model_1a547aba4166feae4920cf482a9b5dc9c0" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>flags</name></member>
      <member refid="class_binary_view_model_1aeaefb19f92b1851d0ee2b8245010aeef" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>headerData</name></member>
      <member refid="class_binary_view_model_1a415e9e8dd5a3af377a88a3679490301a" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>index</name></member>
      <member refid="class_binary_view_model_1aabc81b1772bd9ea2750d67c716a87e17" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>items</name></member>
      <member refid="class_binary_view_model_1abd5a43f0aa0407494ca3003975e2574b" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>msg_id</name></member>
      <member refid="class_binary_view_model_1ab5a6855fe6a786af6ce6b2d26cbf5d95" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>refresh</name></member>
      <member refid="class_binary_view_model_1a9af367df3edf698829cb8da12cedee24" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>row_count</name></member>
      <member refid="class_binary_view_model_1aee2e6d76e4bab2318171d68298ee3407" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>rowCount</name></member>
      <member refid="class_binary_view_model_1a170758c10db6761b2dd83d74210cbe02" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>updateItem</name></member>
      <member refid="class_binary_view_model_1aa358dd5b59a7aaa7bec0b0e6fb8b7be7" prot="public" virt="non-virtual"><scope>BinaryViewModel</scope><name>updateState</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
