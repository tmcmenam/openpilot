<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_binary_view" kind="class" language="C++" prot="public">
    <compoundname>BinaryView</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QTableView</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_binary_view_1a3fa3cd229149f5f565ad22e75b796394" prot="private" static="no" mutable="no">
        <type>QModelIndex</type>
        <definition>QModelIndex BinaryView::anchor_index</definition>
        <argsstring></argsstring>
        <name>anchor_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="86" column="15" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_binary_view_1af9c8fc16158f94e1499983ee9d121d89" prot="private" static="no" mutable="no">
        <type><ref refid="class_binary_view_model" kindref="compound">BinaryViewModel</ref> *</type>
        <definition>BinaryViewModel* BinaryView::model</definition>
        <argsstring></argsstring>
        <name>model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="87" column="19" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_binary_view_1a8adff4d8db8fd631a72bf4f96d0a6c73" prot="private" static="no" mutable="no">
        <type><ref refid="class_binary_item_delegate" kindref="compound">BinaryItemDelegate</ref> *</type>
        <definition>BinaryItemDelegate* BinaryView::delegate</definition>
        <argsstring></argsstring>
        <name>delegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="88" column="22" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_binary_view_1adf01f8c664c868617c46eb6e6b2ac963" prot="private" static="no" mutable="no">
        <type>const cabana::Signal *</type>
        <definition>const cabana::Signal* BinaryView::resize_sig</definition>
        <argsstring></argsstring>
        <name>resize_sig</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="89" column="24" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_binary_view_1a60363102affee6239561f5d4ada8dd61" prot="private" static="no" mutable="no">
        <type>const cabana::Signal *</type>
        <definition>const cabana::Signal* BinaryView::hovered_sig</definition>
        <argsstring></argsstring>
        <name>hovered_sig</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="90" column="24" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_binary_view_1a3ddd5728d811143454c318147da4b7a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class BinaryItemDelegate</definition>
        <argsstring></argsstring>
        <name>BinaryItemDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="91" column="3" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_binary_view_1a533bcd3464ade176ff03eaff5280d61a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BinaryView::BinaryView</definition>
        <argsstring>(QWidget *parent=nullptr)</argsstring>
        <name>BinaryView</name>
        <param>
          <type>QWidget *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="62" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1ac82323d54c2011cbbf8f0aac254c88aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::setMessage</definition>
        <argsstring>(const MessageId &amp;message_id)</argsstring>
        <name>setMessage</name>
        <param>
          <type>const MessageId &amp;</type>
          <declname>message_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="63" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1ae1a7f0beb92fd7b089c4b10e0581286d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::highlight</definition>
        <argsstring>(const cabana::Signal *sig)</argsstring>
        <name>highlight</name>
        <param>
          <type>const cabana::Signal *</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="64" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1a1d0cec1baab06ebd11bc24e90485f35a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSet&lt; const cabana::Signal * &gt;</type>
        <definition>QSet&lt;const cabana::Signal*&gt; BinaryView::getOverlappingSignals</definition>
        <argsstring>() const</argsstring>
        <name>getOverlappingSignals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="65" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1a4edfd52a4c854ad332931ae964d4f7aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::updateState</definition>
        <argsstring>()</argsstring>
        <name>updateState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="66" column="15" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1a9fb04c6e422a61b6d156fb0347b7a225" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize BinaryView::minimumSizeHint</definition>
        <argsstring>() const override</argsstring>
        <name>minimumSizeHint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="67" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="class_binary_view_1affb1ab8e42f97e15974ce1802847ca0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::signalClicked</definition>
        <argsstring>(const cabana::Signal *sig)</argsstring>
        <name>signalClicked</name>
        <param>
          <type>const cabana::Signal *</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="70" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_binary_view_1a950ab5594d473196d10565addc3686ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::signalHovered</definition>
        <argsstring>(const cabana::Signal *sig)</argsstring>
        <name>signalHovered</name>
        <param>
          <type>const cabana::Signal *</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="71" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_binary_view_1a1a2e9dac56880c11da3cf2dcc81f554f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::editSignal</definition>
        <argsstring>(const cabana::Signal *origin_s, cabana::Signal &amp;s)</argsstring>
        <name>editSignal</name>
        <param>
          <type>const cabana::Signal *</type>
          <declname>origin_s</declname>
        </param>
        <param>
          <type>cabana::Signal &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="72" column="8"/>
      </memberdef>
      <memberdef kind="signal" id="class_binary_view_1ada5c4d4981f827adf99f3baa8fdc5b70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::showChart</definition>
        <argsstring>(const MessageId &amp;id, const cabana::Signal *sig, bool show, bool merge)</argsstring>
        <name>showChart</name>
        <param>
          <type>const MessageId &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const cabana::Signal *</type>
          <declname>sig</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>merge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="73" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_binary_view_1a6d17949dcf8992520c00f865a953ef46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::addShortcuts</definition>
        <argsstring>()</argsstring>
        <name>addShortcuts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="76" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1a1461a842ae02318a65af4dd5f0ae1dc5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::refresh</definition>
        <argsstring>()</argsstring>
        <name>refresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="77" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1ab6a7bb34dfa866d047edf20be76d4434" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; int, int, bool &gt;</type>
        <definition>std::tuple&lt;int, int, bool&gt; BinaryView::getSelection</definition>
        <argsstring>(QModelIndex index)</argsstring>
        <name>getSelection</name>
        <param>
          <type>QModelIndex</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="78" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1aede74ce83997dbeb208184e10092b7fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::setSelection</definition>
        <argsstring>(const QRect &amp;rect, QItemSelectionModel::SelectionFlags flags) override</argsstring>
        <name>setSelection</name>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>QItemSelectionModel::SelectionFlags</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="79" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1a1097f068100bfaa2ef4def2894f7674d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::mousePressEvent</definition>
        <argsstring>(QMouseEvent *event) override</argsstring>
        <name>mousePressEvent</name>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="80" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1a4f442ce81b9a9b7e0a4c3f7096f6c38b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::mouseMoveEvent</definition>
        <argsstring>(QMouseEvent *event) override</argsstring>
        <name>mouseMoveEvent</name>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="81" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1a90aef4a795d16d65072c6beb78d38856" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::mouseReleaseEvent</definition>
        <argsstring>(QMouseEvent *event) override</argsstring>
        <name>mouseReleaseEvent</name>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="82" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1a241a049392a7b751cf99ba0aa625a5d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::leaveEvent</definition>
        <argsstring>(QEvent *event) override</argsstring>
        <name>leaveEvent</name>
        <param>
          <type>QEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="83" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_view_1a508a6af78b8883c35d12fea27862e462" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BinaryView::highlightPosition</definition>
        <argsstring>(const QPoint &amp;pt)</argsstring>
        <name>highlightPosition</name>
        <param>
          <type>const QPoint &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="84" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BinaryView</label>
        <link refid="class_binary_view"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QTableView</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BinaryView</label>
        <link refid="class_binary_view"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QTableView</label>
      </node>
    </collaborationgraph>
    <location file="/tmp/openpilot/tools/cabana/binaryview.h" line="58" column="35" bodyfile="/tmp/openpilot/tools/cabana/binaryview.h" bodystart="58" bodyend="92"/>
    <listofallmembers>
      <member refid="class_binary_view_1a6d17949dcf8992520c00f865a953ef46" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>addShortcuts</name></member>
      <member refid="class_binary_view_1a3fa3cd229149f5f565ad22e75b796394" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>anchor_index</name></member>
      <member refid="class_binary_view_1a3ddd5728d811143454c318147da4b7a3" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>BinaryItemDelegate</name></member>
      <member refid="class_binary_view_1a533bcd3464ade176ff03eaff5280d61a" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>BinaryView</name></member>
      <member refid="class_binary_view_1a8adff4d8db8fd631a72bf4f96d0a6c73" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>delegate</name></member>
      <member refid="class_binary_view_1a1a2e9dac56880c11da3cf2dcc81f554f" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>editSignal</name></member>
      <member refid="class_binary_view_1a1d0cec1baab06ebd11bc24e90485f35a" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>getOverlappingSignals</name></member>
      <member refid="class_binary_view_1ab6a7bb34dfa866d047edf20be76d4434" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>getSelection</name></member>
      <member refid="class_binary_view_1ae1a7f0beb92fd7b089c4b10e0581286d" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>highlight</name></member>
      <member refid="class_binary_view_1a508a6af78b8883c35d12fea27862e462" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>highlightPosition</name></member>
      <member refid="class_binary_view_1a60363102affee6239561f5d4ada8dd61" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>hovered_sig</name></member>
      <member refid="class_binary_view_1a241a049392a7b751cf99ba0aa625a5d5" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>leaveEvent</name></member>
      <member refid="class_binary_view_1a9fb04c6e422a61b6d156fb0347b7a225" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>minimumSizeHint</name></member>
      <member refid="class_binary_view_1af9c8fc16158f94e1499983ee9d121d89" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>model</name></member>
      <member refid="class_binary_view_1a4f442ce81b9a9b7e0a4c3f7096f6c38b" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>mouseMoveEvent</name></member>
      <member refid="class_binary_view_1a1097f068100bfaa2ef4def2894f7674d" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>mousePressEvent</name></member>
      <member refid="class_binary_view_1a90aef4a795d16d65072c6beb78d38856" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>mouseReleaseEvent</name></member>
      <member refid="class_binary_view_1a1461a842ae02318a65af4dd5f0ae1dc5" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>refresh</name></member>
      <member refid="class_binary_view_1adf01f8c664c868617c46eb6e6b2ac963" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>resize_sig</name></member>
      <member refid="class_binary_view_1ac82323d54c2011cbbf8f0aac254c88aa" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>setMessage</name></member>
      <member refid="class_binary_view_1aede74ce83997dbeb208184e10092b7fb" prot="private" virt="non-virtual"><scope>BinaryView</scope><name>setSelection</name></member>
      <member refid="class_binary_view_1ada5c4d4981f827adf99f3baa8fdc5b70" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>showChart</name></member>
      <member refid="class_binary_view_1affb1ab8e42f97e15974ce1802847ca0d" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>signalClicked</name></member>
      <member refid="class_binary_view_1a950ab5594d473196d10565addc3686ed" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>signalHovered</name></member>
      <member refid="class_binary_view_1a4edfd52a4c854ad332931ae964d4f7aa" prot="public" virt="non-virtual"><scope>BinaryView</scope><name>updateState</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
