<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="videowidget_8h" kind="file" language="C++">
    <compoundname>videowidget.h</compoundname>
    <includes local="no">atomic</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">tuple</includes>
    <includes local="no">vector</includes>
    <includes local="no">QFuture</includes>
    <includes local="no">QLabel</includes>
    <includes local="no">QSlider</includes>
    <includes local="no">QToolButton</includes>
    <includes local="yes">selfdrive/ui/qt/widgets/cameraview.h</includes>
    <includes local="yes">tools/cabana/streams/abstractstream.h</includes>
    <includedby refid="mainwin_8h" local="yes">/tmp/openpilot/tools/cabana/mainwin.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>atomic</label>
      </node>
      <node id="8">
        <label>QFuture</label>
      </node>
      <node id="10">
        <label>QSlider</label>
      </node>
      <node id="12">
        <label>selfdrive/ui/qt/widgets/cameraview.h</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="13">
        <label>tools/cabana/streams/abstractstream.h</label>
      </node>
      <node id="11">
        <label>QToolButton</label>
      </node>
      <node id="6">
        <label>tuple</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="9">
        <label>QLabel</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/tools/cabana/videowidget.h</label>
        <link refid="videowidget_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>mutex</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/tmp/openpilot/tools/cabana/mainwin.h</label>
        <link refid="mainwin_8h_source"/>
      </node>
      <node id="1">
        <label>/tmp/openpilot/tools/cabana/videowidget.h</label>
        <link refid="videowidget_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_alert_info" prot="public">AlertInfo</innerclass>
    <innerclass refid="class_info_label" prot="public">InfoLabel</innerclass>
    <innerclass refid="class_slider" prot="public">Slider</innerclass>
    <innerclass refid="class_video_widget" prot="public">VideoWidget</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFuture&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QLabel&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSlider&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QToolButton&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;selfdrive/ui/qt/widgets/cameraview.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/streams/abstractstream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="struct_alert_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_alert_info" kindref="compound">AlertInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>cereal::ControlsState::AlertStatus<sp/>status;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>QString<sp/>text1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>QString<sp/>text2;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_info_label" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_info_label" kindref="compound">InfoLabel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QWidget<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="class_info_label" kindref="compound">InfoLabel</ref>(QWidget<sp/>*parent);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>showPixmap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;pt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;sec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPixmap<sp/>&amp;pm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_alert_info" kindref="compound">AlertInfo</ref><sp/>&amp;alert);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>showAlert(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_alert_info" kindref="compound">AlertInfo</ref><sp/>&amp;alert);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paintEvent(QPaintEvent<sp/>*event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>QPixmap<sp/>pixmap;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>QString<sp/>second;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="struct_alert_info" kindref="compound">AlertInfo</ref><sp/>alert_info;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_slider" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_slider" kindref="compound">Slider</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QSlider<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="class_slider" kindref="compound">Slider</ref>(QWidget<sp/>*parent);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentSecond()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value()<sp/>/<sp/>factor;<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCurrentSecond(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sec)<sp/>{<sp/>setValue(sec<sp/>*<sp/>factor);<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTimeRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="struct_alert_info" kindref="compound">AlertInfo</ref><sp/>alertInfo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sec);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>QPixmap<sp/>thumbnail(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sec);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateMaximumTime(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mousePressEvent(QMouseEvent<sp/>*e)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mouseMoveEvent(QMouseEvent<sp/>*e)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>event(QEvent<sp/>*event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paintEvent(QPaintEvent<sp/>*ev)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parseQLog();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/>1000.0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>std::vector&lt;std::tuple&lt;double,<sp/>double,<sp/>TimelineType&gt;&gt;<sp/>timeline;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>std::mutex<sp/>thumbnail_lock;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>std::atomic&lt;bool&gt;<sp/>abort_parse_qlog<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>QMap&lt;uint64_t,<sp/>QPixmap&gt;<sp/>thumbnails;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>std::map&lt;uint64_t,<sp/>AlertInfo&gt;<sp/>alerts;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;QFuture&lt;void&gt;&gt;<sp/>qlog_future;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="class_info_label" kindref="compound">InfoLabel</ref><sp/>thumbnail_label;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_video_widget" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_video_widget" kindref="compound">VideoWidget</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QFrame<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="class_video_widget" kindref="compound">VideoWidget</ref>(QWidget<sp/>*parnet<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateTimeRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_zommed);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMaximumTime(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sec);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateState();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updatePlayBtnState();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>QWidget<sp/>*createCameraWidget();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>CameraWidget<sp/>*cam_widget;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maximum_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>QLabel<sp/>*end_time_label;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>QLabel<sp/>*time_label;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>QToolButton<sp/>*play_btn;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>QToolButton<sp/>*skip_to_end_btn<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="class_info_label" kindref="compound">InfoLabel</ref><sp/>*alert_label;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="class_slider" kindref="compound">Slider</ref><sp/>*slider;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/tools/cabana/videowidget.h"/>
  </compounddef>
</doxygen>
