<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_segment_tree" kind="class" language="C++" prot="public">
    <compoundname>SegmentTree</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_segment_tree_1a1a13dc762b5b9bb45c00031ca7039524" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; double, double &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;double, double&gt; &gt; SegmentTree::tree</definition>
        <argsstring></argsstring>
        <name>tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/util.h" line="66" column="15" bodyfile="/tmp/openpilot/tools/cabana/util.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_segment_tree_1a8296af28f79e8ac1919583a882fecca4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SegmentTree::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/util.h" line="67" column="7" bodyfile="/tmp/openpilot/tools/cabana/util.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_segment_tree_1a48470fe5613d2970e2a5ec4e92df3153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SegmentTree::SegmentTree</definition>
        <argsstring>()=default</argsstring>
        <name>SegmentTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/util.h" line="59" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_segment_tree_1a510c6d48e225a6c40fc1b9ce411dad0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SegmentTree::build</definition>
        <argsstring>(const QVector&lt; QPointF &gt; &amp;arr)</argsstring>
        <name>build</name>
        <param>
          <type>const QVector&lt; QPointF &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/util.h" line="60" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_segment_tree_1ae8651bd591ad172af04ce0c1cf4444d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt;double, double&gt; SegmentTree::minmax</definition>
        <argsstring>(int left, int right) const</argsstring>
        <name>minmax</name>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/util.h" line="61" column="20" bodyfile="/tmp/openpilot/tools/cabana/util.h" bodystart="61" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_segment_tree_1aa1a8ea41d816414a443169d6a16e4ae1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt;double, double&gt; SegmentTree::get_minmax</definition>
        <argsstring>(int n, int left, int right, int range_left, int range_right) const</argsstring>
        <name>get_minmax</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
        </param>
        <param>
          <type>int</type>
          <declname>range_left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>range_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/util.h" line="64" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_segment_tree_1ad0833c1f8088ffa7adaed5902aea60b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SegmentTree::build_tree</definition>
        <argsstring>(const QVector&lt; QPointF &gt; &amp;arr, int n, int left, int right)</argsstring>
        <name>build_tree</name>
        <param>
          <type>const QVector&lt; QPointF &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/util.h" line="65" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/openpilot/tools/cabana/util.h" line="57" column="18" bodyfile="/tmp/openpilot/tools/cabana/util.h" bodystart="57" bodyend="68"/>
    <listofallmembers>
      <member refid="class_segment_tree_1a510c6d48e225a6c40fc1b9ce411dad0f" prot="public" virt="non-virtual"><scope>SegmentTree</scope><name>build</name></member>
      <member refid="class_segment_tree_1ad0833c1f8088ffa7adaed5902aea60b4" prot="private" virt="non-virtual"><scope>SegmentTree</scope><name>build_tree</name></member>
      <member refid="class_segment_tree_1aa1a8ea41d816414a443169d6a16e4ae1" prot="private" virt="non-virtual"><scope>SegmentTree</scope><name>get_minmax</name></member>
      <member refid="class_segment_tree_1ae8651bd591ad172af04ce0c1cf4444d2" prot="public" virt="non-virtual"><scope>SegmentTree</scope><name>minmax</name></member>
      <member refid="class_segment_tree_1a48470fe5613d2970e2a5ec4e92df3153" prot="public" virt="non-virtual"><scope>SegmentTree</scope><name>SegmentTree</name></member>
      <member refid="class_segment_tree_1a8296af28f79e8ac1919583a882fecca4" prot="private" virt="non-virtual"><scope>SegmentTree</scope><name>size</name></member>
      <member refid="class_segment_tree_1a1a13dc762b5b9bb45c00031ca7039524" prot="private" virt="non-virtual"><scope>SegmentTree</scope><name>tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
