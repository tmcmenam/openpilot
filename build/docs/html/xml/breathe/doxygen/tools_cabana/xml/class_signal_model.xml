<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_signal_model" kind="class" language="C++" prot="public">
    <compoundname>SignalModel</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QAbstractItemModel</basecompoundref>
    <innerclass refid="struct_signal_model_1_1_item" prot="public">SignalModel::Item</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_signal_model_1a841b77516101aa2037f776178f04b460" prot="private" static="no" mutable="no">
        <type>MessageId</type>
        <definition>MessageId SignalModel::msg_id</definition>
        <argsstring></argsstring>
        <name>msg_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="59" column="13" bodyfile="/tmp/openpilot/tools/cabana/signalview.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_signal_model_1a7786884d78eadac1e9a6d7bc834b542b" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString SignalModel::filter_str</definition>
        <argsstring></argsstring>
        <name>filter_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="60" column="11" bodyfile="/tmp/openpilot/tools/cabana/signalview.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_signal_model_1a069064c7d849794abf86e6145473d506" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="struct_signal_model_1_1_item" kindref="compound">Item</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Item&gt; SignalModel::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="61" column="19" bodyfile="/tmp/openpilot/tools/cabana/signalview.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_signal_model_1a8041bfbc7334dbb26e7435c3aeed112a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SignalView</definition>
        <argsstring></argsstring>
        <name>SignalView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="62" column="3" bodyfile="/tmp/openpilot/tools/cabana/signalview.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_signal_model_1ad982e7c98838d0a6853e335d8eba6e22" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SignalItemDelegate</definition>
        <argsstring></argsstring>
        <name>SignalItemDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="63" column="3" bodyfile="/tmp/openpilot/tools/cabana/signalview.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_signal_model_1a6ccfe3d21a02832cb14b56226a034623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SignalModel::SignalModel</definition>
        <argsstring>(QObject *parent)</argsstring>
        <name>SignalModel</name>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="36" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a7a73ddf3c629056083feabdbf22ef58a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SignalModel::rowCount</definition>
        <argsstring>(const QModelIndex &amp;parent=QModelIndex()) const override</argsstring>
        <name>rowCount</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
          <defval>QModelIndex()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="37" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a7caa1576f1e57840eaf3e8db1f8bf24e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int SignalModel::columnCount</definition>
        <argsstring>(const QModelIndex &amp;parent=QModelIndex()) const override</argsstring>
        <name>columnCount</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
          <defval>QModelIndex()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="38" column="7" bodyfile="/tmp/openpilot/tools/cabana/signalview.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a46dfc7e115df8af1c92e1e2717517033" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant SignalModel::data</definition>
        <argsstring>(const QModelIndex &amp;index, int role=Qt::DisplayRole) const override</argsstring>
        <name>data</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>role</declname>
          <defval>Qt::DisplayRole</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="39" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a4d6a31196fe0da8674a9aed6e024478a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QModelIndex</type>
        <definition>QModelIndex SignalModel::index</definition>
        <argsstring>(int row, int column, const QModelIndex &amp;parent=QModelIndex()) const override</argsstring>
        <name>index</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
          <defval>QModelIndex()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="40" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a7e6e852b3bda6d45cd6371c679512a83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QModelIndex</type>
        <definition>QModelIndex SignalModel::parent</definition>
        <argsstring>(const QModelIndex &amp;index) const override</argsstring>
        <name>parent</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="41" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a720cd3ed381ca16c7021cb29ee106f0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Qt::ItemFlags</type>
        <definition>Qt::ItemFlags SignalModel::flags</definition>
        <argsstring>(const QModelIndex &amp;index) const override</argsstring>
        <name>flags</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="42" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1ac7a51a028edbccb4c92ab2cc53089a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SignalModel::setData</definition>
        <argsstring>(const QModelIndex &amp;index, const QVariant &amp;value, int role=Qt::EditRole) override</argsstring>
        <name>setData</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>role</declname>
          <defval>Qt::EditRole</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="43" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1afb665133bebce1b412a3f7aa50347fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalModel::setMessage</definition>
        <argsstring>(const MessageId &amp;id)</argsstring>
        <name>setMessage</name>
        <param>
          <type>const MessageId &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="44" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a78c25dd6a543e99679806cad9b5f94e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalModel::setFilter</definition>
        <argsstring>(const QString &amp;txt)</argsstring>
        <name>setFilter</name>
        <param>
          <type>const QString &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="45" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1aca934633f325a490224759b19f1e3920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SignalModel::saveSignal</definition>
        <argsstring>(const cabana::Signal *origin_s, cabana::Signal &amp;s)</argsstring>
        <name>saveSignal</name>
        <param>
          <type>const cabana::Signal *</type>
          <declname>origin_s</declname>
        </param>
        <param>
          <type>cabana::Signal &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="46" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a6f006b29e7675470bfe7512165593b40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_signal_model_1_1_item" kindref="compound">Item</ref> *</type>
        <definition>Item* SignalModel::getItem</definition>
        <argsstring>(const QModelIndex &amp;index) const</argsstring>
        <name>getItem</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="47" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a792472febd286aec344b8cf5b999566a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SignalModel::signalRow</definition>
        <argsstring>(const cabana::Signal *sig) const</argsstring>
        <name>signalRow</name>
        <param>
          <type>const cabana::Signal *</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="48" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a0307a048ed57717d91ddb3a9c4afc788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalModel::showExtraInfo</definition>
        <argsstring>(const QModelIndex &amp;index)</argsstring>
        <name>showExtraInfo</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="49" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_signal_model_1a0d9c88e6fad6d96edec7321338711a42" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalModel::insertItem</definition>
        <argsstring>(SignalModel::Item *parent_item, int pos, const cabana::Signal *sig)</argsstring>
        <name>insertItem</name>
        <param>
          <type><ref refid="struct_signal_model_1_1_item" kindref="compound">SignalModel::Item</ref> *</type>
          <declname>parent_item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const cabana::Signal *</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="52" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1ac0dc9e0f02178dcf7b94d7149ef6d727" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalModel::handleSignalAdded</definition>
        <argsstring>(MessageId id, const cabana::Signal *sig)</argsstring>
        <name>handleSignalAdded</name>
        <param>
          <type>MessageId</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const cabana::Signal *</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="53" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1af6a61a99b316561a35726b51ac05aa4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalModel::handleSignalUpdated</definition>
        <argsstring>(const cabana::Signal *sig)</argsstring>
        <name>handleSignalUpdated</name>
        <param>
          <type>const cabana::Signal *</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="54" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a09000315bc1622a1b37c77650600e423" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalModel::handleSignalRemoved</definition>
        <argsstring>(const cabana::Signal *sig)</argsstring>
        <name>handleSignalRemoved</name>
        <param>
          <type>const cabana::Signal *</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="55" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a8e413c77d89a1490404fe533fa46e08e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalModel::handleMsgChanged</definition>
        <argsstring>(MessageId id)</argsstring>
        <name>handleMsgChanged</name>
        <param>
          <type>MessageId</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="56" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_signal_model_1a5f31e67e93aa8bfd5ea827ce8fa83b75" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SignalModel::refresh</definition>
        <argsstring>()</argsstring>
        <name>refresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/signalview.h" line="57" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SignalModel</label>
        <link refid="class_signal_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QAbstractItemModel</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SignalModel</label>
        <link refid="class_signal_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QAbstractItemModel</label>
      </node>
    </collaborationgraph>
    <location file="/tmp/openpilot/tools/cabana/signalview.h" line="16" column="44" bodyfile="/tmp/openpilot/tools/cabana/signalview.h" bodystart="16" bodyend="64"/>
    <listofallmembers>
      <member refid="class_signal_model_1a7caa1576f1e57840eaf3e8db1f8bf24e" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>columnCount</name></member>
      <member refid="class_signal_model_1a46dfc7e115df8af1c92e1e2717517033" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>data</name></member>
      <member refid="class_signal_model_1a7786884d78eadac1e9a6d7bc834b542b" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>filter_str</name></member>
      <member refid="class_signal_model_1a720cd3ed381ca16c7021cb29ee106f0a" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>flags</name></member>
      <member refid="class_signal_model_1a6f006b29e7675470bfe7512165593b40" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>getItem</name></member>
      <member refid="class_signal_model_1a8e413c77d89a1490404fe533fa46e08e" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>handleMsgChanged</name></member>
      <member refid="class_signal_model_1ac0dc9e0f02178dcf7b94d7149ef6d727" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>handleSignalAdded</name></member>
      <member refid="class_signal_model_1a09000315bc1622a1b37c77650600e423" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>handleSignalRemoved</name></member>
      <member refid="class_signal_model_1af6a61a99b316561a35726b51ac05aa4b" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>handleSignalUpdated</name></member>
      <member refid="class_signal_model_1a4d6a31196fe0da8674a9aed6e024478a" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>index</name></member>
      <member refid="class_signal_model_1a0d9c88e6fad6d96edec7321338711a42" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>insertItem</name></member>
      <member refid="class_signal_model_1a841b77516101aa2037f776178f04b460" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>msg_id</name></member>
      <member refid="class_signal_model_1a7e6e852b3bda6d45cd6371c679512a83" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>parent</name></member>
      <member refid="class_signal_model_1a5f31e67e93aa8bfd5ea827ce8fa83b75" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>refresh</name></member>
      <member refid="class_signal_model_1a069064c7d849794abf86e6145473d506" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>root</name></member>
      <member refid="class_signal_model_1a7a73ddf3c629056083feabdbf22ef58a" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>rowCount</name></member>
      <member refid="class_signal_model_1aca934633f325a490224759b19f1e3920" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>saveSignal</name></member>
      <member refid="class_signal_model_1ac7a51a028edbccb4c92ab2cc53089a89" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>setData</name></member>
      <member refid="class_signal_model_1a78c25dd6a543e99679806cad9b5f94e1" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>setFilter</name></member>
      <member refid="class_signal_model_1afb665133bebce1b412a3f7aa50347fdb" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>setMessage</name></member>
      <member refid="class_signal_model_1a0307a048ed57717d91ddb3a9c4afc788" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>showExtraInfo</name></member>
      <member refid="class_signal_model_1ad982e7c98838d0a6853e335d8eba6e22" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>SignalItemDelegate</name></member>
      <member refid="class_signal_model_1a6ccfe3d21a02832cb14b56226a034623" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>SignalModel</name></member>
      <member refid="class_signal_model_1a792472febd286aec344b8cf5b999566a" prot="public" virt="non-virtual"><scope>SignalModel</scope><name>signalRow</name></member>
      <member refid="class_signal_model_1a8041bfbc7334dbb26e7435c3aeed112a" prot="private" virt="non-virtual"><scope>SignalModel</scope><name>SignalView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
