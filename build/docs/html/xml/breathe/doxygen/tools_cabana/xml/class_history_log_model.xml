<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_history_log_model" kind="class" language="C++" prot="public">
    <compoundname>HistoryLogModel</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QAbstractTableModel</basecompoundref>
    <innerclass refid="struct_history_log_model_1_1_message" prot="public">HistoryLogModel::Message</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_history_log_model_1a08d384c516c7e3502c9602f37b607992" prot="public" static="no" mutable="no">
        <type>MessageId</type>
        <definition>MessageId HistoryLogModel::msg_id</definition>
        <argsstring></argsstring>
        <name>msg_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="58" column="13" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1ae4d6d1b9f5898ea3f080c7deb372c6ee" prot="public" static="no" mutable="no">
        <type>CanData</type>
        <definition>CanData HistoryLogModel::hex_colors</definition>
        <argsstring></argsstring>
        <name>hex_colors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="59" column="11" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1a820d3af8d7f16ca25ad77e5c486cf407" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool HistoryLogModel::has_more_data</definition>
        <argsstring></argsstring>
        <name>has_more_data</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="60" column="8" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1acf14ffd31c8562f0b6def4b22962d92f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int HistoryLogModel::batch_size</definition>
        <argsstring></argsstring>
        <name>batch_size</name>
        <initializer>= 50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="61" column="13" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1aa083aed9903f2b7cd9b21bada299537d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HistoryLogModel::filter_sig_idx</definition>
        <argsstring></argsstring>
        <name>filter_sig_idx</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="62" column="7" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1a51ae9686d9bfb50f8754819f3b52e6e1" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double HistoryLogModel::filter_value</definition>
        <argsstring></argsstring>
        <name>filter_value</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="63" column="10" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1a33fe83defba24cf372ce17922cbf603e" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t HistoryLogModel::last_fetch_time</definition>
        <argsstring></argsstring>
        <name>last_fetch_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="64" column="12" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1a2b1e9f3a37e3c4e8ae9befcc332fd0ea" prot="public" static="no" mutable="no">
        <type>std::function&lt; bool(double, double)&gt;</type>
        <definition>std::function&lt;bool(double, double)&gt; HistoryLogModel::filter_cmp</definition>
        <argsstring></argsstring>
        <name>filter_cmp</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="65" column="17" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1ad71e10f7c42e52db261e9ae7845f82dd" prot="public" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="struct_history_log_model_1_1_message" kindref="compound">Message</ref> &gt;</type>
        <definition>std::deque&lt;Message&gt; HistoryLogModel::messages</definition>
        <argsstring></argsstring>
        <name>messages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="66" column="14" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1a487d35acd9ee4f2af494deb848852c81" prot="public" static="no" mutable="no">
        <type>std::vector&lt; cabana::Signal * &gt;</type>
        <definition>std::vector&lt;cabana::Signal *&gt; HistoryLogModel::sigs</definition>
        <argsstring></argsstring>
        <name>sigs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="67" column="15" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1ab78622ddc8a572912f8586a873ff9730" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool HistoryLogModel::dynamic_mode</definition>
        <argsstring></argsstring>
        <name>dynamic_mode</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="68" column="8" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_history_log_model_1aa680f75f7b34fecf1d07b77f772a278f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool HistoryLogModel::display_signals_mode</definition>
        <argsstring></argsstring>
        <name>display_signals_mode</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="69" column="8" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_history_log_model_1a804817b2012b6f31ed559f5416f9138a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HistoryLogModel::HistoryLogModel</definition>
        <argsstring>(QObject *parent)</argsstring>
        <name>HistoryLogModel</name>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="27" column="3" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1a79449e4bcef34ea961bb235ad87ec213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HistoryLogModel::setMessage</definition>
        <argsstring>(const MessageId &amp;message_id)</argsstring>
        <name>setMessage</name>
        <param>
          <type>const MessageId &amp;</type>
          <declname>message_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="28" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1a8973218cc26b63f8c1e1d88737fdeaa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HistoryLogModel::updateState</definition>
        <argsstring>()</argsstring>
        <name>updateState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="29" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1af166fff3319b2ee505d099f098575190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HistoryLogModel::setFilter</definition>
        <argsstring>(int sig_idx, const QString &amp;value, std::function&lt; bool(double, double)&gt; cmp)</argsstring>
        <name>setFilter</name>
        <param>
          <type>int</type>
          <declname>sig_idx</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::function&lt; bool(double, double)&gt;</type>
          <declname>cmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="30" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1a8f23f72a9b042af557e7efe545e19eae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant HistoryLogModel::headerData</definition>
        <argsstring>(int section, Qt::Orientation orientation, int role=Qt::DisplayRole) const override</argsstring>
        <name>headerData</name>
        <param>
          <type>int</type>
          <declname>section</declname>
        </param>
        <param>
          <type>Qt::Orientation</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>role</declname>
          <defval>Qt::DisplayRole</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="31" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1a0b4bfd1a51aebeba059482e85cb2f53b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVariant</type>
        <definition>QVariant HistoryLogModel::data</definition>
        <argsstring>(const QModelIndex &amp;index, int role=Qt::DisplayRole) const override</argsstring>
        <name>data</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>role</declname>
          <defval>Qt::DisplayRole</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="32" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1ab3c666eb08714059a78c45da3a23b0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HistoryLogModel::fetchMore</definition>
        <argsstring>(const QModelIndex &amp;parent) override</argsstring>
        <name>fetchMore</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="33" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1a0b5fd439bab12bc6788907a109c9891c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HistoryLogModel::canFetchMore</definition>
        <argsstring>(const QModelIndex &amp;parent) const override</argsstring>
        <name>canFetchMore</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="34" column="15" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1af74001b643a501f82411f829ea3e8e5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int HistoryLogModel::rowCount</definition>
        <argsstring>(const QModelIndex &amp;parent=QModelIndex()) const override</argsstring>
        <name>rowCount</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
          <defval>QModelIndex()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="35" column="7" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1a209420ab1e7d6613b883e7216a927976" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int HistoryLogModel::columnCount</definition>
        <argsstring>(const QModelIndex &amp;parent=QModelIndex()) const override</argsstring>
        <name>columnCount</name>
        <param>
          <type>const QModelIndex &amp;</type>
          <declname>parent</declname>
          <defval>QModelIndex()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="36" column="7" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1a36214d5c39119dd575cda91f9438011d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HistoryLogModel::refresh</definition>
        <argsstring>(bool fetch_message=true)</argsstring>
        <name>refresh</name>
        <param>
          <type>bool</type>
          <declname>fetch_message</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="39" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1a65c9d393c751abf49cd031556adb05b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIt</type>
          </param>
        </templateparamlist>
        <type>std::deque&lt; <ref refid="struct_history_log_model_1_1_message" kindref="compound">HistoryLogModel::Message</ref> &gt;</type>
        <definition>std::deque&lt;HistoryLogModel::Message&gt; HistoryLogModel::fetchData</definition>
        <argsstring>(InputIt first, InputIt last, uint64_t min_time)</argsstring>
        <name>fetchData</name>
        <param>
          <type>InputIt</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>last</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>min_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="55" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_history_log_model_1a3adec6125da744a6daea402fc97b4182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::deque&lt; <ref refid="struct_history_log_model_1_1_message" kindref="compound">Message</ref> &gt;</type>
        <definition>std::deque&lt;Message&gt; HistoryLogModel::fetchData</definition>
        <argsstring>(uint64_t from_time, uint64_t min_time=0)</argsstring>
        <name>fetchData</name>
        <param>
          <type>uint64_t</type>
          <declname>from_time</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>min_time</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="56" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_history_log_model_1a781d0ac0f627cfcf9d71321a974a717f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HistoryLogModel::setDisplayType</definition>
        <argsstring>(int type)</argsstring>
        <name>setDisplayType</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="42" column="8"/>
      </memberdef>
      <memberdef kind="slot" id="class_history_log_model_1a384eb8d0db089604d9b6ca8ffc744e09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HistoryLogModel::setDynamicMode</definition>
        <argsstring>(int state)</argsstring>
        <name>setDynamicMode</name>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="43" column="8"/>
      </memberdef>
      <memberdef kind="slot" id="class_history_log_model_1aa5edd9eb53a00cecdb78a1034955d071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HistoryLogModel::segmentsMerged</definition>
        <argsstring>()</argsstring>
        <name>segmentsMerged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/historylog.h" line="44" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>HistoryLogModel</label>
        <link refid="class_history_log_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QAbstractTableModel</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>HistoryLogModel</label>
        <link refid="class_history_log_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QAbstractTableModel</label>
      </node>
    </collaborationgraph>
    <location file="/tmp/openpilot/tools/cabana/historylog.h" line="23" column="49" bodyfile="/tmp/openpilot/tools/cabana/historylog.h" bodystart="23" bodyend="70"/>
    <listofallmembers>
      <member refid="class_history_log_model_1acf14ffd31c8562f0b6def4b22962d92f" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>batch_size</name></member>
      <member refid="class_history_log_model_1a0b5fd439bab12bc6788907a109c9891c" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>canFetchMore</name></member>
      <member refid="class_history_log_model_1a209420ab1e7d6613b883e7216a927976" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>columnCount</name></member>
      <member refid="class_history_log_model_1a0b4bfd1a51aebeba059482e85cb2f53b" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>data</name></member>
      <member refid="class_history_log_model_1aa680f75f7b34fecf1d07b77f772a278f" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>display_signals_mode</name></member>
      <member refid="class_history_log_model_1ab78622ddc8a572912f8586a873ff9730" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>dynamic_mode</name></member>
      <member refid="class_history_log_model_1a65c9d393c751abf49cd031556adb05b6" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>fetchData</name></member>
      <member refid="class_history_log_model_1a3adec6125da744a6daea402fc97b4182" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>fetchData</name></member>
      <member refid="class_history_log_model_1ab3c666eb08714059a78c45da3a23b0a9" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>fetchMore</name></member>
      <member refid="class_history_log_model_1a2b1e9f3a37e3c4e8ae9befcc332fd0ea" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>filter_cmp</name></member>
      <member refid="class_history_log_model_1aa083aed9903f2b7cd9b21bada299537d" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>filter_sig_idx</name></member>
      <member refid="class_history_log_model_1a51ae9686d9bfb50f8754819f3b52e6e1" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>filter_value</name></member>
      <member refid="class_history_log_model_1a820d3af8d7f16ca25ad77e5c486cf407" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>has_more_data</name></member>
      <member refid="class_history_log_model_1a8f23f72a9b042af557e7efe545e19eae" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>headerData</name></member>
      <member refid="class_history_log_model_1ae4d6d1b9f5898ea3f080c7deb372c6ee" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>hex_colors</name></member>
      <member refid="class_history_log_model_1a804817b2012b6f31ed559f5416f9138a" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>HistoryLogModel</name></member>
      <member refid="class_history_log_model_1a33fe83defba24cf372ce17922cbf603e" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>last_fetch_time</name></member>
      <member refid="class_history_log_model_1ad71e10f7c42e52db261e9ae7845f82dd" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>messages</name></member>
      <member refid="class_history_log_model_1a08d384c516c7e3502c9602f37b607992" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>msg_id</name></member>
      <member refid="class_history_log_model_1a36214d5c39119dd575cda91f9438011d" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>refresh</name></member>
      <member refid="class_history_log_model_1af74001b643a501f82411f829ea3e8e5b" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>rowCount</name></member>
      <member refid="class_history_log_model_1aa5edd9eb53a00cecdb78a1034955d071" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>segmentsMerged</name></member>
      <member refid="class_history_log_model_1a781d0ac0f627cfcf9d71321a974a717f" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>setDisplayType</name></member>
      <member refid="class_history_log_model_1a384eb8d0db089604d9b6ca8ffc744e09" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>setDynamicMode</name></member>
      <member refid="class_history_log_model_1af166fff3319b2ee505d099f098575190" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>setFilter</name></member>
      <member refid="class_history_log_model_1a79449e4bcef34ea961bb235ad87ec213" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>setMessage</name></member>
      <member refid="class_history_log_model_1a487d35acd9ee4f2af494deb848852c81" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>sigs</name></member>
      <member refid="class_history_log_model_1a8973218cc26b63f8c1e1d88737fdeaa6" prot="public" virt="non-virtual"><scope>HistoryLogModel</scope><name>updateState</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
