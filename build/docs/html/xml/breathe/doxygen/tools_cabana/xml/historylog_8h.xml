<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="historylog_8h" kind="file" language="C++">
    <compoundname>historylog.h</compoundname>
    <includes local="no">deque</includes>
    <includes local="no">vector</includes>
    <includes local="no">QCheckBox</includes>
    <includes local="no">QComboBox</includes>
    <includes local="no">QHeaderView</includes>
    <includes local="no">QLineEdit</includes>
    <includes local="no">QTableView</includes>
    <includes local="yes">tools/cabana/dbc/dbcmanager.h</includes>
    <includes local="yes">tools/cabana/streams/abstractstream.h</includes>
    <includes refid="util_8h" local="yes">tools/cabana/util.h</includes>
    <includedby refid="detailwidget_8h" local="yes">/tmp/openpilot/tools/cabana/detailwidget.h</includedby>
    <incdepgraph>
      <node id="32">
        <label>QSettings</label>
      </node>
      <node id="25">
        <label>QStyledItemDelegate</label>
      </node>
      <node id="17">
        <label>QDateTime</label>
      </node>
      <node id="13">
        <label>cmath</label>
      </node>
      <node id="19">
        <label>QFont</label>
      </node>
      <node id="24">
        <label>QStringBuilder</label>
      </node>
      <node id="4">
        <label>QCheckBox</label>
      </node>
      <node id="22">
        <label>QSocketNotifier</label>
      </node>
      <node id="9">
        <label>tools/cabana/dbc/dbcmanager.h</label>
      </node>
      <node id="16">
        <label>QByteArray</label>
      </node>
      <node id="21">
        <label>QRegExpValidator</label>
      </node>
      <node id="20">
        <label>QPainter</label>
      </node>
      <node id="28">
        <label>tools/cabana/dbc/dbc.h</label>
      </node>
      <node id="10">
        <label>tools/cabana/streams/abstractstream.h</label>
      </node>
      <node id="15">
        <label>QApplication</label>
      </node>
      <node id="26">
        <label>QToolButton</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/tools/cabana/historylog.h</label>
        <link refid="historylog_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>QDialog</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="31">
        <label>QGroupBox</label>
      </node>
      <node id="7">
        <label>QLineEdit</label>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="12">
        <label>array</label>
      </node>
      <node id="5">
        <label>QComboBox</label>
      </node>
      <node id="2">
        <label>deque</label>
      </node>
      <node id="18">
        <label>QDoubleValidator</label>
      </node>
      <node id="23">
        <label>QStaticText</label>
      </node>
      <node id="8">
        <label>QTableView</label>
      </node>
      <node id="6">
        <label>QHeaderView</label>
      </node>
      <node id="33">
        <label>QSpinBox</label>
      </node>
      <node id="27">
        <label>QVector</label>
      </node>
      <node id="11">
        <label>tools/cabana/util.h</label>
        <link refid="util_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>tools/cabana/settings.h</label>
        <link refid="settings_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/tmp/openpilot/tools/cabana/mainwin.h</label>
        <link refid="mainwin_8h_source"/>
      </node>
      <node id="1">
        <label>/tmp/openpilot/tools/cabana/historylog.h</label>
        <link refid="historylog_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/tmp/openpilot/tools/cabana/detailwidget.h</label>
        <link refid="detailwidget_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_header_view" prot="public">HeaderView</innerclass>
    <innerclass refid="class_history_log_model" prot="public">HistoryLogModel</innerclass>
    <innerclass refid="struct_history_log_model_1_1_message" prot="public">HistoryLogModel::Message</innerclass>
    <innerclass refid="class_logs_widget" prot="public">LogsWidget</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QCheckBox&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QComboBox&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QHeaderView&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QLineEdit&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTableView&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/dbc/dbcmanager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/streams/abstractstream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_header_view" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_header_view" kindref="compound">HeaderView</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QHeaderView<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="class_header_view" kindref="compound">HeaderView</ref>(Qt::Orientation<sp/>orientation,<sp/>QWidget<sp/>*parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>:<sp/>QHeaderView(orientation,<sp/>parent)<sp/>{}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>QSize<sp/>sectionSizeFromContents(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>logicalIndex)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paintSection(QPainter<sp/>*painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRect<sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>logicalIndex)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_history_log_model" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_history_log_model" kindref="compound">HistoryLogModel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QAbstractTableModel<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="class_history_log_model" kindref="compound">HistoryLogModel</ref>(QObject<sp/>*parent)<sp/>:<sp/>QAbstractTableModel(parent)<sp/>{}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageId<sp/>&amp;message_id);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateState();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFilter(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;value,<sp/>std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;<sp/>cmp);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>QVariant<sp/>headerData(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section,<sp/>Qt::Orientation<sp/>orientation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>role<sp/>=<sp/>Qt::DisplayRole)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>QVariant<sp/>data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>role<sp/>=<sp/>Qt::DisplayRole)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fetchMore(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;parent)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canFetchMore(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;parent)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_more_data;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowCount(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;parent<sp/>=<sp/>QModelIndex())</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>messages.size();<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columnCount(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;parent<sp/>=<sp/>QModelIndex())</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>display_signals_mode<sp/>&amp;&amp;<sp/>!sigs.empty()<sp/>?<sp/>sigs.size()<sp/>+<sp/>1<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>refresh(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fetch_message<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDisplayType(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDynamicMode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>segmentsMerged();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47" refid="struct_history_log_model_1_1_message" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_history_log_model_1_1_message" kindref="compound">Message</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>mono_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector&lt;double&gt;<sp/>sig_values;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>QByteArray<sp/>data;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>QVector&lt;QColor&gt;<sp/>colors;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIt&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>std::deque&lt;HistoryLogModel::Message&gt;<sp/>fetchData(InputIt<sp/>first,<sp/>InputIt<sp/>last,<sp/>uint64_t<sp/>min_time);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>std::deque&lt;Message&gt;<sp/>fetchData(uint64_t<sp/>from_time,<sp/>uint64_t<sp/>min_time<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>MessageId<sp/>msg_id;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>CanData<sp/>hex_colors;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_more_data<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_size<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filter_sig_idx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>filter_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>uint64_t<sp/>last_fetch_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>std::function&lt;bool(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;<sp/>filter_cmp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>std::deque&lt;Message&gt;<sp/>messages;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::vector&lt;cabana::Signal<sp/>*&gt;<sp/>sigs;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dynamic_mode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>display_signals_mode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_logs_widget" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_logs_widget" kindref="compound">LogsWidget</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QFrame<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="class_logs_widget" kindref="compound">LogsWidget</ref>(QWidget<sp/>*parent);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageId<sp/>&amp;message_id);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateState();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>showEvent(QShowEvent<sp/>*event)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFilter();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>refresh();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>QTableView<sp/>*logs;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="class_history_log_model" kindref="compound">HistoryLogModel</ref><sp/>*model;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>QCheckBox<sp/>*dynamic_mode;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>QComboBox<sp/>*signals_cb,<sp/>*comp_box,<sp/>*display_type_cb;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>QLineEdit<sp/>*value_edit;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>QWidget<sp/>*filters_widget;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="class_message_bytes_delegate" kindref="compound">MessageBytesDelegate</ref><sp/>*delegate;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/tools/cabana/historylog.h"/>
  </compounddef>
</doxygen>
