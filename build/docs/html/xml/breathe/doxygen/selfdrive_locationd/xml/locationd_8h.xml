<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="locationd_8h" kind="file" language="C++">
    <compoundname>locationd.h</compoundname>
    <includes local="no">eigen3/Eigen/Dense</includes>
    <includes local="no">deque</includes>
    <includes local="no">fstream</includes>
    <includes local="no">memory</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="yes">cereal/messaging/messaging.h</includes>
    <includes local="yes">common/transformations/coordinates.hpp</includes>
    <includes local="yes">common/transformations/orientation.hpp</includes>
    <includes local="yes">common/params.h</includes>
    <includes local="yes">common/swaglog.h</includes>
    <includes local="yes">common/timing.h</includes>
    <includes local="yes">common/util.h</includes>
    <includes local="yes">system/sensord/sensors/constants.h</includes>
    <includes local="yes">selfdrive/locationd/models/live_kf.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/tmp/openpilot/selfdrive/locationd/locationd.h</label>
        <link refid="locationd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>common/params.h</label>
      </node>
      <node id="2">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="14">
        <label>common/util.h</label>
      </node>
      <node id="12">
        <label>common/swaglog.h</label>
      </node>
      <node id="10">
        <label>common/transformations/orientation.hpp</label>
      </node>
      <node id="4">
        <label>fstream</label>
      </node>
      <node id="8">
        <label>cereal/messaging/messaging.h</label>
      </node>
      <node id="9">
        <label>common/transformations/coordinates.hpp</label>
      </node>
      <node id="13">
        <label>common/timing.h</label>
      </node>
      <node id="3">
        <label>deque</label>
      </node>
      <node id="16">
        <label>selfdrive/locationd/models/live_kf.h</label>
      </node>
      <node id="15">
        <label>system/sensord/sensors/constants.h</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_localizer" prot="public">Localizer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="locationd_8h_1a1dbd0a6cb42f5735a99db9072e98d40a" prot="public" static="no">
        <name>VISION_DECIMATION</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/locationd/locationd.h" line="19" column="10" bodyfile="/tmp/openpilot/selfdrive/locationd/locationd.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="locationd_8h_1a1813c90148c2d2079fbacc140ed92103" prot="public" static="no">
        <name>SENSOR_DECIMATION</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/locationd/locationd.h" line="20" column="9" bodyfile="/tmp/openpilot/selfdrive/locationd/locationd.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="locationd_8h_1a9655e2c3afb4386d41ab61cf3800d478" prot="public" static="no">
        <name>POSENET_STD_HIST_HALF</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/locationd/locationd.h" line="23" column="9" bodyfile="/tmp/openpilot/selfdrive/locationd/locationd.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="locationd_8h_1a71884f84eccd8fa19cdf68bb8dce5a38" prot="public" static="no" strong="no">
        <type></type>
        <name>LocalizerGnssSource</name>
        <enumvalue id="locationd_8h_1a71884f84eccd8fa19cdf68bb8dce5a38ac13e310887f8d3f0deb938ba1fe180de" prot="public">
          <name>UBLOX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="locationd_8h_1a71884f84eccd8fa19cdf68bb8dce5a38ab058d456ae8263ae0ba7959058c8c8f6" prot="public">
          <name>QCOM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/locationd/locationd.h" line="25" column="25" bodyfile="/tmp/openpilot/selfdrive/locationd/locationd.h" bodystart="25" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eigen3/Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/messaging/messaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/transformations/coordinates.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/transformations/orientation.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/params.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/swaglog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/timing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/sensord/sensors/constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VISION_DECIMATION<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SENSOR_DECIMATION<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;selfdrive/locationd/models/live_kf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POSENET_STD_HIST_HALF<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LocalizerGnssSource<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>UBLOX,<sp/>QCOM</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_localizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_localizer" kindref="compound">Localizer</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="class_localizer" kindref="compound">Localizer</ref>(LocalizerGnssSource<sp/>gnss_source<sp/>=<sp/>LocalizerGnssSource::UBLOX);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>locationd_thread();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_kalman(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time<sp/>=<sp/>NAN);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_kalman(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;init_orient,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;init_pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;init_vel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixXdr<sp/>&amp;init_pos_R,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixXdr<sp/>&amp;init_vel_R);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_kalman(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;init_x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixXdr<sp/>&amp;init_P);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finite_check(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time<sp/>=<sp/>NAN);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time_check(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time<sp/>=<sp/>NAN);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_reset_tracker();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_gps_ok();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>critical_services_valid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>double&gt;<sp/>&amp;critical_services);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_timestamp_valid(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>determine_gps_mode(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>are_inputs_ok();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>observation_timings_invalid_reset();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>kj::ArrayPtr&lt;capnp::byte&gt;<sp/>get_message_bytes(MessageBuilder&amp;<sp/>msg_builder,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inputsOK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sensorsOK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpsOK,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>msgValid);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>build_live_location(cereal::LiveLocationKalman::Builder&amp;<sp/>fix);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>get_position_geodetic();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>get_state();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>get_stdev();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_msg_bytes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_msg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::Event::Reader&amp;<sp/>log);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_sensor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::SensorEventData::Reader&amp;<sp/>log);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_gps(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::GpsLocationData::Reader&amp;<sp/>log,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sensor_time_offset);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_gnss(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::GnssMeasurements::Reader&amp;<sp/>log);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_car_state(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::CarState::Reader&amp;<sp/>log);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_cam_odo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::CameraOdometry::Reader&amp;<sp/>log);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_live_calib(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::LiveCalibrationData::Reader&amp;<sp/>log);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>input_fake_gps_observations(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;LiveKalman&gt;<sp/>kf;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>calib;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>MatrixXdr<sp/>device_from_calib;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>MatrixXdr<sp/>calib_from_device;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calibrated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>car_speed<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>last_reset_time<sp/>=<sp/>NAN;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>std::deque&lt;double&gt;<sp/>posenet_stds;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;LocalCoord&gt;<sp/>converter;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>int64_t<sp/>unix_timestamp_millis<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>reset_tracker<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>device_fell<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gps_mode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>first_valid_log_time<sp/>=<sp/>NAN;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ttff<sp/>=<sp/>NAN;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>last_gps_msg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>LocalizerGnssSource<sp/>gnss_source;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>observation_timings_invalid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>double&gt;<sp/>observation_values_invalid;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>standstill<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>int32_t<sp/>orientation_reset_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gps_std_factor;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gps_variance_factor;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gps_vertical_variance_factor;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gps_time_offset;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>camodo_yawrate_distribution<sp/>=<sp/>Eigen::Vector2d(0.0,<sp/>10.0);<sp/></highlight><highlight class="comment">//<sp/>mean,<sp/>std</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>configure_gnss_source(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LocalizerGnssSource<sp/>&amp;source);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/selfdrive/locationd/locationd.h"/>
  </compounddef>
</doxygen>
