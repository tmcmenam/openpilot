<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="boardd_8h" kind="file" language="C++">
    <compoundname>boardd.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="panda_8h" local="yes">selfdrive/boardd/panda.h</includes>
    <incdepgraph>
      <node id="8">
        <label>list</label>
      </node>
      <node id="19">
        <label>libusb-1.0/libusb.h</label>
      </node>
      <node id="16">
        <label>atomic</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="11">
        <label>cereal/gen/cpp/car.capnp.h</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/selfdrive/boardd/boardd.h</label>
        <link refid="boardd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>selfdrive/boardd/panda.h</label>
        <link refid="panda_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="14">
        <label>panda/board/can_definitions.h</label>
      </node>
      <node id="13">
        <label>panda/board/health.h</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="6">
        <label>ctime</label>
      </node>
      <node id="10">
        <label>optional</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="15">
        <label>selfdrive/boardd/panda_comms.h</label>
        <link refid="panda__comms_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>linux/spi/spidev.h</label>
      </node>
      <node id="17">
        <label>mutex</label>
      </node>
      <node id="12">
        <label>cereal/gen/cpp/log.capnp.h</label>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="boardd_8h_1ad2b366c2637bba467d95c19f0c8a4388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool safety_setter_thread</definition>
        <argsstring>(std::vector&lt; Panda * &gt; pandas)</argsstring>
        <name>safety_setter_thread</name>
        <param>
          <type>std::vector&lt; <ref refid="class_panda" kindref="compound">Panda</ref> * &gt;</type>
          <declname>pandas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/boardd/boardd.h" line="8" column="6" declfile="/tmp/openpilot/selfdrive/boardd/boardd.h" declline="8" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="boardd_8h_1a2f9d95e2ebe2d186773ba50fdb6b7d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void boardd_main_thread</definition>
        <argsstring>(std::vector&lt; std::string &gt; serials)</argsstring>
        <name>boardd_main_thread</name>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>serials</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/boardd/boardd.h" line="9" column="6" declfile="/tmp/openpilot/selfdrive/boardd/boardd.h" declline="9" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;selfdrive/boardd/panda.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>safety_setter_thread(std::vector&lt;Panda<sp/>*&gt;<sp/>pandas);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>boardd_main_thread(std::vector&lt;std::string&gt;<sp/>serials);</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/selfdrive/boardd/boardd.h"/>
  </compounddef>
</doxygen>
