<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="proclog_8h" kind="file" language="C++">
    <compoundname>proclog.h</compoundname>
    <includes local="no">optional</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes local="yes">cereal/messaging/messaging.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/tmp/openpilot/system/proclogd/proclog.h</label>
        <link refid="proclog_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="6">
        <label>cereal/messaging/messaging.h</label>
      </node>
      <node id="2">
        <label>optional</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="4">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_c_p_u_time" prot="public">CPUTime</innerclass>
    <innerclass refid="struct_proc_cache" prot="public">ProcCache</innerclass>
    <innerclass refid="struct_proc_stat" prot="public">ProcStat</innerclass>
    <innernamespace refid="namespace_parser">Parser</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="proclog_8h_1a42462b676cef14e36f2325612977328e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void buildProcLogMessage</definition>
        <argsstring>(MessageBuilder &amp;msg)</argsstring>
        <name>buildProcLogMessage</name>
        <param>
          <type>MessageBuilder &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/proclogd/proclog.h" line="40" column="6" declfile="/tmp/openpilot/system/proclogd/proclog.h" declline="40" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/messaging/messaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="struct_c_p_u_time" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_p_u_time" kindref="compound">CPUTime</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>utime,<sp/>ntime,<sp/>stime,<sp/>itime;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iowtime,<sp/>irqtime,<sp/>sirqtime;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="struct_proc_cache" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_proc_cache" kindref="compound">ProcCache</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>std::string<sp/>name,<sp/>exe;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>cmdline;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="struct_proc_stat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_proc_stat" kindref="compound">ProcStat</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid,<sp/>ppid,<sp/>processor;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cutime,<sp/>cstime,<sp/>priority,<sp/>nice,<sp/>num_threads,<sp/>rss;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>utime,<sp/>stime,<sp/>vms;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>starttime;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Parser<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">std::vector&lt;int&gt;<sp/>pids();</highlight></codeline>
<codeline lineno="32"><highlight class="normal">std::optional&lt;ProcStat&gt;<sp/>procStat(std::string<sp/>stat);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>cmdline(std::istream<sp/>&amp;stream);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">std::vector&lt;CPUTime&gt;<sp/>cpuTimes(std::istream<sp/>&amp;stream);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">std::unordered_map&lt;std::string,<sp/>uint64_t&gt;<sp/>memInfo(std::istream<sp/>&amp;stream);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_proc_cache" kindref="compound">ProcCache</ref><sp/>&amp;getProcExtraInfo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Parser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buildProcLogMessage(MessageBuilder<sp/>&amp;msg);</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/system/proclogd/proclog.h"/>
  </compounddef>
</doxygen>
