<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="findsignal_8h" kind="file" language="C++">
    <compoundname>findsignal.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">limits</includes>
    <includes local="no">QAbstractTableModel</includes>
    <includes local="no">QLabel</includes>
    <includes local="no">QPushButton</includes>
    <includes local="no">QTableView</includes>
    <includes local="yes">tools/cabana/commands.h</includes>
    <includes local="yes">tools/cabana/settings.h</includes>
    <incdepgraph>
      <node id="3">
        <label>limits</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/tools/cabana/tools/findsignal.h</label>
        <link refid="findsignal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>tools/cabana/settings.h</label>
      </node>
      <node id="8">
        <label>tools/cabana/commands.h</label>
      </node>
      <node id="6">
        <label>QPushButton</label>
      </node>
      <node id="5">
        <label>QLabel</label>
      </node>
      <node id="7">
        <label>QTableView</label>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="4">
        <label>QAbstractTableModel</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_find_signal_model" prot="public">FindSignalModel</innerclass>
    <innerclass refid="struct_find_signal_model_1_1_search_signal" prot="public">FindSignalModel::SearchSignal</innerclass>
    <innerclass refid="class_find_signal_dlg" prot="public">FindSignalDlg</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QAbstractTableModel&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QLabel&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPushButton&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTableView&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/commands.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/settings.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_find_signal_model" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_find_signal_model" kindref="compound">FindSignalModel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QAbstractTableModel<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="struct_find_signal_model_1_1_search_signal" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_find_signal_model_1_1_search_signal" kindref="compound">SearchSignal</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageId<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>mono_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>cabana::Signal<sp/>sig<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>QStringList<sp/>values;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="class_find_signal_model" kindref="compound">FindSignalModel</ref>(QObject<sp/>*parent)<sp/>:<sp/>QAbstractTableModel(parent)<sp/>{}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>QVariant<sp/>headerData(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section,<sp/>Qt::Orientation<sp/>orientation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>role<sp/>=<sp/>Qt::DisplayRole)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>QVariant<sp/>data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>role<sp/>=<sp/>Qt::DisplayRole)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columnCount(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;parent<sp/>=<sp/>QModelIndex())</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowCount(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QModelIndex<sp/>&amp;parent<sp/>=<sp/>QModelIndex())</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::min(filtered_signals.size(),<sp/>300);<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>search(std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;<sp/>cmp);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>undo();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>QList&lt;SearchSignal&gt;<sp/>filtered_signals;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>QList&lt;SearchSignal&gt;<sp/>initial_signals;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>QList&lt;QList&lt;SearchSignal&gt;&gt;<sp/>histories;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>uint64_t<sp/>last_time<sp/>=<sp/>std::numeric_limits&lt;uint64_t&gt;::max();</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_find_signal_dlg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_find_signal_dlg" kindref="compound">FindSignalDlg</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QDialog<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="class_find_signal_dlg" kindref="compound">FindSignalDlg</ref>(QWidget<sp/>*parent);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>openMessage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageId<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>search();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>modelReset();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setInitialSignals();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>customMenuRequested(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QPoint<sp/>&amp;pos);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>QLineEdit<sp/>*value1,<sp/>*value2,<sp/>*factor_edit,<sp/>*offset_edit;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>QLineEdit<sp/>*bus_edit,<sp/>*address_edit,<sp/>*first_time_edit,<sp/>*last_time_edit;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>QComboBox<sp/>*compare_cb;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>QSpinBox<sp/>*min_size,<sp/>*max_size;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>QCheckBox<sp/>*litter_endian,<sp/>*is_signed;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>QPushButton<sp/>*search_btn,<sp/>*reset_btn,<sp/>*undo_btn;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>QGroupBox<sp/>*properties_group,<sp/>*message_group;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>QTableView<sp/>*view;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>QLabel<sp/>*to_label,<sp/>*stats_label;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="class_find_signal_model" kindref="compound">FindSignalModel</ref><sp/>*model;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/tools/cabana/tools/findsignal.h"/>
  </compounddef>
</doxygen>
