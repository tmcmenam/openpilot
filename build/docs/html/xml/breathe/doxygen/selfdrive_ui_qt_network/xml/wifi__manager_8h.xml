<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="wifi__manager_8h" kind="file" language="C++">
    <compoundname>wifi_manager.h</compoundname>
    <includes local="no">optional</includes>
    <includes local="no">QtDBus</includes>
    <includes local="no">QTimer</includes>
    <includes local="yes">selfdrive/ui/qt/network/networkmanager.h</includes>
    <includedby refid="networking_8h" local="yes">/tmp/openpilot/selfdrive/ui/qt/network/networking.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>QtDBus</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h</label>
        <link refid="wifi__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>optional</label>
      </node>
      <node id="4">
        <label>QTimer</label>
      </node>
      <node id="5">
        <label>selfdrive/ui/qt/network/networkmanager.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/tmp/openpilot/selfdrive/ui/qt/network/networking.h</label>
        <link refid="networking_8h_source"/>
      </node>
      <node id="1">
        <label>/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h</label>
        <link refid="wifi__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_network" prot="public">Network</innerclass>
    <innerclass refid="class_wifi_manager" prot="public">WifiManager</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="wifi__manager_8h_1ac7b092659a3a26b190537c0b322ca427" prot="public" static="no" strong="yes">
        <type></type>
        <name>SecurityType</name>
        <enumvalue id="wifi__manager_8h_1ac7b092659a3a26b190537c0b322ca427aa38bd5138bf35514df41a1795ebbf5c3" prot="public">
          <name>OPEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wifi__manager_8h_1ac7b092659a3a26b190537c0b322ca427a71d33419797cfffde865236f89e7025a" prot="public">
          <name>WPA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wifi__manager_8h_1ac7b092659a3a26b190537c0b322ca427a40aa75f8e8cfdf7b660c5620e953229f" prot="public">
          <name>UNSUPPORTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" line="9" column="24" bodyfile="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" bodystart="9" bodyend="13"/>
      </memberdef>
      <memberdef kind="enum" id="wifi__manager_8h_1adb42be59b4047a4fbff626c238999a3f" prot="public" static="no" strong="yes">
        <type></type>
        <name>ConnectedType</name>
        <enumvalue id="wifi__manager_8h_1adb42be59b4047a4fbff626c238999a3fa99c8ce56e7ab246445d3b134724428f3" prot="public">
          <name>DISCONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wifi__manager_8h_1adb42be59b4047a4fbff626c238999a3fa9a14f95e151eec641316e7c784ce832d" prot="public">
          <name>CONNECTING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wifi__manager_8h_1adb42be59b4047a4fbff626c238999a3faa5afd6edd5336d91316964e493936858" prot="public">
          <name>CONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" line="14" column="25" bodyfile="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="enum" id="wifi__manager_8h_1a3a159600500d5d7248be5bd1ca1f8d83" prot="public" static="no" strong="yes">
        <type></type>
        <name>NetworkType</name>
        <enumvalue id="wifi__manager_8h_1a3a159600500d5d7248be5bd1ca1f8d83ab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wifi__manager_8h_1a3a159600500d5d7248be5bd1ca1f8d83a2f0b4d2c0c3d64bbb2cd525dbba8b0d0" prot="public">
          <name>WIFI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wifi__manager_8h_1a3a159600500d5d7248be5bd1ca1f8d83adeaa44e5e872be992b4109cf1fbfe41e" prot="public">
          <name>CELL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wifi__manager_8h_1a3a159600500d5d7248be5bd1ca1f8d83aaec781ea11a81918e0f858a1aa3f1049" prot="public">
          <name>ETHERNET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" line="19" column="23" bodyfile="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" bodystart="19" bodyend="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wifi__manager_8h_1aa377b052a7c5283c7efc4180610ac288" prot="public" static="no">
        <type>QMap&lt; QString, QVariantMap &gt;</type>
        <definition>typedef QMap&lt;QString, QVariantMap&gt; Connection</definition>
        <argsstring></argsstring>
        <name>Connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" line="26" column="14" bodyfile="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wifi__manager_8h_1a273c469dce703ac7af49a5b2fc032af2" prot="public" static="no">
        <type>QVector&lt; QVariantMap &gt;</type>
        <definition>typedef QVector&lt;QVariantMap&gt; IpConfig</definition>
        <argsstring></argsstring>
        <name>IpConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" line="27" column="17" bodyfile="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wifi__manager_8h_1aef037462fb4bc2410e65d0b9c3d78311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool compare_by_strength</definition>
        <argsstring>(const Network &amp;a, const Network &amp;b)</argsstring>
        <name>compare_by_strength</name>
        <param>
          <type>const <ref refid="struct_network" kindref="compound">Network</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_network" kindref="compound">Network</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" line="35" column="6" declfile="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" declline="35" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="wifi__manager_8h_1ac0b928e8ea92539b92440f711081e4e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int strengthLevel</definition>
        <argsstring>(unsigned int strength)</argsstring>
        <name>strengthLevel</name>
        <param>
          <type>unsigned int</type>
          <declname>strength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" line="36" column="12" bodyfile="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h" bodystart="36" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtDBus&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;selfdrive/ui/qt/network/networkmanager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>SecurityType<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>OPEN,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>WPA,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>UNSUPPORTED</highlight></codeline>
<codeline lineno="13"><highlight class="normal">};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>ConnectedType<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>DISCONNECTED,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>CONNECTING,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>CONNECTED</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>NetworkType<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>NONE,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>WIFI,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>CELL,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>ETHERNET</highlight></codeline>
<codeline lineno="24"><highlight class="normal">};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>QMap&lt;QString,<sp/>QVariantMap&gt;<sp/>Connection;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>QVector&lt;QVariantMap&gt;<sp/>IpConfig;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_network" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_network" kindref="compound">Network</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>QByteArray<sp/>ssid;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strength;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>ConnectedType<sp/>connected;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>SecurityType<sp/>security_type;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compare_by_strength(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_network" kindref="compound">Network</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_network" kindref="compound">Network</ref><sp/>&amp;b);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strengthLevel(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strength)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::clamp((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)round(strength<sp/>/<sp/>33.),<sp/>0,<sp/>3);<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_wifi_manager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wifi_manager" kindref="compound">WifiManager</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>QMap&lt;QString,<sp/>Network&gt;<sp/>seenNetworks;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>QMap&lt;QDBusObjectPath,<sp/>QString&gt;<sp/>knownConnections;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>QString<sp/>ipv4_address;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_wifi_manager" kindref="compound">WifiManager</ref>(QObject*<sp/>parent);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>start();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stop();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>requestScan();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forgetConnection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;ssid);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isKnownConnection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;ssid);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>std::optional&lt;QDBusPendingCall&gt;<sp/>activateWifiConnection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;ssid);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>NetworkType<sp/>currentNetworkType();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateGsmSettings(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>roaming,<sp/>QString<sp/>apn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>metered);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>connect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_network" kindref="compound">Network</ref><sp/>&amp;ssid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;password<sp/>=<sp/>{},<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;username<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tethering<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTetheringEnabled(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTetheringEnabled();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>changeTetheringPassword(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;newPassword);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>QString<sp/>getTetheringPassword();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>QString<sp/>adapter;<sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>to<sp/>network<sp/>manager<sp/>wifi-device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>QTimer<sp/>timer;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>raw_adapter_state;<sp/><sp/></highlight><highlight class="comment">//<sp/>Connection<sp/>status<sp/>https://developer.gnome.org/NetworkManager/1.26/nm-dbus-types.html#NMDeviceState</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>QString<sp/>connecting_to_network;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>QString<sp/>tethering_ssid;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>defaultTetheringPassword<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;swagswagcomma&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>QString<sp/>activeAp;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>QDBusObjectPath<sp/>lteConnectionPath;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>QString<sp/>getAdapter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>=<sp/>NM_DEVICE_TYPE_WIFI);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>uint<sp/>getAdapterType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusObjectPath<sp/>&amp;path);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>QString<sp/>getIp4Address();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deactivateConnectionBySsid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;ssid);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deactivateConnection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusObjectPath<sp/>&amp;path);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>QVector&lt;QDBusObjectPath&gt;<sp/>getActiveConnections();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>QByteArray<sp/>get_property(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;network_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;property);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>SecurityType<sp/>getSecurityType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariantMap<sp/>&amp;properties);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>QDBusObjectPath<sp/>getConnectionPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;ssid);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>Connection<sp/>getConnectionSettings(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusObjectPath<sp/>&amp;path);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initConnections();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>refreshNetworks();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>activateModemConnection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusObjectPath<sp/>&amp;path);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addTetheringConnection();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCurrentConnecting(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;ssid);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wrongPassword(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;ssid);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>refreshSignal();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stateChange(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_state,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>previous_state,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>change_reason);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>propertyChange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;interface,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QVariantMap<sp/>&amp;props,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/>&amp;invalidated_props);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deviceAdded(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusObjectPath<sp/>&amp;path);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>connectionRemoved(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusObjectPath<sp/>&amp;path);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>newConnection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDBusObjectPath<sp/>&amp;path);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>refreshFinished(QDBusPendingCallWatcher<sp/>*call);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tetheringActivated(QDBusPendingCallWatcher<sp/>*call);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/selfdrive/ui/qt/network/wifi_manager.h"/>
  </compounddef>
</doxygen>
