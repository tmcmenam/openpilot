<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="camera__util_8h" kind="file" language="C++">
    <compoundname>camera_util.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">optional</includes>
    <includes local="no">queue</includes>
    <includes local="no">media/cam_req_mgr.h</includes>
    <includedby refid="camera__qcom2_8h" local="yes">/tmp/openpilot/system/camerad/cameras/camera_qcom2.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="7">
        <label>queue</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/system/camerad/cameras/camera_util.h</label>
        <link refid="camera__util_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="6">
        <label>optional</label>
      </node>
      <node id="8">
        <label>media/cam_req_mgr.h</label>
      </node>
      <node id="5">
        <label>mutex</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/tmp/openpilot/system/camerad/cameras/camera_qcom2.h</label>
        <link refid="camera__qcom2_8h_source"/>
      </node>
      <node id="1">
        <label>/tmp/openpilot/system/camerad/cameras/camera_util.h</label>
        <link refid="camera__util_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_memory_manager" prot="public">MemoryManager</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="camera__util_8h_1a9f2cd06c0581d38f7c05dd2e010b3bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; int32_t &gt;</type>
        <definition>std::optional&lt;int32_t&gt; device_acquire</definition>
        <argsstring>(int fd, int32_t session_handle, void *data, uint32_t num_resources=1)</argsstring>
        <name>device_acquire</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>session_handle</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>num_resources</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_util.h" line="12" column="15" declfile="/tmp/openpilot/system/camerad/cameras/camera_util.h" declline="12" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="camera__util_8h_1a829c141929cff417794869e9152f5424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int device_config</definition>
        <argsstring>(int fd, int32_t session_handle, int32_t dev_handle, uint64_t packet_handle)</argsstring>
        <name>device_config</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>session_handle</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dev_handle</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>packet_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_util.h" line="13" column="5" declfile="/tmp/openpilot/system/camerad/cameras/camera_util.h" declline="13" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="camera__util_8h_1aa4461d4f84fb2fc265825f482c635808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int device_control</definition>
        <argsstring>(int fd, int op_code, int session_handle, int dev_handle)</argsstring>
        <name>device_control</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>op_code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>session_handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_util.h" line="14" column="5" declfile="/tmp/openpilot/system/camerad/cameras/camera_util.h" declline="14" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="camera__util_8h_1a3e9016f077cd13a440453ea6bba44984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int do_cam_control</definition>
        <argsstring>(int fd, int op_code, void *handle, int size)</argsstring>
        <name>do_cam_control</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>op_code</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_util.h" line="15" column="5" declfile="/tmp/openpilot/system/camerad/cameras/camera_util.h" declline="15" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="camera__util_8h_1a59c97b2bd89028dd4f278ffb6fdebd34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* alloc_w_mmu_hdl</definition>
        <argsstring>(int video0_fd, int len, uint32_t *handle, int align=8, int flags=CAM_MEM_FLAG_KMD_ACCESS|CAM_MEM_FLAG_UMD_ACCESS|CAM_MEM_FLAG_CMD_BUF_TYPE, int mmu_hdl=0, int mmu_hdl2=0)</argsstring>
        <name>alloc_w_mmu_hdl</name>
        <param>
          <type>int</type>
          <declname>video0_fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>align</declname>
          <defval>8</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>CAM_MEM_FLAG_KMD_ACCESS|CAM_MEM_FLAG_UMD_ACCESS|CAM_MEM_FLAG_CMD_BUF_TYPE</defval>
        </param>
        <param>
          <type>int</type>
          <declname>mmu_hdl</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>mmu_hdl2</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_util.h" line="16" column="6" declfile="/tmp/openpilot/system/camerad/cameras/camera_util.h" declline="16" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="camera__util_8h_1a59b7dea9c1ee5b32024e805dcbe4c4f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void release</definition>
        <argsstring>(int video0_fd, uint32_t handle)</argsstring>
        <name>release</name>
        <param>
          <type>int</type>
          <declname>video0_fd</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_util.h" line="18" column="6" declfile="/tmp/openpilot/system/camerad/cameras/camera_util.h" declline="18" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;media/cam_req_mgr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">std::optional&lt;int32_t&gt;<sp/>device_acquire(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>int32_t<sp/>session_handle,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>num_resources=1);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_config(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>int32_t<sp/>session_handle,<sp/>int32_t<sp/>dev_handle,<sp/>uint64_t<sp/>packet_handle);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_control(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op_code,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>session_handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev_handle);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>do_cam_control(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op_code,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*alloc_w_mmu_hdl(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>video0_fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>uint32_t<sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align<sp/>=<sp/>8,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>=<sp/>CAM_MEM_FLAG_KMD_ACCESS<sp/>|<sp/>CAM_MEM_FLAG_UMD_ACCESS<sp/>|<sp/>CAM_MEM_FLAG_CMD_BUF_TYPE,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mmu_hdl<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mmu_hdl2<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>release(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>video0_fd,<sp/>uint32_t<sp/>handle);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_memory_manager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_memory_manager" kindref="compound">MemoryManager</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_video0_fd)<sp/>{<sp/>video0_fd<sp/>=<sp/>_video0_fd;<sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_memory_manager" kindref="compound">MemoryManager</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alloc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>uint32_t<sp/>*handle)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;T,<sp/>std::function&lt;void(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&gt;&gt;((T*)alloc_buf(len,<sp/>handle),<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)<sp/>{<sp/>this-&gt;free(ptr);<sp/>});</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*alloc_buf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>uint32_t<sp/>*handle);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/>lock;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;void<sp/>*,<sp/>uint32_t&gt;<sp/>handle_lookup;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;void<sp/>*,<sp/>int&gt;<sp/>size_lookup;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>std::queue&lt;void<sp/>*&gt;<sp/>&gt;<sp/>cached_allocations;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>video0_fd;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/system/camerad/cameras/camera_util.h"/>
  </compounddef>
</doxygen>
