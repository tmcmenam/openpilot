<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="camera__common_8h" kind="file" language="C++">
    <compoundname>camera_common.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">memory</includes>
    <includes local="no">thread</includes>
    <includes local="yes">cereal/messaging/messaging.h</includes>
    <includes local="yes">cereal/visionipc/visionbuf.h</includes>
    <includes local="yes">cereal/visionipc/visionipc.h</includes>
    <includes local="yes">cereal/visionipc/visionipc_server.h</includes>
    <includes local="yes">common/mat.h</includes>
    <includes local="yes">common/queue.h</includes>
    <includes local="yes">common/swaglog.h</includes>
    <includes local="yes">system/hardware/hw.h</includes>
    <includedby refid="camera__qcom2_8h" local="yes">/tmp/openpilot/system/camerad/cameras/camera_qcom2.h</includedby>
    <incdepgraph>
      <node id="11">
        <label>common/queue.h</label>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>cereal/visionipc/visionipc_server.h</label>
      </node>
      <node id="12">
        <label>common/swaglog.h</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/system/camerad/cameras/camera_common.h</label>
        <link refid="camera__common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cereal/messaging/messaging.h</label>
      </node>
      <node id="7">
        <label>cereal/visionipc/visionbuf.h</label>
      </node>
      <node id="3">
        <label>cstdlib</label>
      </node>
      <node id="8">
        <label>cereal/visionipc/visionipc.h</label>
      </node>
      <node id="10">
        <label>common/mat.h</label>
      </node>
      <node id="5">
        <label>thread</label>
      </node>
      <node id="13">
        <label>system/hardware/hw.h</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/tmp/openpilot/system/camerad/cameras/camera_qcom2.h</label>
        <link refid="camera__qcom2_8h_source"/>
      </node>
      <node id="1">
        <label>/tmp/openpilot/system/camerad/cameras/camera_common.h</label>
        <link refid="camera__common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_camera_info" prot="public">CameraInfo</innerclass>
    <innerclass refid="struct_frame_metadata" prot="public">FrameMetadata</innerclass>
    <innerclass refid="class_camera_buf" prot="public">CameraBuf</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="camera__common_8h_1ab800f42ed07801e46b221b657d0eebbc" prot="public" static="no">
        <name>CAMERA_ID_IMX298</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="17" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1a2e30fd8e924bc697a62ed68763d7c307" prot="public" static="no">
        <name>CAMERA_ID_IMX179</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="18" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1adba7c961f4d7bd0738c4ae268efd487d" prot="public" static="no">
        <name>CAMERA_ID_S5K3P8SP</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="19" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1a500ae05246aca452292e5fad62e2b7c6" prot="public" static="no">
        <name>CAMERA_ID_OV8865</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="20" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1a563f7f3a9657c7f8d6f1bc8157a471c8" prot="public" static="no">
        <name>CAMERA_ID_IMX298_FLIPPED</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="21" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1a47acbc0fefa893aec7d9d1e4cda6c64b" prot="public" static="no">
        <name>CAMERA_ID_OV10640</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="22" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1a3c20b6c952256da068205146ebaef89e" prot="public" static="no">
        <name>CAMERA_ID_LGC920</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="23" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1adaf1393f8d189c4f6abb866a9b12023d" prot="public" static="no">
        <name>CAMERA_ID_LGC615</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="24" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1abe4fcbcd9b885283dfdf54fddf1351a1" prot="public" static="no">
        <name>CAMERA_ID_AR0231</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="25" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1a460e23d2a8fbf49008df1ef9b09013c4" prot="public" static="no">
        <name>CAMERA_ID_OX03C10</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="26" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__common_8h_1af6c93c59b3acfc838a89a52e80ea0af8" prot="public" static="no">
        <name>CAMERA_ID_MAX</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="27" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="camera__common_8h_1af7eb92b45c5f7f64f02821f87c385ebb" prot="public" static="no" strong="no">
        <type></type>
        <name>CameraType</name>
        <enumvalue id="camera__common_8h_1af7eb92b45c5f7f64f02821f87c385ebba9833564f9f94e00beac0c3646ce0dc42" prot="public">
          <name>RoadCam</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="camera__common_8h_1af7eb92b45c5f7f64f02821f87c385ebba0cbe91ab9c4273482e84366a25c8c633" prot="public">
          <name>DriverCam</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="camera__common_8h_1af7eb92b45c5f7f64f02821f87c385ebba9045f8db3a60e5bd0dc70cf3b2f54908" prot="public">
          <name>WideRoadCam</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="31" column="16" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="31" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="camera__common_8h_1a70d2f6947db4e5db895c90b32d0894f0" prot="public" static="no">
        <type>struct <ref refid="struct_camera_info" kindref="compound">CameraInfo</ref></type>
        <definition>typedef struct CameraInfo CameraInfo</definition>
        <argsstring></argsstring>
        <name>CameraInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="52" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="camera__common_8h_1aa5eb0d84739e3665c84fee1f8b348379" prot="public" static="no">
        <type>struct <ref refid="struct_frame_metadata" kindref="compound">FrameMetadata</ref></type>
        <definition>typedef struct FrameMetadata FrameMetadata</definition>
        <argsstring></argsstring>
        <name>FrameMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="69" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="camera__common_8h_1ae7532f93397434d585bf3d6a2084aa71" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* process_thread_cb) (MultiCameraState *s, CameraState *c, int cnt)</definition>
        <argsstring>)(MultiCameraState *s, CameraState *c, int cnt)</argsstring>
        <name>process_thread_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="100" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="camera__common_8h_1a74b4888870d27898ba6601fe7731ee72" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int YUV_BUFFER_COUNT</definition>
        <argsstring></argsstring>
        <name>YUV_BUFFER_COUNT</name>
        <initializer>= 40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="29" column="11" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="camera__common_8h_1a51914e0a2fd3c7706c42e14c2588145a" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool env_disable_road</definition>
        <argsstring></argsstring>
        <name>env_disable_road</name>
        <initializer>= getenv(&quot;DISABLE_ROAD&quot;) != NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="38" column="12" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="camera__common_8h_1aa7e3e54c2c1403e9ccfd88f218826543" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool env_disable_wide_road</definition>
        <argsstring></argsstring>
        <name>env_disable_wide_road</name>
        <initializer>= getenv(&quot;DISABLE_WIDE_ROAD&quot;) != NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="39" column="12" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="camera__common_8h_1a7011bd99f69e8baf1bfefdbbafce28e8" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool env_disable_driver</definition>
        <argsstring></argsstring>
        <name>env_disable_driver</name>
        <initializer>= getenv(&quot;DISABLE_DRIVER&quot;) != NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="40" column="12" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="camera__common_8h_1ab5a6f7ed41023797b2dbe19e5be32b95" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool env_debug_frames</definition>
        <argsstring></argsstring>
        <name>env_debug_frames</name>
        <initializer>= getenv(&quot;DEBUG_FRAMES&quot;) != NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="41" column="12" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="camera__common_8h_1ad8a6a41a12f6c9778c7b36be2ed2ca24" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool env_log_raw_frames</definition>
        <argsstring></argsstring>
        <name>env_log_raw_frames</name>
        <initializer>= getenv(&quot;LOG_RAW_FRAMES&quot;) != NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="42" column="12" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="camera__common_8h_1ac7b5330192247e39e889f4ef7ae201ba" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool env_ctrl_exp_from_params</definition>
        <argsstring></argsstring>
        <name>env_ctrl_exp_from_params</name>
        <initializer>= getenv(&quot;CTRL_EXP_FROM_PARAMS&quot;) != NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="43" column="12" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="camera__common_8h_1a19fc92172127db16d99f3a0e0478a0fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_frame_data</definition>
        <argsstring>(cereal::FrameData::Builder &amp;framed, const FrameMetadata &amp;frame_data, CameraState *c)</argsstring>
        <name>fill_frame_data</name>
        <param>
          <type>cereal::FrameData::Builder &amp;</type>
          <declname>framed</declname>
        </param>
        <param>
          <type>const <ref refid="struct_frame_metadata" kindref="compound">FrameMetadata</ref> &amp;</type>
          <declname>frame_data</declname>
        </param>
        <param>
          <type><ref refid="class_camera_state" kindref="compound">CameraState</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="102" column="6" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="camera__common_8h_1a34650d2cd2e50e42f07c4ff17dde105b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>kj::Array&lt; uint8_t &gt;</type>
        <definition>kj::Array&lt;uint8_t&gt; get_raw_frame_image</definition>
        <argsstring>(const CameraBuf *b)</argsstring>
        <name>get_raw_frame_image</name>
        <param>
          <type>const <ref refid="class_camera_buf" kindref="compound">CameraBuf</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="103" column="11" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="103" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="camera__common_8h_1a8f2f1ae6ef9986c5f230245be9b78e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float set_exposure_target</definition>
        <argsstring>(const CameraBuf *b, int x_start, int x_end, int x_skip, int y_start, int y_end, int y_skip)</argsstring>
        <name>set_exposure_target</name>
        <param>
          <type>const <ref refid="class_camera_buf" kindref="compound">CameraBuf</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x_skip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_skip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="104" column="7" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="104" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="camera__common_8h_1af9bdce67699df0be5f7a8d353d37da72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::thread</type>
        <definition>std::thread start_process_thread</definition>
        <argsstring>(MultiCameraState *cameras, CameraState *cs, process_thread_cb callback)</argsstring>
        <name>start_process_thread</name>
        <param>
          <type><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref> *</type>
          <declname>cameras</declname>
        </param>
        <param>
          <type><ref refid="class_camera_state" kindref="compound">CameraState</ref> *</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>process_thread_cb</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="105" column="13" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="105" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="camera__common_8h_1a63324584bf8dd84138f5217301063fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cameras_init</definition>
        <argsstring>(VisionIpcServer *v, MultiCameraState *s, cl_device_id device_id, cl_context ctx)</argsstring>
        <name>cameras_init</name>
        <param>
          <type>VisionIpcServer *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>cl_device_id</type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>cl_context</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="107" column="6" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="camera__common_8h_1adb58cc3f2c86dc262e92440d08c78464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cameras_open</definition>
        <argsstring>(MultiCameraState *s)</argsstring>
        <name>cameras_open</name>
        <param>
          <type><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="108" column="6" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="108" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="camera__common_8h_1afc2fca39c220fd513f0c0f198c2a677c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cameras_run</definition>
        <argsstring>(MultiCameraState *s)</argsstring>
        <name>cameras_run</name>
        <param>
          <type><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="109" column="6" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="camera__common_8h_1ac61a62c09e243c1d7431bca49bafe94d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cameras_close</definition>
        <argsstring>(MultiCameraState *s)</argsstring>
        <name>cameras_close</name>
        <param>
          <type><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="110" column="6" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="110" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="camera__common_8h_1a4fd90960b0b6e3fa040e5b433f1c83ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void camerad_thread</definition>
        <argsstring>()</argsstring>
        <name>camerad_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="111" column="6" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="camera__common_8h_1ae9300d7f95c93d02a0df835880e3b349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int open_v4l_by_name_and_index</definition>
        <argsstring>(const char name[], int index=0, int flags=O_RDWR|O_NONBLOCK)</argsstring>
        <name>open_v4l_by_name_and_index</name>
        <param>
          <type>const char</type>
          <declname>name</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>O_RDWR|O_NONBLOCK</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h" line="113" column="5" declfile="/tmp/openpilot/system/camerad/cameras/camera_common.h" declline="113" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/messaging/messaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/visionipc/visionbuf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/visionipc/visionipc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/visionipc/visionipc_server.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/mat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/queue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/swaglog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/hardware/hw.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_IMX298<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_IMX179<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_S5K3P8SP<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_OV8865<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_IMX298_FLIPPED<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_OV10640<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_LGC920<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_LGC615<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_AR0231<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_OX03C10<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_ID_MAX<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>YUV_BUFFER_COUNT<sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>CameraType<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>RoadCam<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>DriverCam,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>WideRoadCam</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>env_disable_road<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;DISABLE_ROAD&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>env_disable_wide_road<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;DISABLE_WIDE_ROAD&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>env_disable_driver<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;DISABLE_DRIVER&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>env_debug_frames<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;DEBUG_FRAMES&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>env_log_raw_frames<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;LOG_RAW_FRAMES&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>env_ctrl_exp_from_params<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;CTRL_EXP_FROM_PARAMS&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="struct_camera_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_camera_info" kindref="compound">CameraInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>uint32_t<sp/>frame_width,<sp/>frame_height;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>uint32_t<sp/>frame_stride;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>uint32_t<sp/>frame_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>uint32_t<sp/>extra_height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>registers_offset<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stats_offset<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/><ref refid="struct_camera_info" kindref="compound">CameraInfo</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="struct_frame_metadata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_frame_metadata" kindref="compound">FrameMetadata</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>uint32_t<sp/>frame_id;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Timestamps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>uint64_t<sp/>timestamp_sof;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>set<sp/>on<sp/>tici</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>uint64_t<sp/>timestamp_eof;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Exposure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integ_lines;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>high_conversion_gain;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gain;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>measured_grey_fraction;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target_grey_fraction;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>processing_time;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}<sp/><ref refid="struct_frame_metadata" kindref="compound">FrameMetadata</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_camera_state" kindref="compound">CameraState</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Debayer;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_camera_buf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_camera_buf" kindref="compound">CameraBuf</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>VisionIpcServer<sp/>*vipc_server;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>Debayer<sp/>*debayer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>VisionStreamType<sp/>yuv_type;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur_buf_idx;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>SafeQueue&lt;int&gt;<sp/>safe_queue;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_buf_count;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>cl_command_queue<sp/>q;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="struct_frame_metadata" kindref="compound">FrameMetadata</ref><sp/>cur_frame_data;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>VisionBuf<sp/>*cur_yuv_buf;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>VisionBuf<sp/>*cur_camera_buf;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;VisionBuf[]&gt;<sp/>camera_bufs;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;FrameMetadata[]&gt;<sp/>camera_bufs_metadata;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rgb_width,<sp/>rgb_height,<sp/>rgb_stride;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="class_camera_buf" kindref="compound">CameraBuf</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>~<ref refid="class_camera_buf" kindref="compound">CameraBuf</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(cl_device_id<sp/>device_id,<sp/>cl_context<sp/>context,<sp/><ref refid="class_camera_state" kindref="compound">CameraState</ref><sp/>*s,<sp/>VisionIpcServer<sp/>*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_cnt,<sp/>VisionStreamType<sp/>yuv_type);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>acquire();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>queue(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_idx);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*process_thread_cb)(<ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*s,<sp/><ref refid="class_camera_state" kindref="compound">CameraState</ref><sp/>*c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fill_frame_data(cereal::FrameData::Builder<sp/>&amp;framed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_frame_metadata" kindref="compound">FrameMetadata</ref><sp/>&amp;frame_data,<sp/><ref refid="class_camera_state" kindref="compound">CameraState</ref><sp/>*c);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">kj::Array&lt;uint8_t&gt;<sp/>get_raw_frame_image(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_camera_buf" kindref="compound">CameraBuf</ref><sp/>*b);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>set_exposure_target(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_camera_buf" kindref="compound">CameraBuf</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_skip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_skip);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">std::thread<sp/>start_process_thread(<ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*cameras,<sp/><ref refid="class_camera_state" kindref="compound">CameraState</ref><sp/>*cs,<sp/>process_thread_cb<sp/>callback);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameras_init(VisionIpcServer<sp/>*v,<sp/><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*s,<sp/>cl_device_id<sp/>device_id,<sp/>cl_context<sp/>ctx);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameras_open(<ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*s);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameras_run(<ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*s);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameras_close(<ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*s);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>camerad_thread();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>open_v4l_by_name_and_index(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>=<sp/>O_RDWR<sp/>|<sp/>O_NONBLOCK);</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/system/camerad/cameras/camera_common.h"/>
  </compounddef>
</doxygen>
