<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="camera__qcom2_8h" kind="file" language="C++">
    <compoundname>camera_qcom2.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">map</includes>
    <includes local="no">utility</includes>
    <includes local="no">media/cam_req_mgr.h</includes>
    <includes refid="camera__common_8h" local="yes">system/camerad/cameras/camera_common.h</includes>
    <includes refid="camera__util_8h" local="yes">system/camerad/cameras/camera_util.h</includes>
    <includes local="yes">common/params.h</includes>
    <includes local="yes">common/util.h</includes>
    <incdepgraph>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="22">
        <label>queue</label>
      </node>
      <node id="15">
        <label>common/queue.h</label>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="23">
        <label>common/params.h</label>
      </node>
      <node id="13">
        <label>cereal/visionipc/visionipc_server.h</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/system/camerad/cameras/camera_qcom2.h</label>
        <link refid="camera__qcom2_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>system/camerad/cameras/camera_util.h</label>
        <link refid="camera__util_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="24">
        <label>common/util.h</label>
      </node>
      <node id="16">
        <label>common/swaglog.h</label>
      </node>
      <node id="6">
        <label>system/camerad/cameras/camera_common.h</label>
        <link refid="camera__common_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cereal/messaging/messaging.h</label>
      </node>
      <node id="21">
        <label>optional</label>
      </node>
      <node id="11">
        <label>cereal/visionipc/visionbuf.h</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="5">
        <label>media/cam_req_mgr.h</label>
      </node>
      <node id="12">
        <label>cereal/visionipc/visionipc.h</label>
      </node>
      <node id="14">
        <label>common/mat.h</label>
      </node>
      <node id="20">
        <label>mutex</label>
      </node>
      <node id="9">
        <label>thread</label>
      </node>
      <node id="17">
        <label>system/hardware/hw.h</label>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_camera_state" prot="public">CameraState</innerclass>
    <innerclass refid="struct_multi_camera_state" prot="public">MultiCameraState</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="camera__qcom2_8h_1a321e98aba6b2ef1099471ed2f6cb1990" prot="public" static="no">
        <name>FRAME_BUF_COUNT</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_qcom2.h" line="14" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_qcom2.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="camera__qcom2_8h_1a2cb06f258d1f66ea31bafeac45f7092c" prot="public" static="no">
        <name>ANALOG_GAIN_MAX_CNT</name>
        <initializer>55</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_qcom2.h" line="15" column="9" bodyfile="/tmp/openpilot/system/camerad/cameras/camera_qcom2.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="camera__qcom2_8h_1af7782f752d6f195f6baf70366cd4474d" prot="public" static="no">
        <type>struct <ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref></type>
        <definition>typedef struct MultiCameraState MultiCameraState</definition>
        <argsstring></argsstring>
        <name>MultiCameraState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/camerad/cameras/camera_qcom2.h" line="124" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;media/cam_req_mgr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/camerad/cameras/camera_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/camerad/cameras/camera_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/params.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAME_BUF_COUNT<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ANALOG_GAIN_MAX_CNT<sp/>55</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_camera_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_camera_state" kindref="compound">CameraState</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*multi_cam_state;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="struct_camera_info" kindref="compound">CameraInfo</ref><sp/>ci;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>std::mutex<sp/>exp_lock;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exposure_time;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dc_gain_enabled;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dc_gain_weight;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gain_idx;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>analog_gain_frac;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exposure_time_min;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exposure_time_max;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dc_gain_factor;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dc_gain_min_weight;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dc_gain_max_weight;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dc_gain_on_grey;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dc_gain_off_grey;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sensor_analog_gains[ANALOG_GAIN_MAX_CNT];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>analog_gain_min_idx;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>analog_gain_max_idx;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>analog_gain_rec_idx;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>analog_gain_cost_delta;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>analog_gain_cost_low;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>analog_gain_cost_high;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cur_ev[3];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_ev,<sp/>max_ev;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>best_ev_score;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_exp_g;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_exp_t;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>measured_grey_fraction;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target_grey_fraction;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target_grey_factor;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>unique_fd<sp/>sensor_fd;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>unique_fd<sp/>csiphy_fd;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>camera_num;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_camera_event(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*evdat);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_exposure_score(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>desired_ev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exp_t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exp_g_idx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>exp_gain);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_camera_exposure(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>grey_frac);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sensors_start();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>camera_open(<ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*multi_cam_state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>camera_num,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>camera_set_parameters();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>camera_map_bufs(<ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*s);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>camera_init(<ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>*s,<sp/>VisionIpcServer<sp/>*v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>camera_id,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fps,<sp/>cl_device_id<sp/>device_id,<sp/>cl_context<sp/>ctx,<sp/>VisionStreamType<sp/>yuv_type);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>camera_close();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>std::map&lt;uint16_t,<sp/>uint16_t&gt;<sp/>ar0231_parse_registers(uint8_t<sp/>*data,<sp/>std::initializer_list&lt;uint16_t&gt;<sp/>addrs);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>int32_t<sp/>session_handle;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>int32_t<sp/>sensor_dev_handle;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>int32_t<sp/>isp_dev_handle;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>int32_t<sp/>csiphy_dev_handle;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>int32_t<sp/>link_handle;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf0_handle;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_handle[FRAME_BUF_COUNT];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sync_objs[FRAME_BUF_COUNT];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_ids[FRAME_BUF_COUNT];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_id_last;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_id_last;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx_offset;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skipped;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>camera_id;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="class_camera_buf" kindref="compound">CameraBuf</ref><sp/>buf;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="class_memory_manager" kindref="compound">MemoryManager</ref><sp/>mm;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>config_isp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>io_mem_handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fence,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf0_mem_handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf0_offset);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enqueue_req_multi(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dp);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enqueue_buffer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dp);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clear_req_queue();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sensors_init();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sensors_poke(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request_id);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sensors_i2c(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>i2c_random_wr_payload*<sp/>dat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op_code,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>data_word);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>parsing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>std::map&lt;uint16_t,<sp/>std::pair&lt;int,<sp/>int&gt;&gt;<sp/>ar0231_register_lut;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>std::map&lt;uint16_t,<sp/>std::pair&lt;int,<sp/>int&gt;&gt;<sp/>ar0231_build_register_lut(uint8_t<sp/>*data);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="struct_multi_camera_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>unique_fd<sp/>video0_fd;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>unique_fd<sp/>cam_sync_fd;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>unique_fd<sp/>isp_fd;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_iommu;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cdm_iommu;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="class_camera_state" kindref="compound">CameraState</ref><sp/>road_cam;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="class_camera_state" kindref="compound">CameraState</ref><sp/>wide_road_cam;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="class_camera_state" kindref="compound">CameraState</ref><sp/>driver_cam;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>PubMaster<sp/>*pm;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><ref refid="struct_multi_camera_state" kindref="compound">MultiCameraState</ref>;</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/system/camerad/cameras/camera_qcom2.h"/>
  </compounddef>
</doxygen>
