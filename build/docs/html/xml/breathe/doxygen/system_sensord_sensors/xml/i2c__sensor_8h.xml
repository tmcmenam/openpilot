<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="i2c__sensor_8h" kind="file" language="C++">
    <compoundname>i2c_sensor.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">vector</includes>
    <includes local="yes">cereal/gen/cpp/log.capnp.h</includes>
    <includes local="yes">common/i2c.h</includes>
    <includes local="yes">common/gpio.h</includes>
    <includes local="yes">common/swaglog.h</includes>
    <includes local="yes">system/sensord/sensors/constants.h</includes>
    <includes local="yes">system/sensord/sensors/sensor.h</includes>
    <includedby refid="bmx055__temp_8h" local="yes">/tmp/openpilot/system/sensord/sensors/bmx055_temp.h</includedby>
    <includedby refid="mmc5603nj__magn_8h" local="yes">/tmp/openpilot/system/sensord/sensors/mmc5603nj_magn.h</includedby>
    <includedby refid="bmx055__accel_8h" local="yes">/tmp/openpilot/system/sensord/sensors/bmx055_accel.h</includedby>
    <includedby refid="bmx055__magn_8h" local="yes">/tmp/openpilot/system/sensord/sensors/bmx055_magn.h</includedby>
    <includedby refid="bmx055__gyro_8h" local="yes">/tmp/openpilot/system/sensord/sensors/bmx055_gyro.h</includedby>
    <includedby refid="lsm6ds3__gyro_8h" local="yes">/tmp/openpilot/system/sensord/sensors/lsm6ds3_gyro.h</includedby>
    <includedby refid="lsm6ds3__temp_8h" local="yes">/tmp/openpilot/system/sensord/sensors/lsm6ds3_temp.h</includedby>
    <includedby refid="lsm6ds3__accel_8h" local="yes">/tmp/openpilot/system/sensord/sensors/lsm6ds3_accel.h</includedby>
    <incdepgraph>
      <node id="7">
        <label>common/gpio.h</label>
      </node>
      <node id="6">
        <label>common/i2c.h</label>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/system/sensord/sensors/i2c_sensor.h</label>
        <link refid="i2c__sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>common/swaglog.h</label>
      </node>
      <node id="10">
        <label>system/sensord/sensors/sensor.h</label>
      </node>
      <node id="3">
        <label>unistd.h</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="9">
        <label>system/sensord/sensors/constants.h</label>
      </node>
      <node id="5">
        <label>cereal/gen/cpp/log.capnp.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/tmp/openpilot/system/sensord/sensors/bmx055_temp.h</label>
        <link refid="bmx055__temp_8h_source"/>
      </node>
      <node id="7">
        <label>/tmp/openpilot/system/sensord/sensors/lsm6ds3_gyro.h</label>
        <link refid="lsm6ds3__gyro_8h_source"/>
      </node>
      <node id="1">
        <label>/tmp/openpilot/system/sensord/sensors/i2c_sensor.h</label>
        <link refid="i2c__sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/tmp/openpilot/system/sensord/sensors/lsm6ds3_accel.h</label>
        <link refid="lsm6ds3__accel_8h_source"/>
      </node>
      <node id="8">
        <label>/tmp/openpilot/system/sensord/sensors/lsm6ds3_temp.h</label>
        <link refid="lsm6ds3__temp_8h_source"/>
      </node>
      <node id="5">
        <label>/tmp/openpilot/system/sensord/sensors/bmx055_magn.h</label>
        <link refid="bmx055__magn_8h_source"/>
      </node>
      <node id="3">
        <label>/tmp/openpilot/system/sensord/sensors/mmc5603nj_magn.h</label>
        <link refid="mmc5603nj__magn_8h_source"/>
      </node>
      <node id="6">
        <label>/tmp/openpilot/system/sensord/sensors/bmx055_gyro.h</label>
        <link refid="bmx055__gyro_8h_source"/>
      </node>
      <node id="4">
        <label>/tmp/openpilot/system/sensord/sensors/bmx055_accel.h</label>
        <link refid="bmx055__accel_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_i2_c_sensor" prot="public">I2CSensor</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="i2c__sensor_8h_1a98a3bb62045a9a9205fb6e0bd50b2674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t read_12_bit</definition>
        <argsstring>(uint8_t lsb, uint8_t msb)</argsstring>
        <name>read_12_bit</name>
        <param>
          <type>uint8_t</type>
          <declname>lsb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>msb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/sensord/sensors/i2c_sensor.h" line="15" column="9" declfile="/tmp/openpilot/system/sensord/sensors/i2c_sensor.h" declline="15" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="i2c__sensor_8h_1ac0634299c942dc7c538638b28926497c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t read_16_bit</definition>
        <argsstring>(uint8_t lsb, uint8_t msb)</argsstring>
        <name>read_16_bit</name>
        <param>
          <type>uint8_t</type>
          <declname>lsb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>msb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/sensord/sensors/i2c_sensor.h" line="16" column="9" declfile="/tmp/openpilot/system/sensord/sensors/i2c_sensor.h" declline="16" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="i2c__sensor_8h_1a533b476cf281241413e8babcba221532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t read_20_bit</definition>
        <argsstring>(uint8_t b2, uint8_t b1, uint8_t b0)</argsstring>
        <name>read_20_bit</name>
        <param>
          <type>uint8_t</type>
          <declname>b2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>b0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/sensord/sensors/i2c_sensor.h" line="17" column="9" declfile="/tmp/openpilot/system/sensord/sensors/i2c_sensor.h" declline="17" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/gen/cpp/log.capnp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/i2c.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/gpio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/swaglog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/sensord/sensors/constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/sensord/sensors/sensor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">int16_t<sp/>read_12_bit(uint8_t<sp/>lsb,<sp/>uint8_t<sp/>msb);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">int16_t<sp/>read_16_bit(uint8_t<sp/>lsb,<sp/>uint8_t<sp/>msb);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">int32_t<sp/>read_20_bit(uint8_t<sp/>b2,<sp/>uint8_t<sp/>b1,<sp/>uint8_t<sp/>b0);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_i2_c_sensor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_i2_c_sensor" kindref="compound">I2CSensor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Sensor<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>I2CBus<sp/>*bus;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpio_nr;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shared_gpio;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint8_t<sp/>get_device_address()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="class_i2_c_sensor" kindref="compound">I2CSensor</ref>(I2CBus<sp/>*bus,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpio_nr<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shared_gpio<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>~<ref refid="class_i2_c_sensor" kindref="compound">I2CSensor</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_register(uint<sp/>register_address,<sp/>uint8_t<sp/>*buffer,<sp/>uint8_t<sp/>len);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_register(uint<sp/>register_address,<sp/>uint8_t<sp/>data);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init_gpio();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_interrupt_enabled();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>get_event(MessageBuilder<sp/>&amp;msg,<sp/>uint64_t<sp/>ts<sp/>=<sp/>0)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shutdown()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verify_chip_id(uint8_t<sp/>address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;expected_ids)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>chip_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>read_register(address,<sp/>&amp;chip_id,<sp/>1);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOGE(</highlight><highlight class="stringliteral">&quot;Reading<sp/>chip<sp/>ID<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>ret);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>expected_ids.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chip_id<sp/>==<sp/>expected_ids[i])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chip_id;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>LOGE(</highlight><highlight class="stringliteral">&quot;Chip<sp/>ID<sp/>wrong.<sp/>Got:<sp/>%d,<sp/>Expected<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>chip_id,<sp/>expected_ids[0]);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/system/sensord/sensors/i2c_sensor.h"/>
  </compounddef>
</doxygen>
