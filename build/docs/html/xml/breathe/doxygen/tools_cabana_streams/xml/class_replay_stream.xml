<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_replay_stream" kind="class" language="C++" prot="public">
    <compoundname>ReplayStream</compoundname>
    <basecompoundref refid="class_abstract_stream" prot="public" virt="non-virtual">AbstractStream</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_replay_stream_1ab051ca16170e7700c6f85e52dc590ad0" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Replay &gt;</type>
        <definition>std::unique_ptr&lt;Replay&gt; ReplayStream::replay</definition>
        <argsstring></argsstring>
        <name>replay</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="37" column="19" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_stream_1a007fe584f1a20b64ea17ddd7a2d35a86" prot="private" static="no" mutable="no">
        <type>std::set&lt; int &gt;</type>
        <definition>std::set&lt;int&gt; ReplayStream::processed_segments</definition>
        <argsstring></argsstring>
        <name>processed_segments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="38" column="12" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_stream_1a4d2510677de353b58372565cdb8deb6d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; OpenpilotPrefix &gt;</type>
        <definition>std::unique_ptr&lt;OpenpilotPrefix&gt; ReplayStream::op_prefix</definition>
        <argsstring></argsstring>
        <name>op_prefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="39" column="19" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_replay_stream_1af1ae450076226f6f2393d4145dd3d963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ReplayStream::ReplayStream</definition>
        <argsstring>(QObject *parent)</argsstring>
        <name>ReplayStream</name>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="16" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1ac0cdad1a50c3d297e4ac1e1cc908e49b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ReplayStream::start</definition>
        <argsstring>() override</argsstring>
        <name>start</name>
        <reimplements refid="class_abstract_stream_1a3a44162ada17f69d44af2122ff5be4f9">start</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="17" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1ab1c2b147dd7a30fab50da38870592c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReplayStream::loadRoute</definition>
        <argsstring>(const QString &amp;route, const QString &amp;data_dir, uint32_t replay_flags=REPLAY_FLAG_NONE)</argsstring>
        <name>loadRoute</name>
        <param>
          <type>const QString &amp;</type>
          <declname>route</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>data_dir</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>replay_flags</declname>
          <defval>REPLAY_FLAG_NONE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="18" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a5877e9068cf9a80ab97ee792e2692be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReplayStream::eventFilter</definition>
        <argsstring>(const Event *event)</argsstring>
        <name>eventFilter</name>
        <param>
          <type>const Event *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="19" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a0914cdd0b50f675f67df74c1d5b08e5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ReplayStream::seekTo</definition>
        <argsstring>(double ts) override</argsstring>
        <name>seekTo</name>
        <reimplements refid="class_abstract_stream_1afc8c5bfc0ccf1b50b8c1e7a7cb0f69ad">seekTo</reimplements>
        <param>
          <type>double</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="20" column="8" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a9b95a6b780f2b37d3619fee853447c6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>QString ReplayStream::routeName</definition>
        <argsstring>() const override</argsstring>
        <name>routeName</name>
        <reimplements refid="class_abstract_stream_1a6548cd03f719cdff918cac98cd18fc25">routeName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="21" column="18" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a1eca8cc7a9cc25fca3621aa58d1941d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>QString</type>
        <definition>QString ReplayStream::carFingerprint</definition>
        <argsstring>() const override</argsstring>
        <name>carFingerprint</name>
        <reimplements refid="class_abstract_stream_1a8f2d0b4d51ebf21f25cfb5e2b2847bad">carFingerprint</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="22" column="18" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a7da69c425f6cdcc460143f04e0beffb0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double ReplayStream::totalSeconds</definition>
        <argsstring>() const override</argsstring>
        <name>totalSeconds</name>
        <reimplements refid="class_abstract_stream_1ac734775a79fe703fbe157f9987787ae4">totalSeconds</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="23" column="10" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1aefa607de6bcffb59997d26e62e690f72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>VisionStreamType</type>
        <definition>VisionStreamType ReplayStream::visionStreamType</definition>
        <argsstring>() const override</argsstring>
        <name>visionStreamType</name>
        <reimplements refid="class_abstract_stream_1afa8277a7b2a1962a238e4dd79314aac2">visionStreamType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="24" column="27" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a0209a60369f338e258c785531b0cfb3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double ReplayStream::routeStartTime</definition>
        <argsstring>() const override</argsstring>
        <name>routeStartTime</name>
        <reimplements refid="class_abstract_stream_1ae18f4caded575e7b91acd9fefe3fb6c4">routeStartTime</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="25" column="17" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1afab23290db855bf39a430d249738d957" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double ReplayStream::currentSec</definition>
        <argsstring>() const override</argsstring>
        <name>currentSec</name>
        <reimplements refid="class_abstract_stream_1a0b0764d9ccd54c0af31a39a1b1c43230">currentSec</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="26" column="17" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a24c3140fa8c0845f6d1d02d48e8ec67d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const Route *</type>
        <definition>const Route* ReplayStream::route</definition>
        <argsstring>() const override</argsstring>
        <name>route</name>
        <reimplements refid="class_abstract_stream_1a95ce920d17dedeef8e58868fb6160ea8">route</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="27" column="22" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a7a9970cfaab1bd130a979f260b8bc06f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ReplayStream::setSpeed</definition>
        <argsstring>(float speed) override</argsstring>
        <name>setSpeed</name>
        <reimplements refid="class_abstract_stream_1ac3905b779f55bfb37172b3b69aedada6">setSpeed</reimplements>
        <param>
          <type>float</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="28" column="15" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1ae59877fa34b2d49cd003eaa8b6b958e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ReplayStream::getSpeed</definition>
        <argsstring>() const</argsstring>
        <name>getSpeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="29" column="16" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a411ebee5dff2cf70fd70d721bece9334" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ReplayStream::isPaused</definition>
        <argsstring>() const override</argsstring>
        <name>isPaused</name>
        <reimplements refid="class_abstract_stream_1a6867b48dff0ddf3d94c3c3a3c6843d9c">isPaused</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="30" column="15" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a9f82bc65af17c4e00e7014723e2d8b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ReplayStream::pause</definition>
        <argsstring>(bool pause) override</argsstring>
        <name>pause</name>
        <reimplements refid="class_abstract_stream_1a6842e80df2842fc72f2a85f65b25c155">pause</reimplements>
        <param>
          <type>bool</type>
          <declname>pause</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="31" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_stream_1a5ae61430db67af46e150116514b74efb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const std::vector&lt; std::tuple&lt; double, double, TimelineType &gt; &gt;</type>
        <definition>const std::vector&lt;std::tuple&lt;double, double, TimelineType&gt; &gt; ReplayStream::getTimeline</definition>
        <argsstring>() override</argsstring>
        <name>getTimeline</name>
        <reimplements refid="class_abstract_stream_1ac06fdb5feee55e004719341a94962ac0">getTimeline</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="32" column="28" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="32" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_replay_stream_1ad814fa93f782ad8ef141f28f7c40d906" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_abstract_open_stream_widget" kindref="compound">AbstractOpenStreamWidget</ref> *</type>
        <definition>static AbstractOpenStreamWidget* ReplayStream::widget</definition>
        <argsstring>(AbstractStream **stream)</argsstring>
        <name>widget</name>
        <param>
          <type><ref refid="class_abstract_stream" kindref="compound">AbstractStream</ref> **</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="33" column="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_replay_stream_1a7ff41a19d99db109e21408fefb500c95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayStream::mergeSegments</definition>
        <argsstring>()</argsstring>
        <name>mergeSegments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="36" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="2">
        <label>AbstractStream</label>
        <link refid="class_abstract_stream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ReplayStream</label>
        <link refid="class_replay_stream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="2">
        <label>AbstractStream</label>
        <link refid="class_abstract_stream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ReplayStream</label>
        <link refid="class_replay_stream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/tmp/openpilot/tools/cabana/streams/replaystream.h" line="12" column="41" bodyfile="/tmp/openpilot/tools/cabana/streams/replaystream.h" bodystart="12" bodyend="40"/>
    <listofallmembers>
      <member refid="class_abstract_stream_1ac6362a12180cfa744dc9d460e089b82a" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>AbstractStream</name></member>
      <member refid="class_abstract_stream_1abd3571b8e3ad5964589c825fad9791ee" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>all_events_</name></member>
      <member refid="class_abstract_stream_1ac6c12694dd21eabadee6df9bc26875eb" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>all_msgs</name></member>
      <member refid="class_abstract_stream_1a85544b53c6b91dbc5e6ebd5c9fa707b2" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>allEvents</name></member>
      <member refid="class_replay_stream_1a1eca8cc7a9cc25fca3621aa58d1941d2" prot="public" virt="virtual"><scope>ReplayStream</scope><name>carFingerprint</name></member>
      <member refid="class_replay_stream_1afab23290db855bf39a430d249738d957" prot="public" virt="virtual"><scope>ReplayStream</scope><name>currentSec</name></member>
      <member refid="class_abstract_stream_1aab9f7b5dc2afaecd5dd985432208cff0" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>event_buffer</name></member>
      <member refid="class_replay_stream_1a5877e9068cf9a80ab97ee792e2692be5" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>eventFilter</name></member>
      <member refid="class_abstract_stream_1ac51dbdc2cd17f7ff4c747d4d9f79d3c3" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>events</name></member>
      <member refid="class_abstract_stream_1a5cf16b11685cda0e0eecc2c3a07160bf" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>events_</name></member>
      <member refid="class_abstract_stream_1a87051861fdc411f3f99eda833a8c0072" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>eventsMerged</name></member>
      <member refid="class_replay_stream_1ae59877fa34b2d49cd003eaa8b6b958e8" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>getSpeed</name></member>
      <member refid="class_abstract_stream_1a022ebc351d047bfdacb06ad34e3025de" prot="public" virt="virtual" ambiguityscope="AbstractStream::"><scope>ReplayStream</scope><name>getSpeed</name></member>
      <member refid="class_replay_stream_1a5ae61430db67af46e150116514b74efb" prot="public" virt="virtual"><scope>ReplayStream</scope><name>getTimeline</name></member>
      <member refid="class_replay_stream_1a411ebee5dff2cf70fd70d721bece9334" prot="public" virt="virtual"><scope>ReplayStream</scope><name>isPaused</name></member>
      <member refid="class_abstract_stream_1a3efc414c75088e039b803e81b1080be2" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>last_msgs</name></member>
      <member refid="class_abstract_stream_1a2174368127347f2a12f3f8e744ec620e" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>lastest_event_ts</name></member>
      <member refid="class_abstract_stream_1aa71b6ad25e2128d1c535ea04ab0c2a20" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>lastEventMonoTime</name></member>
      <member refid="class_abstract_stream_1a7163a6b54351dc7f5326bd399caea806" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>lastMessage</name></member>
      <member refid="class_abstract_stream_1aaf255e61ea7ab62d4e05cd35f3403cb1" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>liveStreaming</name></member>
      <member refid="class_replay_stream_1ab1c2b147dd7a30fab50da38870592c3b" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>loadRoute</name></member>
      <member refid="class_abstract_stream_1ae74fa7c6ba3dbe47a4dab25b34ec7df9" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>masks</name></member>
      <member refid="class_abstract_stream_1a6b66a5c137bb6cdfa3e7e0d13e2c7716" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>mergeEvents</name></member>
      <member refid="class_replay_stream_1a7ff41a19d99db109e21408fefb500c95" prot="private" virt="non-virtual"><scope>ReplayStream</scope><name>mergeSegments</name></member>
      <member refid="class_abstract_stream_1a10ff3d71849d03051c441bed433417b8" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>msgsReceived</name></member>
      <member refid="class_abstract_stream_1a408d04953260260d35a423569baf7448" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>mutex</name></member>
      <member refid="class_abstract_stream_1a6a7831deea8bb79a7f048861a0f0a198" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>new_msgs</name></member>
      <member refid="class_replay_stream_1a4d2510677de353b58372565cdb8deb6d" prot="private" virt="non-virtual"><scope>ReplayStream</scope><name>op_prefix</name></member>
      <member refid="class_replay_stream_1a9f82bc65af17c4e00e7014723e2d8b10" prot="public" virt="virtual"><scope>ReplayStream</scope><name>pause</name></member>
      <member refid="class_abstract_stream_1a0a65e0e9bd73c42020c20166aac31112" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>paused</name></member>
      <member refid="class_abstract_stream_1a0988b4e1cddda3e723dce1905c12c095" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>postEvents</name></member>
      <member refid="class_replay_stream_1a007fe584f1a20b64ea17ddd7a2d35a86" prot="private" virt="non-virtual"><scope>ReplayStream</scope><name>processed_segments</name></member>
      <member refid="class_abstract_stream_1a9171c64846e71ccded7544f333687cab" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>processing</name></member>
      <member refid="class_replay_stream_1ab051ca16170e7700c6f85e52dc590ad0" prot="private" virt="non-virtual"><scope>ReplayStream</scope><name>replay</name></member>
      <member refid="class_replay_stream_1af1ae450076226f6f2393d4145dd3d963" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>ReplayStream</name></member>
      <member refid="class_abstract_stream_1a816bc4879b071c6c5b6a7cd68d98732c" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>resume</name></member>
      <member refid="class_replay_stream_1a24c3140fa8c0845f6d1d02d48e8ec67d" prot="public" virt="virtual"><scope>ReplayStream</scope><name>route</name></member>
      <member refid="class_replay_stream_1a9b95a6b780f2b37d3619fee853447c6c" prot="public" virt="virtual"><scope>ReplayStream</scope><name>routeName</name></member>
      <member refid="class_replay_stream_1a0209a60369f338e258c785531b0cfb3b" prot="public" virt="virtual"><scope>ReplayStream</scope><name>routeStartTime</name></member>
      <member refid="class_abstract_stream_1af2e93c10db5e8329f3287ac3eba79582" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>seekedTo</name></member>
      <member refid="class_replay_stream_1a0914cdd0b50f675f67df74c1d5b08e5c" prot="public" virt="virtual"><scope>ReplayStream</scope><name>seekTo</name></member>
      <member refid="class_replay_stream_1a7a9970cfaab1bd130a979f260b8bc06f" prot="public" virt="virtual"><scope>ReplayStream</scope><name>setSpeed</name></member>
      <member refid="class_abstract_stream_1a0908e573ea79c1f9ece021c76c496586" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>sources</name></member>
      <member refid="class_abstract_stream_1aab4505acc61c563b0245e8b7b1157a63" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>sourcesUpdated</name></member>
      <member refid="class_replay_stream_1ac0cdad1a50c3d297e4ac1e1cc908e49b" prot="public" virt="virtual"><scope>ReplayStream</scope><name>start</name></member>
      <member refid="class_abstract_stream_1a398dd3db93da45a6b1db1c4538c5fc8b" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>streamStarted</name></member>
      <member refid="class_replay_stream_1a7da69c425f6cdcc460143f04e0beffb0" prot="public" virt="virtual"><scope>ReplayStream</scope><name>totalSeconds</name></member>
      <member refid="class_abstract_stream_1ac69519541904bb80d031da607384598e" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>updated</name></member>
      <member refid="class_abstract_stream_1a5d3ff960083e12abb08f66983e5c686d" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>updateEvent</name></member>
      <member refid="class_abstract_stream_1a479b4e070c205cb9d704e76178cb5212" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>updateLastMsgsTo</name></member>
      <member refid="class_abstract_stream_1a8b3711553e5214ab370fbced0af04aea" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>updateMasks</name></member>
      <member refid="class_abstract_stream_1a8689a2e973562161d8ae0d1754ed13d5" prot="protected" virt="non-virtual"><scope>ReplayStream</scope><name>updateMessages</name></member>
      <member refid="class_replay_stream_1aefa607de6bcffb59997d26e62e690f72" prot="public" virt="virtual"><scope>ReplayStream</scope><name>visionStreamType</name></member>
      <member refid="class_replay_stream_1ad814fa93f782ad8ef141f28f7c40d906" prot="public" virt="non-virtual"><scope>ReplayStream</scope><name>widget</name></member>
      <member refid="class_abstract_stream_1a5ce050aae85ca6a085cd30acc0e629a9" prot="public" virt="virtual"><scope>ReplayStream</scope><name>~AbstractStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
