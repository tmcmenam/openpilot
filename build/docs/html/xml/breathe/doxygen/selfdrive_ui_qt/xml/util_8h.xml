<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="util_8h" kind="file" language="C++">
    <compoundname>util.h</compoundname>
    <includes local="no">optional</includes>
    <includes local="no">vector</includes>
    <includes local="no">QDateTime</includes>
    <includes local="no">QFileSystemWatcher</includes>
    <includes local="no">QPainter</includes>
    <includes local="no">QPixmap</includes>
    <includes local="no">QSurfaceFormat</includes>
    <includes local="no">QWidget</includes>
    <includes local="yes">cereal/gen/cpp/car.capnp.h</includes>
    <includes local="yes">common/params.h</includes>
    <incdepgraph>
      <node id="10">
        <label>cereal/gen/cpp/car.capnp.h</label>
      </node>
      <node id="4">
        <label>QDateTime</label>
      </node>
      <node id="11">
        <label>common/params.h</label>
      </node>
      <node id="6">
        <label>QPainter</label>
      </node>
      <node id="2">
        <label>optional</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="9">
        <label>QWidget</label>
      </node>
      <node id="7">
        <label>QPixmap</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/selfdrive/ui/qt/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>QSurfaceFormat</label>
      </node>
      <node id="5">
        <label>QFileSystemWatcher</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_inter_font" prot="public">InterFont</innerclass>
    <innerclass refid="class_param_watcher" prot="public">ParamWatcher</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="util_8h_1a3ee6c4b55938ffcdbfeecd5709f218c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString getVersion</definition>
        <argsstring>()</argsstring>
        <name>getVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="16" column="9" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="16" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aeb90951202e72e3018f6bdf45f0100d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString getBrand</definition>
        <argsstring>()</argsstring>
        <name>getBrand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="17" column="9" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="17" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a3afd36277b4fbb4044b81bbf0bea773b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString getUserAgent</definition>
        <argsstring>()</argsstring>
        <name>getUserAgent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="18" column="9" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="18" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1af3df43948604434d52604fc83eb74bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; QString &gt;</type>
        <definition>std::optional&lt;QString&gt; getDongleId</definition>
        <argsstring>()</argsstring>
        <name>getDongleId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="19" column="15" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="19" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aa2b735e1f9a8525d563f3109d11b043d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QMap&lt; QString, QString &gt;</type>
        <definition>QMap&lt;QString, QString&gt; getSupportedLanguages</definition>
        <argsstring>()</argsstring>
        <name>getSupportedLanguages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="20" column="6" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a48a81fdd30b539d069a7bc574417d22d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setQtSurfaceFormat</definition>
        <argsstring>()</argsstring>
        <name>setQtSurfaceFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="21" column="6" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="21" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a09fe05808749987e10c29372c8669f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sigTermHandler</definition>
        <argsstring>(int s)</argsstring>
        <name>sigTermHandler</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="22" column="6" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1afe20e8863cd7286ef346571b22d27cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString timeAgo</definition>
        <argsstring>(const QDateTime &amp;date)</argsstring>
        <name>timeAgo</name>
        <param>
          <type>const QDateTime &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="23" column="9" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="23" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a0f48049ad104ef5f8a95a906a4109e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swagLogMessageHandler</definition>
        <argsstring>(QtMsgType type, const QMessageLogContext &amp;context, const QString &amp;msg)</argsstring>
        <name>swagLogMessageHandler</name>
        <param>
          <type>QtMsgType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const QMessageLogContext &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="24" column="6" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a496e7dba67b60f7996bc50c71c6eb561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initApp</definition>
        <argsstring>(int argc, char *argv[], bool disable_hidpi=true)</argsstring>
        <name>initApp</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>disable_hidpi</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="25" column="6" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aae71b719d60422c247eecb86ee6aa651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QWidget *</type>
        <definition>QWidget* topWidget</definition>
        <argsstring>(QWidget *widget)</argsstring>
        <name>topWidget</name>
        <param>
          <type>QWidget *</type>
          <declname>widget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="26" column="9" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="26" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1aae1a083eeb370525a1ac662405d50dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QPixmap</type>
        <definition>QPixmap loadPixmap</definition>
        <argsstring>(const QString &amp;fileName, const QSize &amp;size={}, Qt::AspectRatioMode aspectRatioMode=Qt::KeepAspectRatio)</argsstring>
        <name>loadPixmap</name>
        <param>
          <type>const QString &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>Qt::AspectRatioMode</type>
          <declname>aspectRatioMode</declname>
          <defval>Qt::KeepAspectRatio</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="27" column="9" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="27" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a16d7f755987f55619e3946944941c553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QPixmap</type>
        <definition>QPixmap bootstrapPixmap</definition>
        <argsstring>(const QString &amp;id)</argsstring>
        <name>bootstrapPixmap</name>
        <param>
          <type>const QString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="28" column="9" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="28" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a96b4062868b84582e7a7450650775246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawRoundedRect</definition>
        <argsstring>(QPainter &amp;painter, const QRectF &amp;rect, qreal xRadiusTop, qreal yRadiusTop, qreal xRadiusBottom, qreal yRadiusBottom)</argsstring>
        <name>drawRoundedRect</name>
        <param>
          <type>QPainter &amp;</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>xRadiusTop</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>yRadiusTop</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>xRadiusBottom</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>yRadiusBottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="30" column="6" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a66c4483790e33d32db604a3b89c0fbce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QColor</type>
        <definition>QColor interpColor</definition>
        <argsstring>(float xv, std::vector&lt; float &gt; xp, std::vector&lt; QColor &gt; fp)</argsstring>
        <name>interpColor</name>
        <param>
          <type>float</type>
          <declname>xv</declname>
        </param>
        <param>
          <type>std::vector&lt; float &gt;</type>
          <declname>xp</declname>
        </param>
        <param>
          <type>std::vector&lt; QColor &gt;</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="31" column="8" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="31" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1ad3fc9520e305cb333d53ee2beb0bd335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hasLongitudinalControl</definition>
        <argsstring>(const cereal::CarParams::Reader &amp;car_params)</argsstring>
        <name>hasLongitudinalControl</name>
        <param>
          <type>const cereal::CarParams::Reader &amp;</type>
          <declname>car_params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/qt/util.h" line="32" column="6" declfile="/tmp/openpilot/selfdrive/ui/qt/util.h" declline="32" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDateTime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFileSystemWatcher&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPainter&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPixmap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QSurfaceFormat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QWidget&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/gen/cpp/car.capnp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/params.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">QString<sp/>getVersion();</highlight></codeline>
<codeline lineno="17"><highlight class="normal">QString<sp/>getBrand();</highlight></codeline>
<codeline lineno="18"><highlight class="normal">QString<sp/>getUserAgent();</highlight></codeline>
<codeline lineno="19"><highlight class="normal">std::optional&lt;QString&gt;<sp/>getDongleId();</highlight></codeline>
<codeline lineno="20"><highlight class="normal">QMap&lt;QString,<sp/>QString&gt;<sp/>getSupportedLanguages();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setQtSurfaceFormat();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sigTermHandler(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">QString<sp/>timeAgo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDateTime<sp/>&amp;date);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swagLogMessageHandler(QtMsgType<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QMessageLogContext<sp/>&amp;context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;msg);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initApp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[],<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disable_hidpi<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">QWidget*<sp/>topWidget(QWidget*<sp/>widget);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">QPixmap<sp/>loadPixmap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fileName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QSize<sp/>&amp;size<sp/>=<sp/>{},<sp/>Qt::AspectRatioMode<sp/>aspectRatioMode<sp/>=<sp/>Qt::KeepAspectRatio);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">QPixmap<sp/>bootstrapPixmap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawRoundedRect(QPainter<sp/>&amp;painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF<sp/>&amp;rect,<sp/>qreal<sp/>xRadiusTop,<sp/>qreal<sp/>yRadiusTop,<sp/>qreal<sp/>xRadiusBottom,<sp/>qreal<sp/>yRadiusBottom);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">QColor<sp/>interpColor(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xv,<sp/>std::vector&lt;float&gt;<sp/>xp,<sp/>std::vector&lt;QColor&gt;<sp/>fp);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasLongitudinalControl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::CarParams::Reader<sp/>&amp;car_params);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="struct_inter_font" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_inter_font" kindref="compound">InterFont</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QFont<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="struct_inter_font" kindref="compound">InterFont</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixel_size,<sp/>QFont::Weight<sp/>weight<sp/>=<sp/>QFont::Normal)<sp/>:<sp/>QFont(</highlight><highlight class="stringliteral">&quot;Inter&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>setPixelSize(pixel_size);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>setWeight(weight);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_param_watcher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_param_watcher" kindref="compound">ParamWatcher</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="class_param_watcher" kindref="compound">ParamWatcher</ref>(QObject<sp/>*parent);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addParam(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;param_name);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paramChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;param_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;param_value);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fileChanged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;path);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>QFileSystemWatcher<sp/>*watcher;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>QHash&lt;QString,<sp/>QString&gt;<sp/>params_hash;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>Params<sp/>params;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/selfdrive/ui/qt/util.h"/>
  </compounddef>
</doxygen>
