<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="swaglog_8h" kind="file" language="C++">
    <compoundname>swaglog.h</compoundname>
    <includes local="yes">common/timing.h</includes>
    <incdepgraph>
      <node id="2">
        <label>common/timing.h</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/common/swaglog.h</label>
        <link refid="swaglog_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="swaglog_8h_1aadf8d5ab5bdefa3295f112697ba44500" prot="public" static="no">
        <name>CLOUDLOG_DEBUG</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="5" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1afa4c493a3a61bc0d7b00b74b4b49de84" prot="public" static="no">
        <name>CLOUDLOG_INFO</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="6" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1a3effbe82c8116c2a866dacbf6d43cae1" prot="public" static="no">
        <name>CLOUDLOG_WARNING</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="7" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1a0676413061252336e0fce28a7b174588" prot="public" static="no">
        <name>CLOUDLOG_ERROR</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="8" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1aee2e29ce0da514a61192ac8ebcdef8ce" prot="public" static="no">
        <name>CLOUDLOG_CRITICAL</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="9" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1ae1fcdadeeba24ec294eb586d7f8b0794" prot="public" static="no">
        <name>SWAG_LOG_CHECK_FMT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="15" column="10" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1aced465e0e48437a173fe85751a47bbc9" prot="public" static="no">
        <name>cloudlog</name>
        <param><defname>lvl</defname></param>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>                                           cloudlog_e(lvl, __FILE__, __LINE__, \
                                           __func__, \
                                           fmt, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="28" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1af45ebc7d8a789ae937e77fd4ee929ba9" prot="public" static="no">
        <name>cloudlog_t</name>
        <param><defname>lvl</defname></param>
        <param><defname>...</defname></param>
        <initializer>                                          cloudlog_te(lvl, __FILE__, __LINE__, \
                                          __func__, \
                                          __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="32" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1a107030e659782a6a78e44593123ad74a" prot="public" static="no">
        <name>cloudlog_rl</name>
        <param><defname>burst</defname></param>
        <param><defname>millis</defname></param>
        <param><defname>lvl</defname></param>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>{                                                   \
  static uint64_t __begin = 0;                      \
  static int __printed = 0;                         \
  static int __missed = 0;                          \
                                                    \
  int __burst = (burst);                            \
  int __millis = (millis);                          \
  uint64_t __ts = nanos_since_boot();               \
                                                    \
  if (!__begin) { __begin = __ts; }                 \
                                                    \
  if (__begin + __millis*1000000ULL &lt; __ts) {       \
    if (__missed) {                                 \
      cloudlog(CLOUDLOG_WARNING, &quot;cloudlog: %d messages suppressed&quot;, __missed); \
    }                                               \
    __begin = 0;                                    \
    __printed = 0;                                  \
    __missed = 0;                                   \
  }                                                 \
                                                    \
  if (__printed &lt; __burst) {                        \
    cloudlog(lvl, fmt, ## __VA_ARGS__);             \
    __printed++;                                    \
  } else {                                          \
    __missed++;                                     \
  }                                                 \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="37" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1aa8fd1cb272d0f14a3b8e417443335a46" prot="public" static="no">
        <name>LOGT</name>
        <param><defname>...</defname></param>
        <initializer>cloudlog_t(CLOUDLOG_DEBUG, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="67" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1a48bbf993b1b3c921f9576776376abd2b" prot="public" static="no">
        <name>LOGD</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>cloudlog(CLOUDLOG_DEBUG, fmt, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="68" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1a388edf12256bf73c3a8ee9734c3bd841" prot="public" static="no">
        <name>LOG</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>cloudlog(CLOUDLOG_INFO, fmt, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="69" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1a7f332d50cbb255285411ff250e6da404" prot="public" static="no">
        <name>LOGW</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>cloudlog(CLOUDLOG_WARNING, fmt, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="70" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1aad0ba517f6ba41ca750a26340b91ec85" prot="public" static="no">
        <name>LOGE</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>cloudlog(CLOUDLOG_ERROR, fmt, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="71" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1ab704a8550bf3d54af618ea207b9520b3" prot="public" static="no">
        <name>LOGD_100</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>cloudlog_rl(2, 100, CLOUDLOG_DEBUG, fmt, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="73" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1aa66e0ed2efadf6a2e77d9fa27cf5a766" prot="public" static="no">
        <name>LOG_100</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>cloudlog_rl(2, 100, CLOUDLOG_INFO, fmt, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="74" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1a396332ada9577ef00217fd471cb6d5c0" prot="public" static="no">
        <name>LOGW_100</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>cloudlog_rl(2, 100, CLOUDLOG_WARNING, fmt, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="75" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="swaglog_8h_1a6dea1fa22eca26f84e883464d7405549" prot="public" static="no">
        <name>LOGE_100</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>cloudlog_rl(2, 100, CLOUDLOG_ERROR, fmt, ## __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="76" column="9" bodyfile="/tmp/openpilot/common/swaglog.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="swaglog_8h_1aceda2255cc5f76dcc3f15e57d7a64848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cloudlog_e</definition>
        <argsstring>(int levelnum, const char *filename, int lineno, const char *func, const char *fmt,...) SWAG_LOG_CHECK_FMT(5</argsstring>
        <name>cloudlog_e</name>
        <param>
          <type>int</type>
          <declname>levelnum</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="18" column="6"/>
      </memberdef>
      <memberdef kind="function" id="swaglog_8h_1a934fa1e0e2e095754b0ae855dbd5b656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void void</type>
        <definition>void void cloudlog_te</definition>
        <argsstring>(int levelnum, const char *filename, int lineno, const char *func, const char *fmt,...) SWAG_LOG_CHECK_FMT(5</argsstring>
        <name>cloudlog_te</name>
        <param>
          <type>int</type>
          <declname>levelnum</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="21" column="6"/>
      </memberdef>
      <memberdef kind="function" id="swaglog_8h_1a66ff4c088131fd3d8f4d5f1a03d11d84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void void void</type>
        <definition>void void void cloudlog_te</definition>
        <argsstring>(int levelnum, const char *filename, int lineno, const char *func, uint32_t frame_id, const char *fmt,...) SWAG_LOG_CHECK_FMT(6</argsstring>
        <name>cloudlog_te</name>
        <param>
          <type>int</type>
          <declname>levelnum</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/swaglog.h" line="24" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/timing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOUDLOG_DEBUG<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOUDLOG_INFO<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOUDLOG_WARNING<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOUDLOG_ERROR<sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLOUDLOG_CRITICAL<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWAG_LOG_CHECK_FMT(a,<sp/>b)<sp/>__attribute__<sp/>((format<sp/>(printf,<sp/>a,<sp/>b)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWAG_LOG_CHECK_FMT(a,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cloudlog_e(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levelnum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)<sp/>SWAG_LOG_CHECK_FMT(5,<sp/>6);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cloudlog_te(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levelnum,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)<sp/>SWAG_LOG_CHECK_FMT(5,<sp/>6);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cloudlog_te(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levelnum,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineno,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>frame_id,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)<sp/>SWAG_LOG_CHECK_FMT(6,<sp/>7);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cloudlog(lvl,<sp/>fmt,<sp/>...)<sp/>cloudlog_e(lvl,<sp/>__FILE__,<sp/>__LINE__,<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__func__,<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cloudlog_t(lvl,<sp/>...)<sp/>cloudlog_te(lvl,<sp/>__FILE__,<sp/>__LINE__,<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__func__,<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cloudlog_rl(burst,<sp/>millis,<sp/>lvl,<sp/>fmt,<sp/>...)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/>static<sp/>uint64_t<sp/>__begin<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/>static<sp/>int<sp/>__printed<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/>static<sp/>int<sp/>__missed<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/>int<sp/>__burst<sp/>=<sp/>(burst);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/>int<sp/>__millis<sp/>=<sp/>(millis);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/>uint64_t<sp/>__ts<sp/>=<sp/>nanos_since_boot();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!__begin)<sp/>{<sp/>__begin<sp/>=<sp/>__ts;<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>if<sp/>(__begin<sp/>+<sp/>__millis*1000000ULL<sp/>&lt;<sp/>__ts)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(__missed)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>cloudlog(CLOUDLOG_WARNING,<sp/>&quot;cloudlog:<sp/>%d<sp/>messages<sp/>suppressed&quot;,<sp/>__missed);<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__begin<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__printed<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__missed<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/>if<sp/>(__printed<sp/>&lt;<sp/>__burst)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>cloudlog(lvl,<sp/>fmt,<sp/>##<sp/>__VA_ARGS__);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__printed++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__missed++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOGT(...)<sp/>cloudlog_t(CLOUDLOG_DEBUG,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOGD(fmt,<sp/>...)<sp/>cloudlog(CLOUDLOG_DEBUG,<sp/>fmt,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG(fmt,<sp/>...)<sp/>cloudlog(CLOUDLOG_INFO,<sp/>fmt,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOGW(fmt,<sp/>...)<sp/>cloudlog(CLOUDLOG_WARNING,<sp/>fmt,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOGE(fmt,<sp/>...)<sp/>cloudlog(CLOUDLOG_ERROR,<sp/>fmt,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOGD_100(fmt,<sp/>...)<sp/>cloudlog_rl(2,<sp/>100,<sp/>CLOUDLOG_DEBUG,<sp/>fmt,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOG_100(fmt,<sp/>...)<sp/>cloudlog_rl(2,<sp/>100,<sp/>CLOUDLOG_INFO,<sp/>fmt,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOGW_100(fmt,<sp/>...)<sp/>cloudlog_rl(2,<sp/>100,<sp/>CLOUDLOG_WARNING,<sp/>fmt,<sp/>##<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOGE_100(fmt,<sp/>...)<sp/>cloudlog_rl(2,<sp/>100,<sp/>CLOUDLOG_ERROR,<sp/>fmt,<sp/>##<sp/>__VA_ARGS__)</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/common/swaglog.h"/>
  </compounddef>
</doxygen>
