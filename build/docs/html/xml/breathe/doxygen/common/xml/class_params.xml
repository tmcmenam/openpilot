<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_params" kind="class" language="C++" prot="public">
    <compoundname>Params</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_params_1af3cbd80f34c7534ab0ab10c79dc77100" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Params::params_path</definition>
        <argsstring></argsstring>
        <name>params_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="51" column="15" bodyfile="/tmp/openpilot/common/params.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_params_1a60aa0dac81da642d2c6c52db8ea40b31" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Params::prefix</definition>
        <argsstring></argsstring>
        <name>prefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="52" column="15" bodyfile="/tmp/openpilot/common/params.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_params_1aea7bbf7dbb5b82fc92559a7f31bc56ec" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Params::Params</definition>
        <argsstring>(const std::string &amp;path={})</argsstring>
        <name>Params</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="18" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1a662193d8cc09d9f67f2331e6d9283524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Params::Params</definition>
        <argsstring>(const Params &amp;)=delete</argsstring>
        <name>Params</name>
        <param>
          <type>const <ref refid="class_params" kindref="compound">Params</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="20" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1ae8c164690058dcda1a17de805f813b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_params" kindref="compound">Params</ref> &amp;</type>
        <definition>Params&amp; Params::operator=</definition>
        <argsstring>(const Params &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_params" kindref="compound">Params</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="21" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1a4f628e1a8917cdf3a59c5b7fb11eb225" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; Params::allKeys</definition>
        <argsstring>() const</argsstring>
        <name>allKeys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="23" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1ade1c525b47ae480b5fb7a80b36f94b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Params::checkKey</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>checkKey</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="24" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1afcf0de51fd9b266e7dedbd0503058284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ParamKeyType</type>
        <definition>ParamKeyType Params::getKeyType</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>getKeyType</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="25" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1ad9911b5a0b5323b42cfc64f5411f9289" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Params::getParamPath</definition>
        <argsstring>(const std::string &amp;key={})</argsstring>
        <name>getParamPath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="26" column="22" bodyfile="/tmp/openpilot/common/params.h" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1a171f60aeea3516a6755b85d94fbd4533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Params::remove</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>remove</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="31" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1a27f2ab2ec44743704d4df2acc0b8305a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Params::clearAll</definition>
        <argsstring>(ParamKeyType type)</argsstring>
        <name>clearAll</name>
        <param>
          <type>ParamKeyType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="32" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1af3f6ef6494f70d651dd3b73fd10c5020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Params::get</definition>
        <argsstring>(const std::string &amp;key, bool block=false)</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>block</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="35" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1a7e39e3473b4a3350eec85bdd464216fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Params::getBool</definition>
        <argsstring>(const std::string &amp;key, bool block=false)</argsstring>
        <name>getBool</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>block</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="36" column="15" bodyfile="/tmp/openpilot/common/params.h" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1a595c852a2d3f1a7420dcf15a9bfd8726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; Params::readAll</definition>
        <argsstring>()</argsstring>
        <name>readAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="39" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1af55df54b5c4f18708f46bb0a4363df93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Params::put</definition>
        <argsstring>(const char *key, const char *val, size_t value_size)</argsstring>
        <name>put</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="42" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1ae6cdb3af7c12dd0361ffc5c70810fd01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Params::put</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;val)</argsstring>
        <name>put</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="43" column="14" bodyfile="/tmp/openpilot/common/params.h" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_params_1a3b0e6c249b9bbbd5bf7894676618aedf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Params::putBool</definition>
        <argsstring>(const std::string &amp;key, bool val)</argsstring>
        <name>putBool</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/common/params.h" line="46" column="14" bodyfile="/tmp/openpilot/common/params.h" bodystart="46" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/openpilot/common/params.h" line="16" column="13" bodyfile="/tmp/openpilot/common/params.h" bodystart="16" bodyend="53"/>
    <listofallmembers>
      <member refid="class_params_1a4f628e1a8917cdf3a59c5b7fb11eb225" prot="public" virt="non-virtual"><scope>Params</scope><name>allKeys</name></member>
      <member refid="class_params_1ade1c525b47ae480b5fb7a80b36f94b7e" prot="public" virt="non-virtual"><scope>Params</scope><name>checkKey</name></member>
      <member refid="class_params_1a27f2ab2ec44743704d4df2acc0b8305a" prot="public" virt="non-virtual"><scope>Params</scope><name>clearAll</name></member>
      <member refid="class_params_1af3f6ef6494f70d651dd3b73fd10c5020" prot="public" virt="non-virtual"><scope>Params</scope><name>get</name></member>
      <member refid="class_params_1a7e39e3473b4a3350eec85bdd464216fa" prot="public" virt="non-virtual"><scope>Params</scope><name>getBool</name></member>
      <member refid="class_params_1afcf0de51fd9b266e7dedbd0503058284" prot="public" virt="non-virtual"><scope>Params</scope><name>getKeyType</name></member>
      <member refid="class_params_1ad9911b5a0b5323b42cfc64f5411f9289" prot="public" virt="non-virtual"><scope>Params</scope><name>getParamPath</name></member>
      <member refid="class_params_1ae8c164690058dcda1a17de805f813b19" prot="public" virt="non-virtual"><scope>Params</scope><name>operator=</name></member>
      <member refid="class_params_1aea7bbf7dbb5b82fc92559a7f31bc56ec" prot="public" virt="non-virtual"><scope>Params</scope><name>Params</name></member>
      <member refid="class_params_1a662193d8cc09d9f67f2331e6d9283524" prot="public" virt="non-virtual"><scope>Params</scope><name>Params</name></member>
      <member refid="class_params_1af3cbd80f34c7534ab0ab10c79dc77100" prot="private" virt="non-virtual"><scope>Params</scope><name>params_path</name></member>
      <member refid="class_params_1a60aa0dac81da642d2c6c52db8ea40b31" prot="private" virt="non-virtual"><scope>Params</scope><name>prefix</name></member>
      <member refid="class_params_1af55df54b5c4f18708f46bb0a4363df93" prot="public" virt="non-virtual"><scope>Params</scope><name>put</name></member>
      <member refid="class_params_1ae6cdb3af7c12dd0361ffc5c70810fd01" prot="public" virt="non-virtual"><scope>Params</scope><name>put</name></member>
      <member refid="class_params_1a3b0e6c249b9bbbd5bf7894676618aedf" prot="public" virt="non-virtual"><scope>Params</scope><name>putBool</name></member>
      <member refid="class_params_1a595c852a2d3f1a7420dcf15a9bfd8726" prot="public" virt="non-virtual"><scope>Params</scope><name>readAll</name></member>
      <member refid="class_params_1a171f60aeea3516a6755b85d94fbd4533" prot="public" virt="non-virtual"><scope>Params</scope><name>remove</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
