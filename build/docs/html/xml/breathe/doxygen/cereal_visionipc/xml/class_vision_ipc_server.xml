<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_vision_ipc_server" kind="class" language="C++" prot="public">
    <compoundname>VisionIpcServer</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_vision_ipc_server_1a0ebcc8af56754df295d12cb977239d05" prot="private" static="no" mutable="no">
        <type>cl_device_id</type>
        <definition>cl_device_id VisionIpcServer::device_id</definition>
        <argsstring></argsstring>
        <name>device_id</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="16" column="16" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vision_ipc_server_1a398a3422c733a09b401127dc96f7cfed" prot="private" static="no" mutable="no">
        <type>cl_context</type>
        <definition>cl_context VisionIpcServer::ctx</definition>
        <argsstring></argsstring>
        <name>ctx</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="17" column="14" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vision_ipc_server_1af0354cb115149f3a8c0a3ae138609ed4" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t VisionIpcServer::server_id</definition>
        <argsstring></argsstring>
        <name>server_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="18" column="12" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vision_ipc_server_1acda0e86bc8b3f176e1f744db227dd39b" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; VisionIpcServer::should_exit</definition>
        <argsstring></argsstring>
        <name>should_exit</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="20" column="15" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vision_ipc_server_1a307d1d7138ff988438443f859702d55c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string VisionIpcServer::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="21" column="15" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vision_ipc_server_1a211b38c1b26cf95a7df1a9e268adac4d" prot="private" static="no" mutable="no">
        <type>std::thread</type>
        <definition>std::thread VisionIpcServer::listener_thread</definition>
        <argsstring></argsstring>
        <name>listener_thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="22" column="15" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vision_ipc_server_1a52627871ee1e45773530df3e0cb3410b" prot="private" static="no" mutable="no">
        <type>std::map&lt; VisionStreamType, std::atomic&lt; size_t &gt; &gt;</type>
        <definition>std::map&lt;VisionStreamType, std::atomic&lt;size_t&gt; &gt; VisionIpcServer::cur_idx</definition>
        <argsstring></argsstring>
        <name>cur_idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="24" column="12" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vision_ipc_server_1a46e0bd5a0e49bf7c88493e44d01d20f7" prot="private" static="no" mutable="no">
        <type>std::map&lt; VisionStreamType, std::vector&lt; <ref refid="class_vision_buf" kindref="compound">VisionBuf</ref> * &gt; &gt;</type>
        <definition>std::map&lt;VisionStreamType, std::vector&lt;VisionBuf*&gt; &gt; VisionIpcServer::buffers</definition>
        <argsstring></argsstring>
        <name>buffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="25" column="12" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vision_ipc_server_1a6fc30b01782da1e2ff370189ff1f3be4" prot="private" static="no" mutable="no">
        <type>Context *</type>
        <definition>Context* VisionIpcServer::msg_ctx</definition>
        <argsstring></argsstring>
        <name>msg_ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="27" column="12" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vision_ipc_server_1a8bef44bfa0144cd24ab47258560742cd" prot="private" static="no" mutable="no">
        <type>std::map&lt; VisionStreamType, PubSocket * &gt;</type>
        <definition>std::map&lt;VisionStreamType, PubSocket*&gt; VisionIpcServer::sockets</definition>
        <argsstring></argsstring>
        <name>sockets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="28" column="12" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_vision_ipc_server_1a2e1e7dee2d462f95cd5549777675217b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisionIpcServer::listener</definition>
        <argsstring>(void)</argsstring>
        <name>listener</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="30" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_vision_ipc_server_1a72e82d894992dcb27a8acb9a47e8a253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VisionIpcServer::VisionIpcServer</definition>
        <argsstring>(std::string name, cl_device_id device_id=nullptr, cl_context ctx=nullptr)</argsstring>
        <name>VisionIpcServer</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>cl_device_id</type>
          <declname>device_id</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>cl_context</type>
          <declname>ctx</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="33" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_vision_ipc_server_1ab58f66415322aa947484d2691f2db521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VisionIpcServer::~VisionIpcServer</definition>
        <argsstring>()</argsstring>
        <name>~VisionIpcServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="34" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_vision_ipc_server_1a78b2dd5b96d976b3f7b381feaf8f1f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vision_buf" kindref="compound">VisionBuf</ref> *</type>
        <definition>VisionBuf* VisionIpcServer::get_buffer</definition>
        <argsstring>(VisionStreamType type)</argsstring>
        <name>get_buffer</name>
        <param>
          <type>VisionStreamType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="36" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_vision_ipc_server_1a89909a1c2b1bc39b1b1539df0c6a485e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisionIpcServer::create_buffers</definition>
        <argsstring>(VisionStreamType type, size_t num_buffers, bool rgb, size_t width, size_t height)</argsstring>
        <name>create_buffers</name>
        <param>
          <type>VisionStreamType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_buffers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rgb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="38" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_vision_ipc_server_1aa065549996f76086c34e7d767a818ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisionIpcServer::create_buffers_with_sizes</definition>
        <argsstring>(VisionStreamType type, size_t num_buffers, bool rgb, size_t width, size_t height, size_t size, size_t stride, size_t uv_offset)</argsstring>
        <name>create_buffers_with_sizes</name>
        <param>
          <type>VisionStreamType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_buffers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rgb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>uv_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="39" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_vision_ipc_server_1a2d4e8a74a06afacdabadfcf0077c0313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisionIpcServer::send</definition>
        <argsstring>(VisionBuf *buf, VisionIpcBufExtra *extra, bool sync=true)</argsstring>
        <name>send</name>
        <param>
          <type><ref refid="class_vision_buf" kindref="compound">VisionBuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>VisionIpcBufExtra *</type>
          <declname>extra</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sync</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="40" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_vision_ipc_server_1ac7aa3d6907df0489ad1a041adcf63118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VisionIpcServer::start_listener</definition>
        <argsstring>()</argsstring>
        <name>start_listener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="41" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/openpilot/cereal/visionipc/visionipc_server.h" line="14" column="22" bodyfile="/tmp/openpilot/cereal/visionipc/visionipc_server.h" bodystart="14" bodyend="42"/>
    <listofallmembers>
      <member refid="class_vision_ipc_server_1a46e0bd5a0e49bf7c88493e44d01d20f7" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>buffers</name></member>
      <member refid="class_vision_ipc_server_1a89909a1c2b1bc39b1b1539df0c6a485e" prot="public" virt="non-virtual"><scope>VisionIpcServer</scope><name>create_buffers</name></member>
      <member refid="class_vision_ipc_server_1aa065549996f76086c34e7d767a818ec3" prot="public" virt="non-virtual"><scope>VisionIpcServer</scope><name>create_buffers_with_sizes</name></member>
      <member refid="class_vision_ipc_server_1a398a3422c733a09b401127dc96f7cfed" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>ctx</name></member>
      <member refid="class_vision_ipc_server_1a52627871ee1e45773530df3e0cb3410b" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>cur_idx</name></member>
      <member refid="class_vision_ipc_server_1a0ebcc8af56754df295d12cb977239d05" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>device_id</name></member>
      <member refid="class_vision_ipc_server_1a78b2dd5b96d976b3f7b381feaf8f1f33" prot="public" virt="non-virtual"><scope>VisionIpcServer</scope><name>get_buffer</name></member>
      <member refid="class_vision_ipc_server_1a2e1e7dee2d462f95cd5549777675217b" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>listener</name></member>
      <member refid="class_vision_ipc_server_1a211b38c1b26cf95a7df1a9e268adac4d" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>listener_thread</name></member>
      <member refid="class_vision_ipc_server_1a6fc30b01782da1e2ff370189ff1f3be4" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>msg_ctx</name></member>
      <member refid="class_vision_ipc_server_1a307d1d7138ff988438443f859702d55c" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>name</name></member>
      <member refid="class_vision_ipc_server_1a2d4e8a74a06afacdabadfcf0077c0313" prot="public" virt="non-virtual"><scope>VisionIpcServer</scope><name>send</name></member>
      <member refid="class_vision_ipc_server_1af0354cb115149f3a8c0a3ae138609ed4" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>server_id</name></member>
      <member refid="class_vision_ipc_server_1acda0e86bc8b3f176e1f744db227dd39b" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>should_exit</name></member>
      <member refid="class_vision_ipc_server_1a8bef44bfa0144cd24ab47258560742cd" prot="private" virt="non-virtual"><scope>VisionIpcServer</scope><name>sockets</name></member>
      <member refid="class_vision_ipc_server_1ac7aa3d6907df0489ad1a041adcf63118" prot="public" virt="non-virtual"><scope>VisionIpcServer</scope><name>start_listener</name></member>
      <member refid="class_vision_ipc_server_1a72e82d894992dcb27a8acb9a47e8a253" prot="public" virt="non-virtual"><scope>VisionIpcServer</scope><name>VisionIpcServer</name></member>
      <member refid="class_vision_ipc_server_1ab58f66415322aa947484d2691f2db521" prot="public" virt="non-virtual"><scope>VisionIpcServer</scope><name>~VisionIpcServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
