<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ui_8h" kind="file" language="C++">
    <compoundname>ui.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">optional</includes>
    <includes local="no">QObject</includes>
    <includes local="no">QTimer</includes>
    <includes local="no">QColor</includes>
    <includes local="no">QFuture</includes>
    <includes local="no">QPolygonF</includes>
    <includes local="no">QTransform</includes>
    <includes local="yes">cereal/messaging/messaging.h</includes>
    <includes local="yes">common/modeldata.h</includes>
    <includes local="yes">common/params.h</includes>
    <includes local="yes">common/timing.h</includes>
    <incdepgraph>
      <node id="11">
        <label>QTransform</label>
      </node>
      <node id="9">
        <label>QFuture</label>
      </node>
      <node id="6">
        <label>QObject</label>
      </node>
      <node id="14">
        <label>common/params.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="12">
        <label>cereal/messaging/messaging.h</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="7">
        <label>QTimer</label>
      </node>
      <node id="13">
        <label>common/modeldata.h</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/selfdrive/ui/ui.h</label>
        <link refid="ui_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>QColor</label>
      </node>
      <node id="15">
        <label>common/timing.h</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="10">
        <label>QPolygonF</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_alert" prot="public">Alert</innerclass>
    <innerclass refid="struct_u_i_scene" prot="public">UIScene</innerclass>
    <innerclass refid="class_u_i_state" prot="public">UIState</innerclass>
    <innerclass refid="class_device" prot="public">Device</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ui_8h_1aa20d38b1a30cb0e17312abe08d2b0dc2" prot="public" static="no" strong="no">
        <type></type>
        <name>UIStatus</name>
        <enumvalue id="ui_8h_1aa20d38b1a30cb0e17312abe08d2b0dc2a1e863183bbdeea6451fa50dca9a4de8a" prot="public">
          <name>STATUS_DISENGAGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1aa20d38b1a30cb0e17312abe08d2b0dc2afe356697fad2cbc62204b3cacfd2eaf8" prot="public">
          <name>STATUS_OVERRIDE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1aa20d38b1a30cb0e17312abe08d2b0dc2af5da5c3e78e2c1a673eda1727690bfba" prot="public">
          <name>STATUS_ENGAGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="93" column="22" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="enum" id="ui_8h_1a559f59b1190c88d24f91892974f27dca" prot="public" static="no" strong="no">
        <type></type>
        <name>PrimeType</name>
        <enumvalue id="ui_8h_1a559f59b1190c88d24f91892974f27dcaa6ce26a62afab55d7606ad4e92428b30c" prot="public">
          <name>UNKNOWN</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1a559f59b1190c88d24f91892974f27dcaac157bdf0b85a40d2619cbc8bc1ae5fe2" prot="public">
          <name>NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1a559f59b1190c88d24f91892974f27dcaa56926c820ad72d0977e7ee44d9916e62" prot="public">
          <name>MAGENTA</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1a559f59b1190c88d24f91892974f27dcaa843fce0a02762f3529c0e8e3c5533b8e" prot="public">
          <name>LITE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1a559f59b1190c88d24f91892974f27dcaa35d6719cb4d7577c031b3d79057a1b79" prot="public">
          <name>BLUE</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ui_8h_1a559f59b1190c88d24f91892974f27dcaac19177ca82326476c02a3bc3db40a27d" prot="public">
          <name>MAGENTA_NEW</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="99" column="15" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="99" bodyend="106"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ui_8h_1a03e57249c765166d09dffbfe43e8d2b0" prot="public" static="no">
        <type>cereal::CarControl::HUDControl::AudibleAlert</type>
        <definition>typedef cereal::CarControl::HUDControl::AudibleAlert AudibleAlert</definition>
        <argsstring></argsstring>
        <name>AudibleAlert</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="25" column="54" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ui_8h_1aff67f400387db045e83b34ae5a76b39c" prot="public" static="no">
        <type>enum UIStatus</type>
        <definition>typedef enum UIStatus UIStatus</definition>
        <argsstring></argsstring>
        <name>UIStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="97" column="10"/>
      </memberdef>
      <memberdef kind="typedef" id="ui_8h_1a601fd7130224239605f1adc47b67ad63" prot="public" static="no">
        <type>struct <ref refid="struct_u_i_scene" kindref="compound">UIScene</ref></type>
        <definition>typedef struct UIScene UIScene</definition>
        <argsstring></argsstring>
        <name>UIScene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="150" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ui_8h_1a8b3451133469cd45675a02b36e37a988" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int UI_BORDER_SIZE</definition>
        <argsstring></argsstring>
        <name>UI_BORDER_SIZE</name>
        <initializer>= 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="20" column="11" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1ae1afe143db3693549a01be7460aa37bb" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int UI_HEADER_HEIGHT</definition>
        <argsstring></argsstring>
        <name>UI_HEADER_HEIGHT</name>
        <initializer>= 420</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="21" column="11" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1a7e6ea0e5f2b990b00d7356382d4da4dc" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int UI_FREQ</definition>
        <argsstring></argsstring>
        <name>UI_FREQ</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="23" column="11" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1a9f955b48d4fc8d6aae7f80add9b2aef0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int BACKLIGHT_OFFROAD</definition>
        <argsstring></argsstring>
        <name>BACKLIGHT_OFFROAD</name>
        <initializer>= 50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="24" column="11" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1ad0ab4d9b250ef28940e2d6843a3e0abe" prot="public" static="no" mutable="no">
        <type>const mat3</type>
        <definition>const mat3 DEFAULT_CALIBRATION</definition>
        <argsstring></argsstring>
        <name>DEFAULT_CALIBRATION</name>
        <initializer>= {{ 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0 }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="27" column="12" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1ae8b4b50aca391bba047e40c1375f7ee1" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr vec3</type>
        <definition>constexpr vec3 default_face_kpts_3d[]</definition>
        <argsstring>[]</argsstring>
        <name>default_face_kpts_3d</name>
        <initializer>= {
  {-5.98, -51.20, 8.00}, {-17.64, -49.14, 8.00}, {-23.81, -46.40, 8.00}, {-29.98, -40.91, 8.00}, {-32.04, -37.49, 8.00},
  {-34.10, -32.00, 8.00}, {-36.16, -21.03, 8.00}, {-36.16, 6.40, 8.00}, {-35.47, 10.51, 8.00}, {-32.73, 19.43, 8.00},
  {-29.30, 26.29, 8.00}, {-24.50, 33.83, 8.00}, {-19.01, 41.37, 8.00}, {-14.21, 46.17, 8.00}, {-12.16, 47.54, 8.00},
  {-4.61, 49.60, 8.00}, {4.99, 49.60, 8.00}, {12.53, 47.54, 8.00}, {14.59, 46.17, 8.00}, {19.39, 41.37, 8.00},
  {24.87, 33.83, 8.00}, {29.67, 26.29, 8.00}, {33.10, 19.43, 8.00}, {35.84, 10.51, 8.00}, {36.53, 6.40, 8.00},
  {36.53, -21.03, 8.00}, {34.47, -32.00, 8.00}, {32.42, -37.49, 8.00}, {30.36, -40.91, 8.00}, {24.19, -46.40, 8.00},
  {18.02, -49.14, 8.00}, {6.36, -51.20, 8.00}, {-5.98, -51.20, 8.00},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="29" column="16" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1a2261f1afb133a13b5b089bc5b23f6183" prot="public" static="no" mutable="no">
        <type>const QColor</type>
        <definition>const QColor bg_colors[]</definition>
        <argsstring>[]</argsstring>
        <name>bg_colors</name>
        <initializer>= {
  [STATUS_DISENGAGED] = QColor(0x17, 0x33, 0x49, 0xc8),
  [STATUS_OVERRIDE] = QColor(0x91, 0x9b, 0x95, 0xf1),
  [STATUS_ENGAGED] = QColor(0x17, 0x86, 0x44, 0xf1),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="108" column="14" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ui_8h_1ac91ebe450759bc7d9e39d7ae51f6fe3a" prot="public" static="yes" mutable="no">
        <type>std::map&lt; cereal::ControlsState::AlertStatus, QColor &gt;</type>
        <definition>std::map&lt;cereal::ControlsState::AlertStatus, QColor&gt; alert_colors</definition>
        <argsstring></argsstring>
        <name>alert_colors</name>
        <initializer>= {
  {cereal::ControlsState::AlertStatus::NORMAL, QColor(0x15, 0x15, 0x15, 0xf1)},
  {cereal::ControlsState::AlertStatus::USER_PROMPT, QColor(0xDA, 0x6F, 0x25, 0xf1)},
  {cereal::ControlsState::AlertStatus::CRITICAL, QColor(0xC9, 0x22, 0x31, 0xf1)},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="114" column="17" bodyfile="/tmp/openpilot/selfdrive/ui/ui.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ui_8h_1ae00d99dd1cb89d710c9cd494c1e390ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_u_i_state" kindref="compound">UIState</ref> *</type>
        <definition>UIState* uiState</definition>
        <argsstring>()</argsstring>
        <name>uiState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="195" column="9" declfile="/tmp/openpilot/selfdrive/ui/ui.h" declline="195" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a91f8e88d8ef8ea091434eaf6c3b50b16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_device" kindref="compound">Device</ref> *</type>
        <definition>Device* device</definition>
        <argsstring>()</argsstring>
        <name>device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="231" column="8" declfile="/tmp/openpilot/selfdrive/ui/ui.h" declline="231" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a5862fd821f81cdc2a4d835968b377a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ui_update_params</definition>
        <argsstring>(UIState *s)</argsstring>
        <name>ui_update_params</name>
        <param>
          <type><ref refid="class_u_i_state" kindref="compound">UIState</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="233" column="6" declfile="/tmp/openpilot/selfdrive/ui/ui.h" declline="233" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ac93298c7ab0211e9d0778eccb0753afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_path_length_idx</definition>
        <argsstring>(const cereal::XYZTData::Reader &amp;line, const float path_height)</argsstring>
        <name>get_path_length_idx</name>
        <param>
          <type>const cereal::XYZTData::Reader &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>path_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="234" column="5" declfile="/tmp/openpilot/selfdrive/ui/ui.h" declline="234" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a12b07e120d0e84faa2206a1e3789e3e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_model</definition>
        <argsstring>(UIState *s, const cereal::ModelDataV2::Reader &amp;model, const cereal::UiPlan::Reader &amp;plan)</argsstring>
        <name>update_model</name>
        <param>
          <type><ref refid="class_u_i_state" kindref="compound">UIState</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const cereal::ModelDataV2::Reader &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const cereal::UiPlan::Reader &amp;</type>
          <declname>plan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="235" column="6" declfile="/tmp/openpilot/selfdrive/ui/ui.h" declline="235" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a8e4bfaca42ef93217dbbd18855e3aa52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_dmonitoring</definition>
        <argsstring>(UIState *s, const cereal::DriverStateV2::Reader &amp;driverstate, float dm_fade_state, bool is_rhd)</argsstring>
        <name>update_dmonitoring</name>
        <param>
          <type><ref refid="class_u_i_state" kindref="compound">UIState</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const cereal::DriverStateV2::Reader &amp;</type>
          <declname>driverstate</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dm_fade_state</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_rhd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="238" column="6" declfile="/tmp/openpilot/selfdrive/ui/ui.h" declline="238" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1ad9cd70803656fd1b89abab930d019763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_leads</definition>
        <argsstring>(UIState *s, const cereal::RadarState::Reader &amp;radar_state, const cereal::XYZTData::Reader &amp;line)</argsstring>
        <name>update_leads</name>
        <param>
          <type><ref refid="class_u_i_state" kindref="compound">UIState</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const cereal::RadarState::Reader &amp;</type>
          <declname>radar_state</declname>
        </param>
        <param>
          <type>const cereal::XYZTData::Reader &amp;</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="239" column="6" declfile="/tmp/openpilot/selfdrive/ui/ui.h" declline="239" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ui_8h_1a7296b2ea888c36b4d9ca2240f8a52561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_line_data</definition>
        <argsstring>(const UIState *s, const cereal::XYZTData::Reader &amp;line, float y_off, float z_off, QPolygonF *pvd, int max_idx, bool allow_invert)</argsstring>
        <name>update_line_data</name>
        <param>
          <type>const <ref refid="class_u_i_state" kindref="compound">UIState</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const cereal::XYZTData::Reader &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y_off</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z_off</declname>
        </param>
        <param>
          <type>QPolygonF *</type>
          <declname>pvd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_idx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_invert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/ui/ui.h" line="240" column="6" declfile="/tmp/openpilot/selfdrive/ui/ui.h" declline="240" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTimer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QColor&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFuture&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPolygonF&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QTransform&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/messaging/messaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/modeldata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/params.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/timing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_BORDER_SIZE<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_HEADER_HEIGHT<sp/>=<sp/>420;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UI_FREQ<sp/>=<sp/>20;<sp/></highlight><highlight class="comment">//<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BACKLIGHT_OFFROAD<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cereal::CarControl::HUDControl::AudibleAlert<sp/>AudibleAlert;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mat3<sp/>DEFAULT_CALIBRATION<sp/>=<sp/>{{<sp/>0.0,<sp/>1.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0,<sp/>1.0,<sp/>0.0,<sp/>0.0<sp/>}};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">constexpr<sp/>vec3<sp/>default_face_kpts_3d[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{-5.98,<sp/>-51.20,<sp/>8.00},<sp/>{-17.64,<sp/>-49.14,<sp/>8.00},<sp/>{-23.81,<sp/>-46.40,<sp/>8.00},<sp/>{-29.98,<sp/>-40.91,<sp/>8.00},<sp/>{-32.04,<sp/>-37.49,<sp/>8.00},</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{-34.10,<sp/>-32.00,<sp/>8.00},<sp/>{-36.16,<sp/>-21.03,<sp/>8.00},<sp/>{-36.16,<sp/>6.40,<sp/>8.00},<sp/>{-35.47,<sp/>10.51,<sp/>8.00},<sp/>{-32.73,<sp/>19.43,<sp/>8.00},</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{-29.30,<sp/>26.29,<sp/>8.00},<sp/>{-24.50,<sp/>33.83,<sp/>8.00},<sp/>{-19.01,<sp/>41.37,<sp/>8.00},<sp/>{-14.21,<sp/>46.17,<sp/>8.00},<sp/>{-12.16,<sp/>47.54,<sp/>8.00},</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{-4.61,<sp/>49.60,<sp/>8.00},<sp/>{4.99,<sp/>49.60,<sp/>8.00},<sp/>{12.53,<sp/>47.54,<sp/>8.00},<sp/>{14.59,<sp/>46.17,<sp/>8.00},<sp/>{19.39,<sp/>41.37,<sp/>8.00},</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{24.87,<sp/>33.83,<sp/>8.00},<sp/>{29.67,<sp/>26.29,<sp/>8.00},<sp/>{33.10,<sp/>19.43,<sp/>8.00},<sp/>{35.84,<sp/>10.51,<sp/>8.00},<sp/>{36.53,<sp/>6.40,<sp/>8.00},</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{36.53,<sp/>-21.03,<sp/>8.00},<sp/>{34.47,<sp/>-32.00,<sp/>8.00},<sp/>{32.42,<sp/>-37.49,<sp/>8.00},<sp/>{30.36,<sp/>-40.91,<sp/>8.00},<sp/>{24.19,<sp/>-46.40,<sp/>8.00},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{18.02,<sp/>-49.14,<sp/>8.00},<sp/>{6.36,<sp/>-51.20,<sp/>8.00},<sp/>{-5.98,<sp/>-51.20,<sp/>8.00},</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_alert" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_alert" kindref="compound">Alert</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>QString<sp/>text1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>QString<sp/>text2;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>QString<sp/>type;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>cereal::ControlsState::AlertSize<sp/>size;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>cereal::ControlsState::AlertStatus<sp/>status;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>AudibleAlert<sp/>sound;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_alert" kindref="compound">Alert</ref><sp/>&amp;a2)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text1<sp/>==<sp/>a2.text1<sp/>&amp;&amp;<sp/>text2<sp/>==<sp/>a2.text2<sp/>&amp;&amp;<sp/>type<sp/>==<sp/>a2.type<sp/>&amp;&amp;<sp/>sound<sp/>==<sp/>a2.sound;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_alert" kindref="compound">Alert</ref><sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SubMaster<sp/>&amp;sm,<sp/>uint64_t<sp/>started_frame)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::ControlsState::Reader<sp/>&amp;cs<sp/>=<sp/>sm[</highlight><highlight class="stringliteral">&quot;controlsState&quot;</highlight><highlight class="normal">].getControlsState();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>controls_frame<sp/>=<sp/>sm.rcv_frame(</highlight><highlight class="stringliteral">&quot;controlsState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_alert" kindref="compound">Alert</ref><sp/>alert<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(controls_frame<sp/>&gt;=<sp/>started_frame)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>get<sp/>old<sp/>alert.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alert<sp/>=<sp/>{cs.getAlertText1().cStr(),<sp/>cs.getAlertText2().cStr(),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cs.getAlertType().cStr(),<sp/>cs.getAlertSize(),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cs.getAlertStatus(),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cs.getAlertSound()};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sm.updated(</highlight><highlight class="stringliteral">&quot;controlsState&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(sm.frame<sp/>-<sp/>started_frame)<sp/>&gt;<sp/>5<sp/>*<sp/>UI_FREQ)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONTROLS_TIMEOUT<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>controls_missing<sp/>=<sp/>(nanos_since_boot()<sp/>-<sp/>sm.rcv_time(</highlight><highlight class="stringliteral">&quot;controlsState&quot;</highlight><highlight class="normal">))<sp/>/<sp/>1e9;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>controls<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(controls_frame<sp/>&lt;<sp/>started_frame)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>car<sp/>is<sp/>started,<sp/>but<sp/>controlsState<sp/>hasn&apos;t<sp/>been<sp/>seen<sp/>at<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alert<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;openpilot<sp/>Unavailable&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>controls<sp/>to<sp/>start&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;controlsWaiting&quot;</highlight><highlight class="normal">,<sp/>cereal::ControlsState::AlertSize::MID,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cereal::ControlsState::AlertStatus::NORMAL,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AudibleAlert::NONE};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(controls_missing<sp/>&gt;<sp/>CONTROLS_TIMEOUT<sp/>&amp;&amp;<sp/>!Hardware::PC())<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>car<sp/>is<sp/>started,<sp/>but<sp/>controls<sp/>is<sp/>lagging<sp/>or<sp/>died</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cs.getEnabled()<sp/>&amp;&amp;<sp/>(controls_missing<sp/>-<sp/>CONTROLS_TIMEOUT)<sp/>&lt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alert<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;TAKE<sp/>CONTROL<sp/>IMMEDIATELY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Controls<sp/>Unresponsive&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;controlsUnresponsive&quot;</highlight><highlight class="normal">,<sp/>cereal::ControlsState::AlertSize::FULL,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cereal::ControlsState::AlertStatus::CRITICAL,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AudibleAlert::WARNING_IMMEDIATE};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alert<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Controls<sp/>Unresponsive&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Reboot<sp/>Device&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;controlsUnresponsivePermanent&quot;</highlight><highlight class="normal">,<sp/>cereal::ControlsState::AlertSize::MID,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cereal::ControlsState::AlertStatus::NORMAL,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AudibleAlert::NONE};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alert;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>UIStatus<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>STATUS_DISENGAGED,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>STATUS_OVERRIDE,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>STATUS_ENGAGED,</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/>UIStatus;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>PrimeType<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>UNKNOWN<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>NONE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>MAGENTA<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>LITE<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>BLUE<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>MAGENTA_NEW<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>bg_colors<sp/>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>[STATUS_DISENGAGED]<sp/>=<sp/>QColor(0x17,<sp/>0x33,<sp/>0x49,<sp/>0xc8),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>[STATUS_OVERRIDE]<sp/>=<sp/>QColor(0x91,<sp/>0x9b,<sp/>0x95,<sp/>0xf1),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>[STATUS_ENGAGED]<sp/>=<sp/>QColor(0x17,<sp/>0x86,<sp/>0x44,<sp/>0xf1),</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;cereal::ControlsState::AlertStatus,<sp/>QColor&gt;<sp/>alert_colors<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>{cereal::ControlsState::AlertStatus::NORMAL,<sp/>QColor(0x15,<sp/>0x15,<sp/>0x15,<sp/>0xf1)},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{cereal::ControlsState::AlertStatus::USER_PROMPT,<sp/>QColor(0xDA,<sp/>0x6F,<sp/>0x25,<sp/>0xf1)},</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{cereal::ControlsState::AlertStatus::CRITICAL,<sp/>QColor(0xC9,<sp/>0x22,<sp/>0x31,<sp/>0xf1)},</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="struct_u_i_scene" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_u_i_scene" kindref="compound">UIScene</ref><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calibration_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calibration_wide_valid<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wide_cam<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>mat3<sp/>view_from_calib<sp/>=<sp/>DEFAULT_CALIBRATION;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>mat3<sp/>view_from_wide_calib<sp/>=<sp/>DEFAULT_CALIBRATION;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>cereal::PandaState::PandaType<sp/>pandaType;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>modelV2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lane_line_probs[4];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>road_edge_stds[2];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>QPolygonF<sp/>track_vertices;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>QPolygonF<sp/>lane_line_vertices[4];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>QPolygonF<sp/>road_edge_vertices[2];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>QPointF<sp/>lead_vertices[2];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DMoji<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>driver_pose_vals[3];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>driver_pose_diff[3];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>driver_pose_sins[3];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>driver_pose_coss[3];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>vec3<sp/>face_kpts_draw[std::size(default_face_kpts_3d)];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>navigate_on_openpilot<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>light_sensor;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>started,<sp/>ignition,<sp/>is_metric,<sp/>map_on_left,<sp/>longitudinal_control;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>uint64_t<sp/>started_frame;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/><ref refid="struct_u_i_scene" kindref="compound">UIScene</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_u_i_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="class_u_i_state" kindref="compound">UIState</ref>(QObject*<sp/>parent<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateStatus();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>worldObjectsVisible()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm-&gt;rcv_frame(</highlight><highlight class="stringliteral">&quot;liveCalibration&quot;</highlight><highlight class="normal">)<sp/>&gt;<sp/>scene.started_frame;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>engaged()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scene.started<sp/>&amp;&amp;<sp/>(*sm)[</highlight><highlight class="stringliteral">&quot;controlsState&quot;</highlight><highlight class="normal">].getControlsState().getEnabled();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPrimeType(PrimeType<sp/>type);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>PrimeType<sp/>primeType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prime_type;<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasPrime()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prime_type<sp/>!=<sp/>PrimeType::UNKNOWN<sp/>&amp;&amp;<sp/>prime_type<sp/>!=<sp/>PrimeType::NONE;<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fb_w<sp/>=<sp/>0,<sp/>fb_h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;SubMaster&gt;<sp/>sm;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>UIStatus<sp/>status;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="struct_u_i_scene" kindref="compound">UIScene</ref><sp/>scene<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>QString<sp/>language;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>QTransform<sp/>car_space_transform;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>uiUpdate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>&amp;s);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>offroadTransition(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>offroad);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>primeChanged(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prime);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>primeTypeChanged(PrimeType<sp/>prime_type);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>QTimer<sp/>*timer;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>started_prev<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>PrimeType<sp/>prime_type<sp/>=<sp/>PrimeType::UNKNOWN;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>*uiState();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>device<sp/>management<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_device" kindref="compound">Device</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="class_device" kindref="compound">Device</ref>(QObject<sp/>*parent<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isAwake()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>awake;<sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOffroadBrightness(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>brightness)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>offroad_brightness<sp/>=<sp/>std::clamp(brightness,<sp/>0,<sp/>100);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>awake<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interactive_timeout<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignition_on<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offroad_brightness<sp/>=<sp/>BACKLIGHT_OFFROAD;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_brightness<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>FirstOrderFilter<sp/>brightness_filter;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>QFuture&lt;void&gt;<sp/>brightness_future;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateBrightness(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>&amp;s);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateWakefulness(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>&amp;s);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAwake(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>displayPowerChanged(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>interactiveTimeout();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>slots:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resetInteractiveTimeout(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>&amp;s);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="class_device" kindref="compound">Device</ref><sp/>*device();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ui_update_params(<ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>*s);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_path_length_idx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::XYZTData::Reader<sp/>&amp;line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>path_height);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_model(<ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>*s,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::ModelDataV2::Reader<sp/>&amp;model,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::UiPlan::Reader<sp/>&amp;plan);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_dmonitoring(<ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::DriverStateV2::Reader<sp/>&amp;driverstate,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dm_fade_state,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_rhd);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_leads(<ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::RadarState::Reader<sp/>&amp;radar_state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::XYZTData::Reader<sp/>&amp;line);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_line_data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_i_state" kindref="compound">UIState</ref><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cereal::XYZTData::Reader<sp/>&amp;line,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y_off,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z_off,<sp/>QPolygonF<sp/>*pvd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_idx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_invert);</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/selfdrive/ui/ui.h"/>
  </compounddef>
</doxygen>
