<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="snpemodel_8h" kind="file" language="C++">
    <compoundname>snpemodel.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">DlContainer/IDlContainer.hpp</includes>
    <includes local="no">DlSystem/DlError.hpp</includes>
    <includes local="no">DlSystem/ITensor.hpp</includes>
    <includes local="no">DlSystem/ITensorFactory.hpp</includes>
    <includes local="no">DlSystem/IUserBuffer.hpp</includes>
    <includes local="no">DlSystem/IUserBufferFactory.hpp</includes>
    <includes local="no">SNPE/SNPE.hpp</includes>
    <includes local="no">SNPE/SNPEBuilder.hpp</includes>
    <includes local="no">SNPE/SNPEFactory.hpp</includes>
    <includes local="yes">selfdrive/modeld/runners/runmodel.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/tmp/openpilot/selfdrive/modeld/runners/snpemodel.h</label>
        <link refid="snpemodel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>DlSystem/ITensor.hpp</label>
      </node>
      <node id="11">
        <label>SNPE/SNPE.hpp</label>
      </node>
      <node id="6">
        <label>DlSystem/DlError.hpp</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="9">
        <label>DlSystem/IUserBuffer.hpp</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
      <node id="10">
        <label>DlSystem/IUserBufferFactory.hpp</label>
      </node>
      <node id="12">
        <label>SNPE/SNPEBuilder.hpp</label>
      </node>
      <node id="13">
        <label>SNPE/SNPEFactory.hpp</label>
      </node>
      <node id="8">
        <label>DlSystem/ITensorFactory.hpp</label>
      </node>
      <node id="5">
        <label>DlContainer/IDlContainer.hpp</label>
      </node>
      <node id="14">
        <label>selfdrive/modeld/runners/runmodel.h</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_s_n_p_e_model_input" prot="public">SNPEModelInput</innerclass>
    <innerclass refid="class_s_n_p_e_model" prot="public">SNPEModel</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdeprecated-declarations&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DlContainer/IDlContainer.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DlSystem/DlError.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DlSystem/ITensor.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DlSystem/ITensorFactory.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DlSystem/IUserBuffer.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DlSystem/IUserBufferFactory.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SNPE/SNPE.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SNPE/SNPEBuilder.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SNPE/SNPEFactory.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;selfdrive/modeld/runners/runmodel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="struct_s_n_p_e_model_input" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_n_p_e_model_input" kindref="compound">SNPEModelInput</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ModelInput<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;zdl::DlSystem::IUserBuffer&gt;<sp/>snpe_buffer;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="struct_s_n_p_e_model_input" kindref="compound">SNPEModelInput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*_buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_size,<sp/>std::unique_ptr&lt;zdl::DlSystem::IUserBuffer&gt;<sp/>_snpe_buffer)<sp/>:<sp/>ModelInput(_name,<sp/>_buffer,<sp/>_size),<sp/>snpe_buffer(std::move(_snpe_buffer))<sp/>{}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBuffer(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*_buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_size)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>ModelInput::setBuffer(_buffer,<sp/>_size);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(snpe_buffer-&gt;setBufferAddress(_buffer)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_s_n_p_e_model" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_n_p_e_model" kindref="compound">SNPEModel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>RunModel<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="class_s_n_p_e_model" kindref="compound">SNPEModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>path,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*_output,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_output_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>runtime,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_tf8<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>cl_context<sp/>context<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addInput(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>execute();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>std::string<sp/>model_data;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QCOM2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>zdl::DlSystem::Runtime_t<sp/>snpe_runtime;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>snpe<sp/>model<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;zdl::SNPE::SNPE&gt;<sp/>snpe;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>zdl::DlSystem::UserBufferMap<sp/>input_map;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>zdl::DlSystem::UserBufferMap<sp/>output_map;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;zdl::DlSystem::IUserBuffer&gt;<sp/>output_buffer;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_tf8;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_size;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/selfdrive/modeld/runners/snpemodel.h"/>
  </compounddef>
</doxygen>
