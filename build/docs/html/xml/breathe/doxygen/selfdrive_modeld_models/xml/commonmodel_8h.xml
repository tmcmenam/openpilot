<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="commonmodel_8h" kind="file" language="C++">
    <compoundname>commonmodel.h</compoundname>
    <includes local="no">cfloat</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">memory</includes>
    <includes local="no">CL/cl.h</includes>
    <includes local="yes">common/mat.h</includes>
    <includes local="yes">cereal/messaging/messaging.h</includes>
    <includes local="yes">selfdrive/modeld/transforms/loadyuv.h</includes>
    <includes local="yes">selfdrive/modeld/transforms/transform.h</includes>
    <includedby refid="driving_8h" local="yes">/tmp/openpilot/selfdrive/modeld/models/driving.h</includedby>
    <incdepgraph>
      <node id="8">
        <label>selfdrive/modeld/transforms/loadyuv.h</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/selfdrive/modeld/models/commonmodel.h</label>
        <link refid="commonmodel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>selfdrive/modeld/transforms/transform.h</label>
      </node>
      <node id="2">
        <label>cfloat</label>
      </node>
      <node id="5">
        <label>CL/cl.h</label>
      </node>
      <node id="7">
        <label>cereal/messaging/messaging.h</label>
      </node>
      <node id="3">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>common/mat.h</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/tmp/openpilot/selfdrive/modeld/models/commonmodel.h</label>
        <link refid="commonmodel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/tmp/openpilot/selfdrive/modeld/models/driving.h</label>
        <link refid="driving_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_model_frame" prot="public">ModelFrame</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="commonmodel_8h_1a16605039b395344c0b68b435e197b8bd" prot="public" static="no">
        <name>CL_USE_DEPRECATED_OPENCL_1_2_APIS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" line="8" column="9" bodyfile="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="commonmodel_8h_1a80bf6d1fd0debb7d28525ee08d7f9ac0" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool send_raw_pred</definition>
        <argsstring></argsstring>
        <name>send_raw_pred</name>
        <initializer>= getenv(&quot;SEND_RAW_PRED&quot;) != NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" line="20" column="12" bodyfile="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="commonmodel_8h_1a6a464d0419e201a1d08ae61885214cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void softmax</definition>
        <argsstring>(const float *input, float *output, size_t len)</argsstring>
        <name>softmax</name>
        <param>
          <type>const float *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" line="22" column="6" declfile="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="commonmodel_8h_1aa20134f5fe893e3014529d5152317711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float sigmoid</definition>
        <argsstring>(float input)</argsstring>
        <name>sigmoid</name>
        <param>
          <type>float</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" line="23" column="7" declfile="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" declline="23" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="commonmodel_8h_1aa29df93f1541ab2c42b75650f1d8e555" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>size</declname>
            <defname>size</defname>
          </param>
        </templateparamlist>
        <type>constexpr const kj::ArrayPtr&lt; const T &gt;</type>
        <definition>constexpr const kj::ArrayPtr&lt;const T&gt; to_kj_array_ptr</definition>
        <argsstring>(const std::array&lt; T, size &gt; &amp;arr)</argsstring>
        <name>to_kj_array_ptr</name>
        <param>
          <type>const std::array&lt; T, size &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" line="26" column="30" bodyfile="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h" bodystart="26" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfloat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CL_USE_DEPRECATED_OPENCL_1_2_APIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OpenCL/cl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/cl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/mat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/messaging/messaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;selfdrive/modeld/transforms/loadyuv.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;selfdrive/modeld/transforms/transform.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>send_raw_pred<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;SEND_RAW_PRED&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>softmax(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>input,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>output,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sigmoid(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>input);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>kj::ArrayPtr&lt;const<sp/>T&gt;<sp/>to_kj_array_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;T,<sp/>size&gt;<sp/>&amp;arr)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kj::ArrayPtr(arr.data(),<sp/>arr.size());</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_model_frame" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_model_frame" kindref="compound">ModelFrame</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="class_model_frame" kindref="compound">ModelFrame</ref>(cl_device_id<sp/>device_id,<sp/>cl_context<sp/>context);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>~<ref refid="class_model_frame" kindref="compound">ModelFrame</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>prepare(cl_mem<sp/>yuv_cl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_stride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_uv_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mat3&amp;<sp/>transform,<sp/>cl_mem<sp/>*output);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MODEL_WIDTH<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MODEL_HEIGHT<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MODEL_FRAME_SIZE<sp/>=<sp/>MODEL_WIDTH<sp/>*<sp/>MODEL_HEIGHT<sp/>*<sp/>3<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size<sp/>=<sp/>MODEL_FRAME_SIZE<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>Transform<sp/>transform;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>LoadYUVState<sp/>loadyuv;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>cl_command_queue<sp/>q;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>cl_mem<sp/>y_cl,<sp/>u_cl,<sp/>v_cl,<sp/>net_input_cl;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;float[]&gt;<sp/>input_frames;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/selfdrive/modeld/models/commonmodel.h"/>
  </compounddef>
</doxygen>
