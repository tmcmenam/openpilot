<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="dbcfile_8h" kind="file" language="C++">
    <compoundname>dbcfile.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">QObject</includes>
    <includes refid="dbc_8h" local="yes">tools/cabana/dbc/dbc.h</includes>
    <includedby refid="dbcmanager_8h" local="yes">/tmp/openpilot/tools/cabana/dbc/dbcmanager.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="13">
        <label>opendbc/can/common_dbc.h</label>
      </node>
      <node id="10">
        <label>QList</label>
      </node>
      <node id="11">
        <label>QMetaType</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="12">
        <label>QString</label>
      </node>
      <node id="9">
        <label>QColor</label>
      </node>
      <node id="4">
        <label>tools/cabana/dbc/dbc.h</label>
        <link refid="dbc_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/tmp/openpilot/tools/cabana/dbc/dbcfile.h</label>
        <link refid="dbcfile_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/tmp/openpilot/tools/cabana/dbc/dbcmanager.h</label>
        <link refid="dbcmanager_8h_source"/>
      </node>
      <node id="1">
        <label>/tmp/openpilot/tools/cabana/dbc/dbcfile.h</label>
        <link refid="dbcfile_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_d_b_c_file" prot="public">DBCFile</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dbcfile_8h_1aee77a6f1f1850d69a8e148fc59ef35ba" prot="public" static="no" mutable="no">
        <type>const QString</type>
        <definition>const QString AUTO_SAVE_EXTENSION</definition>
        <argsstring></argsstring>
        <name>AUTO_SAVE_EXTENSION</name>
        <initializer>= &quot;.tmp&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/cabana/dbc/dbcfile.h" line="8" column="15" bodyfile="/tmp/openpilot/tools/cabana/dbc/dbcfile.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/cabana/dbc/dbc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>AUTO_SAVE_EXTENSION<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.tmp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_d_b_c_file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_b_c_file" kindref="compound">DBCFile</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="class_d_b_c_file" kindref="compound">DBCFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;dbc_file_name,<sp/>QObject<sp/>*parent=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="class_d_b_c_file" kindref="compound">DBCFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;content,<sp/>QObject<sp/>*parent=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>~<ref refid="class_d_b_c_file" kindref="compound">DBCFile</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>save();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>saveAs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;new_filename);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoSave();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writeContents(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;fn);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanupAutoSaveFile();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>QString<sp/>generateDBC();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateMsg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_message_id" kindref="compound">MessageId</ref><sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name,<sp/>uint32_t<sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;comment);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeMsg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_message_id" kindref="compound">MessageId</ref><sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{<sp/>msgs.erase(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.address);<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;uint32_t,<sp/>cabana::Msg&gt;<sp/>&amp;getMessages()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msgs;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classcabana_1_1_msg" kindref="compound">cabana::Msg</ref><sp/>*msg(uint32_t<sp/>address);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="classcabana_1_1_msg" kindref="compound">cabana::Msg</ref><sp/>*msg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcabana_1_1_msg" kindref="compound">cabana::Msg</ref><sp/>*msg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_message_id" kindref="compound">MessageId</ref><sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.address);<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signalCount();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgCount()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msgs.size();<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>QString<sp/>name()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name_.isEmpty()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;untitled&quot;</highlight><highlight class="normal"><sp/>:<sp/>name_;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEmpty()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(signalCount()<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>name_.isEmpty();<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>QString<sp/>filename;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;content);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::map&lt;uint32_t,<sp/>cabana::Msg&gt;<sp/>msgs;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>QString<sp/>name_;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/tools/cabana/dbc/dbcfile.h"/>
  </compounddef>
</doxygen>
