<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="route_8h" kind="file" language="C++">
    <compoundname>route.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">set</includes>
    <includes local="no">string</includes>
    <includes local="no">QDateTime</includes>
    <includes local="no">QFutureSynchronizer</includes>
    <includes refid="framereader_8h" local="yes">tools/replay/framereader.h</includes>
    <includes refid="logreader_8h" local="yes">tools/replay/logreader.h</includes>
    <includes refid="util_8h" local="yes">tools/replay/util.h</includes>
    <includedby refid="replay_8h" local="yes">/tmp/openpilot/tools/replay/replay.h</includedby>
    <incdepgraph>
      <node id="14">
        <label>libavformat/avformat.h</label>
      </node>
      <node id="12">
        <label>atomic</label>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/tools/replay/route.h</label>
        <link refid="route_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>tools/replay/logreader.h</label>
        <link refid="logreader_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>system/camerad/cameras/camera_common.h</label>
      </node>
      <node id="6">
        <label>QDateTime</label>
      </node>
      <node id="18">
        <label>tools/replay/util.h</label>
        <link refid="util_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="11">
        <label>tools/replay/filereader.h</label>
        <link refid="filereader_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="7">
        <label>QFutureSynchronizer</label>
      </node>
      <node id="10">
        <label>cereal/visionipc/visionbuf.h</label>
      </node>
      <node id="13">
        <label>libavcodec/avcodec.h</label>
      </node>
      <node id="8">
        <label>tools/replay/framereader.h</label>
        <link refid="framereader_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>set</label>
      </node>
      <node id="16">
        <label>cereal/gen/cpp/log.capnp.h</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/tmp/openpilot/tools/replay/route.h</label>
        <link refid="route_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/tmp/openpilot/tools/replay/replay.h</label>
        <link refid="replay_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/tmp/openpilot/tools/replay/consoleui.h</label>
        <link refid="consoleui_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_route_identifier" prot="public">RouteIdentifier</innerclass>
    <innerclass refid="struct_segment_file" prot="public">SegmentFile</innerclass>
    <innerclass refid="class_route" prot="public">Route</innerclass>
    <innerclass refid="class_segment" prot="public">Segment</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDateTime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QFutureSynchronizer&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/replay/framereader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/replay/logreader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tools/replay/util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="struct_route_identifier" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_route_identifier" kindref="compound">RouteIdentifier</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>QString<sp/>dongle_id;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>QString<sp/>timestamp;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segment_id;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>QString<sp/>str;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="struct_segment_file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_segment_file" kindref="compound">SegmentFile</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>QString<sp/>rlog;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>QString<sp/>qlog;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>QString<sp/>road_cam;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>QString<sp/>driver_cam;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>QString<sp/>wide_road_cam;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>QString<sp/>qcamera;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_route" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_route" kindref="compound">Route</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="class_route" kindref="compound">Route</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;route,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;data_dir<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>load();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;name()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>route_.str;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDateTime<sp/>datetime()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date_time_;<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;dir()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_dir_;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_route_identifier" kindref="compound">RouteIdentifier</ref><sp/>&amp;identifier()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>route_;<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>SegmentFile&gt;<sp/>&amp;segments()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>segments_;<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_segment_file" kindref="compound">SegmentFile</ref><sp/>&amp;at(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>segments_.at(n);<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_route_identifier" kindref="compound">RouteIdentifier</ref><sp/>parseRoute(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;str);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadFromLocal();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadFromServer();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadFromJson(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;json);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addFileToSegment(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seg_num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;file);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="struct_route_identifier" kindref="compound">RouteIdentifier</ref><sp/>route_<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>QString<sp/>data_dir_;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>std::map&lt;int,<sp/>SegmentFile&gt;<sp/>segments_;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>QDateTime<sp/>date_time_;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_segment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_segment" kindref="compound">Segment</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="class_segment" kindref="compound">Segment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_segment_file" kindref="compound">SegmentFile</ref><sp/>&amp;files,<sp/>uint32_t<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;cereal::Event::Which&gt;<sp/>&amp;allow<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>~<ref refid="class_segment" kindref="compound">Segment</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLoaded()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!loading_<sp/>&amp;&amp;<sp/>!abort_;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seg_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;LogReader&gt;<sp/>log;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;FrameReader&gt;<sp/>frames[MAX_CAMERAS]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">signals:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadFinished(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadFile(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>file);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>std::atomic&lt;bool&gt;<sp/>abort_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>std::atomic&lt;int&gt;<sp/>loading_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>QFutureSynchronizer&lt;void&gt;<sp/>synchronizer_;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>uint32_t<sp/>flags;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>std::set&lt;cereal::Event::Which&gt;<sp/>allow;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/tools/replay/route.h"/>
  </compounddef>
</doxygen>
