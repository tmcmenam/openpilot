<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_camera_server" kind="class" language="C++" prot="public">
    <compoundname>CameraServer</compoundname>
    <innerclass refid="struct_camera_server_1_1_camera" prot="protected">CameraServer::Camera</innerclass>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_camera_server_1a10e8a3c66510e32ab78210813068639d" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_camera_server_1_1_camera" kindref="compound">Camera</ref></type>
        <definition>Camera CameraServer::cameras_[MAX_CAMERAS]</definition>
        <argsstring>[MAX_CAMERAS]</argsstring>
        <name>cameras_</name>
        <initializer>= {
      {.type = RoadCam, .stream_type = VISION_STREAM_ROAD},
      {.type = DriverCam, .stream_type = VISION_STREAM_DRIVER},
      {.type = WideRoadCam, .stream_type = VISION_STREAM_WIDE_ROAD},
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="38" column="10" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_camera_server_1aabe1b5200b10ad6258d32ff3be24134a" prot="protected" static="no" mutable="no">
        <type>std::atomic&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; CameraServer::publishing_</definition>
        <argsstring></argsstring>
        <name>publishing_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="43" column="15" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_camera_server_1a43c6025861425ee4d2d79a6865f23ac1" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; VisionIpcServer &gt;</type>
        <definition>std::unique_ptr&lt;VisionIpcServer&gt; CameraServer::vipc_server_</definition>
        <argsstring></argsstring>
        <name>vipc_server_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="44" column="19" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_camera_server_1a4ba757c93df4261d5baf80e786d22776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CameraServer::CameraServer</definition>
        <argsstring>(std::pair&lt; int, int &gt; camera_size[MAX_CAMERAS]=nullptr)</argsstring>
        <name>CameraServer</name>
        <param>
          <type>std::pair&lt; int, int &gt;</type>
          <declname>camera_size</declname>
          <array>[MAX_CAMERAS]</array>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="18" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_camera_server_1aa14335316e1a34e469cb1fa9fe6dc5b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CameraServer::~CameraServer</definition>
        <argsstring>()</argsstring>
        <name>~CameraServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="19" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_camera_server_1a99faced60873fe85bcc822406e6ede79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CameraServer::pushFrame</definition>
        <argsstring>(CameraType type, FrameReader *fr, const cereal::EncodeIndex::Reader &amp;eidx)</argsstring>
        <name>pushFrame</name>
        <param>
          <type>CameraType</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_frame_reader" kindref="compound">FrameReader</ref> *</type>
          <declname>fr</declname>
        </param>
        <param>
          <type>const cereal::EncodeIndex::Reader &amp;</type>
          <declname>eidx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="20" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_camera_server_1abb24d7b1cbe7aa8450528d16b5aaa8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CameraServer::waitForSent</definition>
        <argsstring>()</argsstring>
        <name>waitForSent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="21" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_camera_server_1a3126de781ff90f4b830a1e46ede10ce0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CameraServer::startVipcServer</definition>
        <argsstring>()</argsstring>
        <name>startVipcServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="35" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_camera_server_1a54023fc820887315fe1854ed69b6b322" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CameraServer::cameraThread</definition>
        <argsstring>(Camera &amp;cam)</argsstring>
        <name>cameraThread</name>
        <param>
          <type><ref refid="struct_camera_server_1_1_camera" kindref="compound">Camera</ref> &amp;</type>
          <declname>cam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="36" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>CameraServer::Camera</label>
        <link refid="struct_camera_server_1_1_camera"/>
      </node>
      <node id="1">
        <label>CameraServer</label>
        <link refid="class_camera_server"/>
        <childnode refid="2" relation="usage">
          <edgelabel>cameras_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/tmp/openpilot/tools/replay/camera.h" line="16" column="19" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="16" bodyend="45"/>
    <listofallmembers>
      <member refid="class_camera_server_1a10e8a3c66510e32ab78210813068639d" prot="protected" virt="non-virtual"><scope>CameraServer</scope><name>cameras_</name></member>
      <member refid="class_camera_server_1a4ba757c93df4261d5baf80e786d22776" prot="public" virt="non-virtual"><scope>CameraServer</scope><name>CameraServer</name></member>
      <member refid="class_camera_server_1a54023fc820887315fe1854ed69b6b322" prot="protected" virt="non-virtual"><scope>CameraServer</scope><name>cameraThread</name></member>
      <member refid="class_camera_server_1aabe1b5200b10ad6258d32ff3be24134a" prot="protected" virt="non-virtual"><scope>CameraServer</scope><name>publishing_</name></member>
      <member refid="class_camera_server_1a99faced60873fe85bcc822406e6ede79" prot="public" virt="non-virtual"><scope>CameraServer</scope><name>pushFrame</name></member>
      <member refid="class_camera_server_1a3126de781ff90f4b830a1e46ede10ce0" prot="protected" virt="non-virtual"><scope>CameraServer</scope><name>startVipcServer</name></member>
      <member refid="class_camera_server_1a43c6025861425ee4d2d79a6865f23ac1" prot="protected" virt="non-virtual"><scope>CameraServer</scope><name>vipc_server_</name></member>
      <member refid="class_camera_server_1abb24d7b1cbe7aa8450528d16b5aaa8d9" prot="public" virt="non-virtual"><scope>CameraServer</scope><name>waitForSent</name></member>
      <member refid="class_camera_server_1aa14335316e1a34e469cb1fa9fe6dc5b1" prot="public" virt="non-virtual"><scope>CameraServer</scope><name>~CameraServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
