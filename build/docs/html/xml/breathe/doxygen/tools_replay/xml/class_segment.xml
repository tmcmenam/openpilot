<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_segment" kind="class" language="C++" prot="public">
    <compoundname>Segment</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_segment_1a2d4fbc0e624e8ece8d565e18e6b58075" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Segment::seg_num</definition>
        <argsstring></argsstring>
        <name>seg_num</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="62" column="13" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_segment_1a985b4fca532eae775907b9b32a7caacd" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_log_reader" kindref="compound">LogReader</ref> &gt;</type>
        <definition>std::unique_ptr&lt;LogReader&gt; Segment::log</definition>
        <argsstring></argsstring>
        <name>log</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="63" column="19" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_segment_1a52b1e15a4c22a49f7bcda33bfc6939b9" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_frame_reader" kindref="compound">FrameReader</ref> &gt;</type>
        <definition>std::unique_ptr&lt;FrameReader&gt; Segment::frames[MAX_CAMERAS]</definition>
        <argsstring>[MAX_CAMERAS]</argsstring>
        <name>frames</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="64" column="19" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_segment_1a6d36451cfb0df13cd5846e1bc6667c6a" prot="protected" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; Segment::abort_</definition>
        <argsstring></argsstring>
        <name>abort_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="72" column="15" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_segment_1a15f2c6b1416eabe53f4a26f8a3257817" prot="protected" static="no" mutable="no">
        <type>std::atomic&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; Segment::loading_</definition>
        <argsstring></argsstring>
        <name>loading_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="73" column="15" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_segment_1a6e2ce40936050ba8737a1bdddb33ca38" prot="protected" static="no" mutable="no">
        <type>QFutureSynchronizer&lt; void &gt;</type>
        <definition>QFutureSynchronizer&lt;void&gt; Segment::synchronizer_</definition>
        <argsstring></argsstring>
        <name>synchronizer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="74" column="23" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_segment_1a6818d025f9f2eea27bfec83dd880c3df" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t Segment::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="75" column="12" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_segment_1a3a634720c52873dc2d77c04fd831e2ba" prot="protected" static="no" mutable="no">
        <type>std::set&lt; cereal::Event::Which &gt;</type>
        <definition>std::set&lt;cereal::Event::Which&gt; Segment::allow</definition>
        <argsstring></argsstring>
        <name>allow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="76" column="12" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_segment_1abcba7b1c465d5a1df64740903aebf631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Segment::Segment</definition>
        <argsstring>(int n, const SegmentFile &amp;files, uint32_t flags, const std::set&lt; cereal::Event::Which &gt; &amp;allow={})</argsstring>
        <name>Segment</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="struct_segment_file" kindref="compound">SegmentFile</ref> &amp;</type>
          <declname>files</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const std::set&lt; cereal::Event::Which &gt; &amp;</type>
          <declname>allow</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="58" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_segment_1a76b45a453304f1f485e3bc2fcad58b59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Segment::~Segment</definition>
        <argsstring>()</argsstring>
        <name>~Segment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="59" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_segment_1ab624d7ca492e44f9d1142f917382e4ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Segment::isLoaded</definition>
        <argsstring>() const</argsstring>
        <name>isLoaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="60" column="15" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="signal">
      <memberdef kind="signal" id="class_segment_1a986d90a6c9cc4600e52236c646388fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Segment::loadFinished</definition>
        <argsstring>(bool success)</argsstring>
        <name>loadFinished</name>
        <param>
          <type>bool</type>
          <declname>success</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="67" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_segment_1a56a927ff3177fc66429c6e0153087f15" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Segment::loadFile</definition>
        <argsstring>(int id, const std::string file)</argsstring>
        <name>loadFile</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/route.h" line="70" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Segment</label>
        <link refid="class_segment"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Segment</label>
        <link refid="class_segment"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
    </collaborationgraph>
    <location file="/tmp/openpilot/tools/replay/route.h" line="54" column="29" bodyfile="/tmp/openpilot/tools/replay/route.h" bodystart="54" bodyend="77"/>
    <listofallmembers>
      <member refid="class_segment_1a6d36451cfb0df13cd5846e1bc6667c6a" prot="protected" virt="non-virtual"><scope>Segment</scope><name>abort_</name></member>
      <member refid="class_segment_1a3a634720c52873dc2d77c04fd831e2ba" prot="protected" virt="non-virtual"><scope>Segment</scope><name>allow</name></member>
      <member refid="class_segment_1a6818d025f9f2eea27bfec83dd880c3df" prot="protected" virt="non-virtual"><scope>Segment</scope><name>flags</name></member>
      <member refid="class_segment_1a52b1e15a4c22a49f7bcda33bfc6939b9" prot="public" virt="non-virtual"><scope>Segment</scope><name>frames</name></member>
      <member refid="class_segment_1ab624d7ca492e44f9d1142f917382e4ce" prot="public" virt="non-virtual"><scope>Segment</scope><name>isLoaded</name></member>
      <member refid="class_segment_1a56a927ff3177fc66429c6e0153087f15" prot="protected" virt="non-virtual"><scope>Segment</scope><name>loadFile</name></member>
      <member refid="class_segment_1a986d90a6c9cc4600e52236c646388fb1" prot="public" virt="non-virtual"><scope>Segment</scope><name>loadFinished</name></member>
      <member refid="class_segment_1a15f2c6b1416eabe53f4a26f8a3257817" prot="protected" virt="non-virtual"><scope>Segment</scope><name>loading_</name></member>
      <member refid="class_segment_1a985b4fca532eae775907b9b32a7caacd" prot="public" virt="non-virtual"><scope>Segment</scope><name>log</name></member>
      <member refid="class_segment_1a2d4fbc0e624e8ece8d565e18e6b58075" prot="public" virt="non-virtual"><scope>Segment</scope><name>seg_num</name></member>
      <member refid="class_segment_1abcba7b1c465d5a1df64740903aebf631" prot="public" virt="non-virtual"><scope>Segment</scope><name>Segment</name></member>
      <member refid="class_segment_1a6e2ce40936050ba8737a1bdddb33ca38" prot="protected" virt="non-virtual"><scope>Segment</scope><name>synchronizer_</name></member>
      <member refid="class_segment_1a76b45a453304f1f485e3bc2fcad58b59" prot="public" virt="non-virtual"><scope>Segment</scope><name>~Segment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
