<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="struct_camera_server_1_1_camera" kind="struct" language="C++" prot="protected">
    <compoundname>CameraServer::Camera</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_camera_server_1_1_camera_1aea4374297fdb25a3c48d0eeedc0fe960" prot="public" static="no" mutable="no">
        <type>CameraType</type>
        <definition>CameraType CameraServer::Camera::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="25" column="16" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_camera_server_1_1_camera_1ac9ae9aa771d9a77675bfb397af9c7d2c" prot="public" static="no" mutable="no">
        <type>VisionStreamType</type>
        <definition>VisionStreamType CameraServer::Camera::stream_type</definition>
        <argsstring></argsstring>
        <name>stream_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="26" column="22" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_camera_server_1_1_camera_1a86c5a5b072ba7a7ce5746bf1d1d2e3bd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CameraServer::Camera::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="27" column="9" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_camera_server_1_1_camera_1a785c1da718c44b934fbe684cf5c65baf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CameraServer::Camera::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="28" column="9" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_camera_server_1_1_camera_1a463b8d83cf47ee12d36eca36251606f9" prot="public" static="no" mutable="no">
        <type>std::thread</type>
        <definition>std::thread CameraServer::Camera::thread</definition>
        <argsstring></argsstring>
        <name>thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="29" column="17" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_camera_server_1_1_camera_1a9e311352ad6fee2b4770996de9557b94" prot="public" static="no" mutable="no">
        <type>SafeQueue&lt; std::pair&lt; <ref refid="class_frame_reader" kindref="compound">FrameReader</ref> *, const cereal::EncodeIndex::Reader &gt; &gt;</type>
        <definition>SafeQueue&lt;std::pair&lt;FrameReader*, const cereal::EncodeIndex::Reader&gt; &gt; CameraServer::Camera::queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="30" column="15" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_camera_server_1_1_camera_1a68d1ec3e8510b414e9ba5b1934243505" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CameraServer::Camera::cached_id</definition>
        <argsstring></argsstring>
        <name>cached_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="31" column="9" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_camera_server_1_1_camera_1af62ed51ec83a1d1c97274faf2fefcffc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int CameraServer::Camera::cached_seg</definition>
        <argsstring></argsstring>
        <name>cached_seg</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="32" column="9" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_camera_server_1_1_camera_1a912e9d49363b9fd4609b2d04f692a334" prot="public" static="no" mutable="no">
        <type>VisionBuf *</type>
        <definition>VisionBuf* CameraServer::Camera::cached_buf</definition>
        <argsstring></argsstring>
        <name>cached_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/tools/replay/camera.h" line="33" column="16" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/openpilot/tools/replay/camera.h" line="24" column="15" bodyfile="/tmp/openpilot/tools/replay/camera.h" bodystart="24" bodyend="34"/>
    <listofallmembers>
      <member refid="struct_camera_server_1_1_camera_1a912e9d49363b9fd4609b2d04f692a334" prot="public" virt="non-virtual"><scope>CameraServer::Camera</scope><name>cached_buf</name></member>
      <member refid="struct_camera_server_1_1_camera_1a68d1ec3e8510b414e9ba5b1934243505" prot="public" virt="non-virtual"><scope>CameraServer::Camera</scope><name>cached_id</name></member>
      <member refid="struct_camera_server_1_1_camera_1af62ed51ec83a1d1c97274faf2fefcffc" prot="public" virt="non-virtual"><scope>CameraServer::Camera</scope><name>cached_seg</name></member>
      <member refid="struct_camera_server_1_1_camera_1a785c1da718c44b934fbe684cf5c65baf" prot="public" virt="non-virtual"><scope>CameraServer::Camera</scope><name>height</name></member>
      <member refid="struct_camera_server_1_1_camera_1a9e311352ad6fee2b4770996de9557b94" prot="public" virt="non-virtual"><scope>CameraServer::Camera</scope><name>queue</name></member>
      <member refid="struct_camera_server_1_1_camera_1ac9ae9aa771d9a77675bfb397af9c7d2c" prot="public" virt="non-virtual"><scope>CameraServer::Camera</scope><name>stream_type</name></member>
      <member refid="struct_camera_server_1_1_camera_1a463b8d83cf47ee12d36eca36251606f9" prot="public" virt="non-virtual"><scope>CameraServer::Camera</scope><name>thread</name></member>
      <member refid="struct_camera_server_1_1_camera_1aea4374297fdb25a3c48d0eeedc0fe960" prot="public" virt="non-virtual"><scope>CameraServer::Camera</scope><name>type</name></member>
      <member refid="struct_camera_server_1_1_camera_1a86c5a5b072ba7a7ce5746bf1d1d2e3bd" prot="public" virt="non-virtual"><scope>CameraServer::Camera</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
