<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="loggerd_8h" kind="file" language="C++">
    <compoundname>loggerd.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="yes">cereal/messaging/messaging.h</includes>
    <includes local="yes">cereal/services.h</includes>
    <includes local="yes">cereal/visionipc/visionipc_client.h</includes>
    <includes local="yes">system/camerad/cameras/camera_common.h</includes>
    <includes local="yes">system/hardware/hw.h</includes>
    <includes local="yes">common/params.h</includes>
    <includes local="yes">common/swaglog.h</includes>
    <includes local="yes">common/util.h</includes>
    <includes refid="logger_8h" local="yes">system/loggerd/logger.h</includes>
    <incdepgraph>
      <node id="6">
        <label>system/camerad/cameras/camera_common.h</label>
      </node>
      <node id="14">
        <label>cstdint</label>
      </node>
      <node id="19">
        <label>kj/array.h</label>
      </node>
      <node id="8">
        <label>common/params.h</label>
      </node>
      <node id="18">
        <label>capnp/serialize.h</label>
      </node>
      <node id="13">
        <label>cassert</label>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="10">
        <label>common/util.h</label>
      </node>
      <node id="9">
        <label>common/swaglog.h</label>
      </node>
      <node id="4">
        <label>cereal/services.h</label>
      </node>
      <node id="3">
        <label>cereal/messaging/messaging.h</label>
      </node>
      <node id="12">
        <label>pthread.h</label>
      </node>
      <node id="15">
        <label>cstdio</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
      <node id="1">
        <label>/tmp/openpilot/system/loggerd/loggerd.h</label>
        <link refid="loggerd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cereal/visionipc/visionipc_client.h</label>
      </node>
      <node id="7">
        <label>system/hardware/hw.h</label>
      </node>
      <node id="11">
        <label>system/loggerd/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_encoder_info" prot="public">EncoderInfo</innerclass>
    <innerclass refid="class_log_camera_info" prot="public">LogCameraInfo</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="loggerd_8h_1a2475aafb75a03a6d1dc170f3b840331f" prot="public" static="no">
        <name>NO_CAMERA_PATIENCE</name>
        <initializer>500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="21" column="9" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="loggerd_8h_1ac2f2a17a6a47b62c5d9b228a9af8db4c" prot="public" static="no">
        <name>INIT_ENCODE_FUNCTIONS</name>
        <param><defname>encode_type</defname></param>
        <initializer>  .get_encode_data_func = &amp;cereal::Event::Reader::get##encode_type##Data, \
  .set_encode_idx_func = &amp;cereal::Event::Builder::set##encode_type##Idx,  \
  .init_encode_data_func = &amp;cereal::Event::Builder::init##encode_type##Data</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="23" column="9" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="loggerd_8h_1a32e1300c170ae918b7102b472832a777" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int MAIN_FPS</definition>
        <argsstring></argsstring>
        <name>MAIN_FPS</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="16" column="15" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a8e1ad04e860e371760d66b28ea52c14a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAIN_BITRATE</definition>
        <argsstring></argsstring>
        <name>MAIN_BITRATE</name>
        <initializer>= 1e7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="17" column="11" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1ab33c6c7c9282649edd530060cbaf8bca" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int LIVESTREAM_BITRATE</definition>
        <argsstring></argsstring>
        <name>LIVESTREAM_BITRATE</name>
        <initializer>= 1e6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="18" column="11" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a8a671e874d49007182992cd8b4b5c932" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int QCAM_BITRATE</definition>
        <argsstring></argsstring>
        <name>QCAM_BITRATE</name>
        <initializer>= 256000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="19" column="11" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a0714a31125da927c043457899aaf6b6d" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool LOGGERD_TEST</definition>
        <argsstring></argsstring>
        <name>LOGGERD_TEST</name>
        <initializer>= getenv(&quot;LOGGERD_TEST&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="28" column="12" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a42698f672f2ae5437baa1d775b21d2fc" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int SEGMENT_LENGTH</definition>
        <argsstring></argsstring>
        <name>SEGMENT_LENGTH</name>
        <initializer>= LOGGERD_TEST ? atoi(getenv(&quot;LOGGERD_SEGMENT_LENGTH&quot;)) : 60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="29" column="11" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a1c649a74c23418268fc20c12086e11d1" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char PRESERVE_ATTR_NAME[]</definition>
        <argsstring>[]</argsstring>
        <name>PRESERVE_ATTR_NAME</name>
        <initializer>= &quot;user.preserve&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="31" column="16" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1aadd9ab9c65ca4687807ee768e8585593" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char PRESERVE_ATTR_VALUE</definition>
        <argsstring></argsstring>
        <name>PRESERVE_ATTR_VALUE</name>
        <initializer>= &apos;1&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="32" column="16" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a35f590d24c3fe7152fae636f86a4daeb" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref></type>
        <definition>const EncoderInfo main_road_encoder_info</definition>
        <argsstring></argsstring>
        <name>main_road_encoder_info</name>
        <initializer>= {
  .publish_name = &quot;roadEncodeData&quot;,
  .filename = &quot;fcamera.hevc&quot;,
  INIT_ENCODE_FUNCTIONS(RoadEncode),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="58" column="19" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a0d59dec6359dc3ae1ea5c3ed746a2c07" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref></type>
        <definition>const EncoderInfo main_wide_road_encoder_info</definition>
        <argsstring></argsstring>
        <name>main_wide_road_encoder_info</name>
        <initializer>= {
  .publish_name = &quot;wideRoadEncodeData&quot;,
  .filename = &quot;ecamera.hevc&quot;,
  INIT_ENCODE_FUNCTIONS(WideRoadEncode),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="64" column="19" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1adc35af21b53fc7c15efa58ad97bf0235" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref></type>
        <definition>const EncoderInfo main_driver_encoder_info</definition>
        <argsstring></argsstring>
        <name>main_driver_encoder_info</name>
        <initializer>= {
  .publish_name = &quot;driverEncodeData&quot;,
  .filename = &quot;dcamera.hevc&quot;,
  .record = Params().getBool(&quot;RecordFront&quot;),
  INIT_ENCODE_FUNCTIONS(DriverEncode),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="70" column="19" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a0563286535f61a2919729ab7c3100589" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref></type>
        <definition>const EncoderInfo stream_road_encoder_info</definition>
        <argsstring></argsstring>
        <name>stream_road_encoder_info</name>
        <initializer>= {
  .publish_name = &quot;livestreamRoadEncodeData&quot;,
  .encode_type = cereal::EncodeIndex::Type::QCAMERA_H264,
  .record = false,
  .bitrate = LIVESTREAM_BITRATE,
  INIT_ENCODE_FUNCTIONS(LivestreamRoadEncode),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="77" column="19" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a4684fd980ef6b2619784210be83f1b7a" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref></type>
        <definition>const EncoderInfo stream_wide_road_encoder_info</definition>
        <argsstring></argsstring>
        <name>stream_wide_road_encoder_info</name>
        <initializer>= {
  .publish_name = &quot;livestreamWideRoadEncodeData&quot;,
  .encode_type = cereal::EncodeIndex::Type::QCAMERA_H264,
  .record = false,
  .bitrate = LIVESTREAM_BITRATE,
  INIT_ENCODE_FUNCTIONS(LivestreamWideRoadEncode),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="85" column="19" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a705df80ae3abd1bd97dccd947475f3f5" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref></type>
        <definition>const EncoderInfo stream_driver_encoder_info</definition>
        <argsstring></argsstring>
        <name>stream_driver_encoder_info</name>
        <initializer>= {
  .publish_name = &quot;livestreamDriverEncodeData&quot;,
  .encode_type = cereal::EncodeIndex::Type::QCAMERA_H264,
  .record = false,
  .bitrate = LIVESTREAM_BITRATE,
  INIT_ENCODE_FUNCTIONS(LivestreamDriverEncode),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="93" column="19" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a99965663ba0544b23e1bb2f78c3dc49e" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref></type>
        <definition>const EncoderInfo qcam_encoder_info</definition>
        <argsstring></argsstring>
        <name>qcam_encoder_info</name>
        <initializer>= {
  .publish_name = &quot;qRoadEncodeData&quot;,
  .filename = &quot;qcamera.ts&quot;,
  .bitrate = QCAM_BITRATE,
  .encode_type = cereal::EncodeIndex::Type::QCAMERA_H264,
  .frame_width = 526,
  .frame_height = 330,
  INIT_ENCODE_FUNCTIONS(QRoadEncode),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="101" column="19" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a644ee9be862cd41e5f3432350e96e0d2" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref></type>
        <definition>const LogCameraInfo road_camera_info</definition>
        <argsstring></argsstring>
        <name>road_camera_info</name>
        <initializer>{
  .thread_name = &quot;road_cam_encoder&quot;,
  .type = RoadCam,
  .stream_type = VISION_STREAM_ROAD,
  .encoder_infos = {main_road_encoder_info, qcam_encoder_info}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="111" column="21" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a5743c1efdc08608fa26151ac0c5db23a" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref></type>
        <definition>const LogCameraInfo wide_road_camera_info</definition>
        <argsstring></argsstring>
        <name>wide_road_camera_info</name>
        <initializer>{
  .thread_name = &quot;wide_road_cam_encoder&quot;,
  .type = WideRoadCam,
  .stream_type = VISION_STREAM_WIDE_ROAD,
  .encoder_infos = {main_wide_road_encoder_info}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="118" column="21" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1adc914be6ea8f38135364af089b02fb99" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref></type>
        <definition>const LogCameraInfo driver_camera_info</definition>
        <argsstring></argsstring>
        <name>driver_camera_info</name>
        <initializer>{
  .thread_name = &quot;driver_cam_encoder&quot;,
  .type = DriverCam,
  .stream_type = VISION_STREAM_DRIVER,
  .encoder_infos = {main_driver_encoder_info}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="125" column="21" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a2876281b05a9ae4a00490b2eb1129700" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref></type>
        <definition>const LogCameraInfo stream_road_camera_info</definition>
        <argsstring></argsstring>
        <name>stream_road_camera_info</name>
        <initializer>{
  .thread_name = &quot;road_cam_encoder&quot;,
  .type = RoadCam,
  .stream_type = VISION_STREAM_ROAD,
  .encoder_infos = {stream_road_encoder_info}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="132" column="21" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a3933a9386cf2541be5a8723dab2683f3" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref></type>
        <definition>const LogCameraInfo stream_wide_road_camera_info</definition>
        <argsstring></argsstring>
        <name>stream_wide_road_camera_info</name>
        <initializer>{
  .thread_name = &quot;wide_road_cam_encoder&quot;,
  .type = WideRoadCam,
  .stream_type = VISION_STREAM_WIDE_ROAD,
  .encoder_infos = {stream_wide_road_encoder_info}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="139" column="21" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1a5f1f72dfce1d89f8a1294fa7093d9ae2" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref></type>
        <definition>const LogCameraInfo stream_driver_camera_info</definition>
        <argsstring></argsstring>
        <name>stream_driver_camera_info</name>
        <initializer>{
  .thread_name = &quot;driver_cam_encoder&quot;,
  .type = DriverCam,
  .stream_type = VISION_STREAM_DRIVER,
  .encoder_infos = {stream_driver_encoder_info}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="146" column="21" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1aec60e296cab1228846906178e5e55919" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref></type>
        <definition>const LogCameraInfo cameras_logged[]</definition>
        <argsstring>[]</argsstring>
        <name>cameras_logged</name>
        <initializer>= {road_camera_info, wide_road_camera_info, driver_camera_info}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="153" column="21" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="loggerd_8h_1ab5091925bd1a2ec8d3eafcdae9920b08" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref></type>
        <definition>const LogCameraInfo stream_cameras_logged[]</definition>
        <argsstring>[]</argsstring>
        <name>stream_cameras_logged</name>
        <initializer>= {stream_road_camera_info, stream_wide_road_camera_info, stream_driver_camera_info}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/openpilot/system/loggerd/loggerd.h" line="154" column="21" bodyfile="/tmp/openpilot/system/loggerd/loggerd.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/messaging/messaging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/services.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/visionipc/visionipc_client.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/camerad/cameras/camera_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/hardware/hw.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/params.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/swaglog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system/loggerd/logger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAIN_FPS<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAIN_BITRATE<sp/>=<sp/>1e7;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LIVESTREAM_BITRATE<sp/>=<sp/>1e6;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QCAM_BITRATE<sp/>=<sp/>256000;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NO_CAMERA_PATIENCE<sp/>500<sp/><sp/>//<sp/>fall<sp/>back<sp/>to<sp/>time-based<sp/>rotation<sp/>if<sp/>all<sp/>cameras<sp/>are<sp/>dead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INIT_ENCODE_FUNCTIONS(encode_type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/>.get_encode_data_func<sp/>=<sp/>&amp;cereal::Event::Reader::get##encode_type##Data,<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/>.set_encode_idx_func<sp/>=<sp/>&amp;cereal::Event::Builder::set##encode_type##Idx,<sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/>.init_encode_data_func<sp/>=<sp/>&amp;cereal::Event::Builder::init##encode_type##Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LOGGERD_TEST<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;LOGGERD_TEST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SEGMENT_LENGTH<sp/>=<sp/>LOGGERD_TEST<sp/>?<sp/>atoi(getenv(</highlight><highlight class="stringliteral">&quot;LOGGERD_SEGMENT_LENGTH&quot;</highlight><highlight class="normal">))<sp/>:<sp/>60;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>PRESERVE_ATTR_NAME[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;user.preserve&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>PRESERVE_ATTR_VALUE<sp/>=<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33" refid="class_encoder_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*publish_name;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>record<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_width<sp/>=<sp/>1928;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_height<sp/>=<sp/>1208;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fps<sp/>=<sp/>MAIN_FPS;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitrate<sp/>=<sp/>MAIN_BITRATE;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>cereal::EncodeIndex::Type<sp/>encode_type<sp/>=<sp/>Hardware::PC()<sp/>?<sp/>cereal::EncodeIndex::Type::BIG_BOX_LOSSLESS</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>cereal::EncodeIndex::Type::FULL_H_E_V_C;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>::cereal::EncodeData::Reader<sp/>(cereal::Event::Reader::*get_encode_data_func)()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>void<sp/>(cereal::Event::Builder::*set_encode_idx_func)(::cereal::EncodeIndex::Reader);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>cereal::EncodeData::Builder<sp/>(cereal::Event::Builder::*init_encode_data_func)();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_log_camera_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*thread_name;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fps<sp/>=<sp/>MAIN_FPS;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>CameraType<sp/>type;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>VisionStreamType<sp/>stream_type;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>std::vector&lt;EncoderInfo&gt;<sp/>encoder_infos;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref><sp/>main_road_encoder_info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>.publish_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;roadEncodeData&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>.filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fcamera.hevc&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>INIT_ENCODE_FUNCTIONS(RoadEncode),</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref><sp/>main_wide_road_encoder_info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>.publish_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;wideRoadEncodeData&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>.filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ecamera.hevc&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>INIT_ENCODE_FUNCTIONS(WideRoadEncode),</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref><sp/>main_driver_encoder_info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>.publish_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;driverEncodeData&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>.filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dcamera.hevc&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>.record<sp/>=<sp/>Params().getBool(</highlight><highlight class="stringliteral">&quot;RecordFront&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>INIT_ENCODE_FUNCTIONS(DriverEncode),</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref><sp/>stream_road_encoder_info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>.publish_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;livestreamRoadEncodeData&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>.encode_type<sp/>=<sp/>cereal::EncodeIndex::Type::QCAMERA_H264,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>.record<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>.bitrate<sp/>=<sp/>LIVESTREAM_BITRATE,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>INIT_ENCODE_FUNCTIONS(LivestreamRoadEncode),</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref><sp/>stream_wide_road_encoder_info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>.publish_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;livestreamWideRoadEncodeData&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>.encode_type<sp/>=<sp/>cereal::EncodeIndex::Type::QCAMERA_H264,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>.record<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>.bitrate<sp/>=<sp/>LIVESTREAM_BITRATE,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>INIT_ENCODE_FUNCTIONS(LivestreamWideRoadEncode),</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref><sp/>stream_driver_encoder_info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>.publish_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;livestreamDriverEncodeData&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>.encode_type<sp/>=<sp/>cereal::EncodeIndex::Type::QCAMERA_H264,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>.record<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>.bitrate<sp/>=<sp/>LIVESTREAM_BITRATE,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>INIT_ENCODE_FUNCTIONS(LivestreamDriverEncode),</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_encoder_info" kindref="compound">EncoderInfo</ref><sp/>qcam_encoder_info<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>.publish_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;qRoadEncodeData&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>.filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;qcamera.ts&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>.bitrate<sp/>=<sp/>QCAM_BITRATE,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>.encode_type<sp/>=<sp/>cereal::EncodeIndex::Type::QCAMERA_H264,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>.frame_width<sp/>=<sp/>526,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>.frame_height<sp/>=<sp/>330,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>INIT_ENCODE_FUNCTIONS(QRoadEncode),</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref><sp/>road_camera_info{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>.thread_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;road_cam_encoder&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>.type<sp/>=<sp/>RoadCam,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>.stream_type<sp/>=<sp/>VISION_STREAM_ROAD,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>.encoder_infos<sp/>=<sp/>{main_road_encoder_info,<sp/>qcam_encoder_info}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref><sp/>wide_road_camera_info{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>.thread_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;wide_road_cam_encoder&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>.type<sp/>=<sp/>WideRoadCam,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>.stream_type<sp/>=<sp/>VISION_STREAM_WIDE_ROAD,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>.encoder_infos<sp/>=<sp/>{main_wide_road_encoder_info}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref><sp/>driver_camera_info{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>.thread_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;driver_cam_encoder&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>.type<sp/>=<sp/>DriverCam,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>.stream_type<sp/>=<sp/>VISION_STREAM_DRIVER,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>.encoder_infos<sp/>=<sp/>{main_driver_encoder_info}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref><sp/>stream_road_camera_info{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>.thread_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;road_cam_encoder&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>.type<sp/>=<sp/>RoadCam,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>.stream_type<sp/>=<sp/>VISION_STREAM_ROAD,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>.encoder_infos<sp/>=<sp/>{stream_road_encoder_info}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref><sp/>stream_wide_road_camera_info{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>.thread_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;wide_road_cam_encoder&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>.type<sp/>=<sp/>WideRoadCam,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>.stream_type<sp/>=<sp/>VISION_STREAM_WIDE_ROAD,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>.encoder_infos<sp/>=<sp/>{stream_wide_road_encoder_info}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref><sp/>stream_driver_camera_info{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>.thread_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;driver_cam_encoder&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>.type<sp/>=<sp/>DriverCam,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>.stream_type<sp/>=<sp/>VISION_STREAM_DRIVER,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>.encoder_infos<sp/>=<sp/>{stream_driver_encoder_info}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref><sp/>cameras_logged[]<sp/>=<sp/>{road_camera_info,<sp/>wide_road_camera_info,<sp/>driver_camera_info};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_camera_info" kindref="compound">LogCameraInfo</ref><sp/>stream_cameras_logged[]<sp/>=<sp/>{stream_road_camera_info,<sp/>stream_wide_road_camera_info,<sp/>stream_driver_camera_info};</highlight></codeline>
    </programlisting>
    <location file="/tmp/openpilot/system/loggerd/loggerd.h"/>
  </compounddef>
</doxygen>
